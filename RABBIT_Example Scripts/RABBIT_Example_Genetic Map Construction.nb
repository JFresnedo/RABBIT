(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    312869,       6147]
NotebookOptionsPosition[    306436,       6052]
NotebookOutlinePosition[    306800,       6068]
CellTagsIndexPosition[    306757,       6065]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{"SetDirectory", "[", 
    RowBox[{"FileNameJoin", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ParentDirectory", "[", 
        RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ",", 
       "\"\<RABBIT_Packages\>\""}], "}"}], "]"}], "]"}], ";"}], 
  "Input"], "\[IndentingNewLine]", 
 RowBox[{"Needs", "[", "\"\<MagicMap`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"myParallelNeeds", "[", "\"\<MagicMap`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"SetDirectory", "[", 
  RowBox[{"NotebookDirectory", "[", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.584872542079793*^9, 3.5848725501762066`*^9}, {
   3.5849452270332193`*^9, 3.5849452273140197`*^9}, {3.584960367972127*^9, 
   3.5849604080457983`*^9}, {3.5849617233742113`*^9, 
   3.5849617338574295`*^9}, {3.585372426468047*^9, 3.585372427123248*^9}, {
   3.5853754731435986`*^9, 3.5853754735179996`*^9}, {3.604206318299*^9, 
   3.604206318709*^9}, 3.6070217827964497`*^9, {3.6072486275406322`*^9, 
   3.6072486313306704`*^9}, {3.6132816696601534`*^9, 
   3.6132816698701577`*^9}, {3.636364808226494*^9, 3.636364817466494*^9}, {
   3.6366127819191*^9, 3.636612804748872*^9}, 3.645416668887431*^9, {
   3.655884272181464*^9, 3.6558842772359934`*^9}, {3.6578833089205523`*^9, 
   3.657883309513356*^9}, {3.657883629207206*^9, 3.6578836296752086`*^9}, {
   3.6578841800122585`*^9, 3.6578841841774855`*^9}, {3.6579119907371144`*^9, 
   3.6579119913361483`*^9}, {3.65794566684623*^9, 3.6579456706670294`*^9}, {
   3.657961988592587*^9, 3.6579619893725967`*^9}, 3.662192235486985*^9, {
   3.666503779967811*^9, 3.666503786457411*^9}, {3.6717807483599014`*^9, 
   3.6717807524003015`*^9}, {3.6754891069132576`*^9, 
   3.6754891131032577`*^9}, {3.6754891839226575`*^9, 
   3.6754891845226574`*^9}, {3.682670108061674*^9, 3.682670115638189*^9}, {
   3.682670484848441*^9, 3.6826704999127445`*^9}, {3.6957292277115517`*^9, 
   3.6957292279205723`*^9}, {3.7271509382335196`*^9, 
   3.7271509392566223`*^9}, {3.739509672674045*^9, 3.739509675594045*^9}, 
   3.739513954850045*^9, {3.7415889632644634`*^9, 3.7415889653986764`*^9}, {
   3.741589319924405*^9, 3.741589321859598*^9}, {3.7415894020535374`*^9, 
   3.7415894266349373`*^9}, {3.741589811114636*^9, 3.741589815608677*^9}, {
   3.741592391134795*^9, 3.7415924094482183`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"e2db6874-9820-4455-8f2a-d02dbbb5962c"],

Cell[BoxData["\<\"C:\\\\Chaozhi\\\\GitHub Clones\\\\RABBIT\\\\RABBIT_Example \
Scripts\"\>"], "Output",
 CellChangeTimes->{3.765166078187395*^9, 3.765166837228195*^9, 
  3.7651670910411954`*^9, 3.768564668731764*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"14d09c12-30e6-4d08-86a2-89cddb3b39c0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "magicMap"}]], "Input",
 CellChangeTimes->{{3.739514136529045*^9, 3.7395141370200453`*^9}, {
  3.7415890157697*^9, 3.74158901616074*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"7098a0dc-0fea-49e3-bd39-bb26c26eeb05"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"magicMap[magicsnp, model, popdesign,ngroup]performs \
linage map construction in multi-parental populations. The magicsnp specifies \
the input genotypic data matrix or filename. The model specifies whether the \
maternally and paternally derived chromosomes are indepdent (\\\"indepModel\\\
\"), completely dependent (\\\"depModel\\\"), or  modeled jointly \
(\\\"jointModel\\\"). The popdesign specifies the breeding design information \
in several possible ways: a list of mating schemes from founder population to \
the last generation, a list of values denoting the junction distribution, or \
a filename for population  pedigree information. The ngroup specifies the \
number of linkage groups. \"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"magicMap", "[", 
                    RowBox[{
                    RowBox[{"MagicMap`Private`inputmagicSNP_", "?", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"ListQ", "[", "#1", "]"}], "||", 
                    RowBox[{"StringQ", "[", "#1", "]"}]}], "&"}], ")"}]}], 
                    ",", "MagicMap`Private`model_String", ",", 
                    RowBox[{"MagicMap`Private`popDesign_", "?", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"ListQ", "[", "#1", "]"}], "||", 
                    RowBox[{"StringQ", "[", "#1", "]"}]}], "&"}], ")"}]}], 
                    ",", "MagicMap`Private`ngroup_Integer", ",", 
                    RowBox[{"MagicMap`Private`opts", ":", 
                    RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"MagicMap`Private`starttime", ",", 
                    RowBox[{
                    "MagicMap`Private`magicSNP", "=", 
                    "MagicMap`Private`inputmagicSNP"}], ",", 
                    "MagicMap`Private`isbinning", ",", 
                    "MagicMap`Private`redosim", ",", 
                    "MagicMap`Private`maxfreeze", ",", 
                    "MagicMap`Private`isprint", ",", 
                    "MagicMap`Private`adjmtxfile", ",", 
                    "MagicMap`Private`dupebinfile", ",", 
                    "MagicMap`Private`magicsnpfile", ",", 
                    "MagicMap`Private`pairwisefile", ",", 
                    "MagicMap`Private`outputfiles", ",", 
                    "MagicMap`Private`skeletonmapfile", ",", 
                    "MagicMap`Private`rfbinfile", ",", 
                    "MagicMap`Private`refinemapfiles", ",", 
                    "MagicMap`Private`initmapfile", ",", 
                    "MagicMap`Private`finalmapfile", ",", 
                    "MagicMap`Private`map", ",", "MagicMap`Private`refmap", 
                    ",", "MagicMap`Private`outputid", ",", 
                    "MagicMap`Private`gg"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "MagicMap`Private`isbinning", ",", 
                    "MagicMap`Private`redosim", ",", 
                    "MagicMap`Private`maxfreeze", ",", 
                    "MagicMap`Private`isprint", ",", 
                    "MagicMap`Private`refmap", ",", 
                    "MagicMap`Private`outputid"}], "}"}], "=", 
                    RowBox[{"OptionValue", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    "dupebinMarker", ",", "redoSimilarity", ",", 
                    "maxFreezeIteration", ",", "isPrintTimeElapsed", ",", 
                    "referenceMap", ",", "outputFileID"}], "}"}], "]"}]}], 
                    ";", 
                    RowBox[{"If", "[", 
                    RowBox[{"MagicMap`Private`isprint", ",", 
                    RowBox[{
                    RowBox[{"MagicMap`Private`starttime", "=", 
                    RowBox[{"SessionTime", "[", "]"}]}], ";"}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{"MagicMap`Private`isbinning", ",", 
                    RowBox[{
                    RowBox[{"MagicMap`Private`dupebinfile", "=", 
                    RowBox[{
                    "MagicMap`Private`outputid", 
                    "<>", "\<\"_dupebin_binning.csv\"\>"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"MagicMap`Private`redosim", "||", 
                    RowBox[{"!", 
                    RowBox[{
                    "FileExistsQ", "[", "MagicMap`Private`dupebinfile", 
                    "]"}]}]}], ",", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{"MagicMap`Private`isprint", ",", 
                    RowBox[{
                    RowBox[{
                    "Print", 
                    "[", "\<\"------------------------------------------------\
-----Binning \
Markers----------------------------------------------------------------\"\>", 
                    "]"}], ";"}]}], "]"}], ";", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "MagicMap`Private`magicsnpfile", ",", 
                    "MagicMap`Private`dupebinfile", ",", 
                    "MagicMap`Private`adjmtxfile"}], "}"}], "=", 
                    RowBox[{"magicsnpBinning", "[", 
                    RowBox[{"MagicMap`Private`magicSNP", ",", 
                    RowBox[{"FilterRules", "[", 
                    RowBox[{
                    RowBox[{"{", "MagicMap`Private`opts", "}"}], ",", 
                    RowBox[{"Options", "[", "magicsnpBinning", "]"}]}], 
                    "]"}]}], "]"}]}]}], ",", 
                    RowBox[{
                    "MagicMap`Private`magicsnpfile", "=", 
                    "MagicMap`Private`magicSNP"}]}], "]"}]}], ",", 
                    RowBox[{
                    "MagicMap`Private`magicsnpfile", "=", 
                    "MagicMap`Private`magicSNP"}]}], "]"}], ";", 
                    RowBox[{"MagicMap`Private`pairwisefile", "=", 
                    RowBox[{
                    "MagicMap`Private`outputid", 
                    "<>", "\<\"_pairwise_similarity.txt\"\>"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"MagicMap`Private`redosim", "||", 
                    RowBox[{"!", 
                    RowBox[{
                    "FileExistsQ", "[", "MagicMap`Private`pairwisefile", 
                    "]"}]}]}], ",", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{"MagicMap`Private`isprint", ",", 
                    RowBox[{
                    RowBox[{
                    "Print", 
                    "[", "\<\"------------------------------------------------\
--Calculate \
PairwiseFraction----------------------------------------------------------\"\>\
", "]"}], ";"}]}], "]"}], ";", 
                    RowBox[{"MagicMap`Private`pairwisefile", "=", 
                    RowBox[{"magicPairwiseSimilarity", "[", 
                    RowBox[{
                    "MagicMap`Private`magicsnpfile", ",", 
                    "MagicMap`Private`model", ",", 
                    "MagicMap`Private`popDesign", ",", 
                    RowBox[{"FilterRules", "[", 
                    RowBox[{
                    RowBox[{"{", "MagicMap`Private`opts", "}"}], ",", 
                    RowBox[{
                    "Options", "[", "magicPairwiseSimilarity", "]"}]}], 
                    "]"}]}], "]"}]}]}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{"MagicMap`Private`isprint", ",", 
                    RowBox[{
                    RowBox[{
                    "Print", 
                    "[", "\<\"------------------------------------------------\
-----Construct \
LinkageMap-------------------------------------------------------------\"\>", 
                    "]"}], ";"}]}], "]"}], ";", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "MagicMap`Private`skeletonmapfile", ",", 
                    "MagicMap`Private`rfbinfile"}], "}"}], "=", 
                    RowBox[{"magicMapConstruct", "[", 
                    RowBox[{
                    "MagicMap`Private`pairwisefile", ",", 
                    "MagicMap`Private`ngroup", ",", 
                    RowBox[{"FilterRules", "[", 
                    RowBox[{
                    RowBox[{"{", "MagicMap`Private`opts", "}"}], ",", 
                    RowBox[{"Options", "[", "magicMapConstruct", "]"}]}], 
                    "]"}]}], "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"MagicMap`Private`isprint", "&&", 
                    RowBox[{"MagicMap`Private`refmap", "=!=", "None"}], "&&", 
                    RowBox[{"!", 
                    RowBox[{
                    "MissingQ", "[", "MagicMap`Private`rfbinfile", "]"}]}]}], 
                    ",", 
                    RowBox[{
                    RowBox[{"MagicMap`Private`initmapfile", "=", 
                    RowBox[{"magicMapExpand", "[", 
                    RowBox[{
                    "MagicMap`Private`skeletonmapfile", ",", 
                    "MagicMap`Private`rfbinfile", ",", 
                    RowBox[{"FilterRules", "[", 
                    RowBox[{
                    RowBox[{"{", "MagicMap`Private`opts", "}"}], ",", 
                    RowBox[{"Options", "[", "magicMapExpand", "]"}]}], 
                    "]"}]}], "]"}]}], ";", 
                    RowBox[{"MagicMap`Private`gg", "=", 
                    RowBox[{"MagicMap`Private`plotEstMap", "[", 
                    RowBox[{
                    "MagicMap`Private`refmap", ",", 
                    "MagicMap`Private`initmapfile", 
                    ",", "\<\"initalmap\"\>"}], "]"}]}], ";", 
                    RowBox[{"Print", "[", 
                    RowBox[{"GraphicsRow", "[", 
                    RowBox[{"MagicMap`Private`gg", ",", 
                    RowBox[{"ImageSize", "\[Rule]", "1000"}]}], "]"}], "]"}], 
                    ";"}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{"MagicMap`Private`isprint", ",", 
                    RowBox[{
                    RowBox[{
                    "Print", 
                    "[", "\<\"------------------------------------------------\
-------Refine \
LinkageMap-------------------------------------------------------------\"\>", 
                    "]"}], ";"}]}], "]"}], ";", 
                    RowBox[{"MagicMap`Private`refinemapfiles", "=", 
                    RowBox[{"magicMapRefine", "[", 
                    RowBox[{
                    "MagicMap`Private`skeletonmapfile", ",", 
                    "MagicMap`Private`rfbinfile", ",", 
                    "MagicMap`Private`magicsnpfile", ",", 
                    "MagicMap`Private`model", ",", 
                    "MagicMap`Private`popDesign", ",", 
                    RowBox[{"FilterRules", "[", 
                    RowBox[{
                    RowBox[{"{", "MagicMap`Private`opts", "}"}], ",", 
                    RowBox[{"Options", "[", "magicMapRefine", "]"}]}], 
                    "]"}]}], "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{"MagicMap`Private`isprint", ",", 
                    RowBox[{
                    RowBox[{
                    "Print", 
                    "[", "\<\"------------------------------------------------\
--------Export \
finalMap--------------------------------------------------------------\"\>", 
                    "]"}], ";"}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{"MagicMap`Private`isbinning", ",", 
                    RowBox[{"MagicMap`Private`finalmapfile", "=", 
                    RowBox[{"magicMapExpand", "[", 
                    RowBox[{
                    RowBox[{
                    "MagicMap`Private`refinemapfiles", "\[LeftDoubleBracket]",
                     "1", "\[RightDoubleBracket]"}], ",", 
                    "MagicMap`Private`dupebinfile", ",", 
                    RowBox[{"FilterRules", "[", 
                    RowBox[{
                    RowBox[{"{", "MagicMap`Private`opts", "}"}], ",", 
                    RowBox[{"Options", "[", "magicMapExpand", "]"}]}], 
                    "]"}]}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"MagicMap`Private`map", "=", 
                    RowBox[{"Import", "[", 
                    RowBox[{
                    "MagicMap`Private`refinemapfiles", "\[LeftDoubleBracket]",
                     "1", "\[RightDoubleBracket]"}], "]"}]}], ";", 
                    RowBox[{"MagicMap`Private`map", "=", 
                    RowBox[{"MagicMap`Private`map", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", 
                    RowBox[{"1", ";;", "3"}]}], "\[RightDoubleBracket]"}]}], 
                    ";", 
                    RowBox[{"MagicMap`Private`finalmapfile", "=", 
                    RowBox[{
                    "MagicMap`Private`outputid", 
                    "<>", "\<\"_finalmap.csv\"\>"}]}], ";", 
                    RowBox[{"csvExport", "[", 
                    RowBox[{
                    "MagicMap`Private`finalmapfile", ",", 
                    "MagicMap`Private`map"}], "]"}]}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"MagicMap`Private`isprint", "&&", 
                    RowBox[{"MagicMap`Private`refmap", "=!=", "None"}]}], ",", 
                    RowBox[{
                    RowBox[{"MagicMap`Private`gg", "=", 
                    RowBox[{"MagicMap`Private`plotEstMap", "[", 
                    RowBox[{
                    "MagicMap`Private`refmap", ",", 
                    "MagicMap`Private`finalmapfile", 
                    ",", "\<\"finalmap\"\>"}], "]"}]}], ";", 
                    RowBox[{"Print", "[", 
                    RowBox[{"GraphicsRow", "[", 
                    RowBox[{"MagicMap`Private`gg", ",", 
                    RowBox[{"ImageSize", "\[Rule]", "1000"}]}], "]"}], "]"}], 
                    ";"}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{"MagicMap`Private`isprint", ",", 
                    RowBox[{
                    RowBox[{"Print", "[", 
                    RowBox[{"\<\"Done. Finished date = \"\>", ",", 
                    RowBox[{"DateString", "[", "]"}], 
                    ",", "\<\".\\tTime elapsed in all steps of magicMap = \
\"\>", ",", 
                    RowBox[{"Round", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"SessionTime", "[", "]"}], "-", 
                    "MagicMap`Private`starttime"}], ",", "0.01`"}], "]"}], 
                    ",", "\<\" seconds.\"\>"}], "]"}], ";"}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{"MagicMap`Private`isprint", ",", 
                    RowBox[{
                    RowBox[{
                    "Print", 
                    "[", "\<\"------------------------------------------------\
------------End---------------------------------------------------------------\
------\"\>", "]"}], ";"}]}], "]"}], ";", 
                    RowBox[{"MagicMap`Private`outputfiles", "=", 
                    RowBox[{"{", 
                    RowBox[{"MagicMap`Private`pairwisefile", ",", 
                    RowBox[{"DeleteMissing", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    "MagicMap`Private`skeletonmapfile", ",", 
                    "MagicMap`Private`rfbinfile"}], "}"}], "]"}], ",", 
                    "MagicMap`Private`refinemapfiles", ",", 
                    "MagicMap`Private`finalmapfile"}], "}"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{"MagicMap`Private`isbinning", ",", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    "MagicMap`Private`dupebinfile", ",", 
                    "MagicMap`Private`magicsnpfile", ",", 
                    "MagicMap`Private`adjmtxfile"}], "}"}], "}"}], ",", 
                    "MagicMap`Private`outputfiles"}], "]"}], ",", 
                    "MagicMap`Private`outputfiles"}], "]"}]}]}], "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   PaneSelectorBox[{True->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    
                    TemplateBox[{
                    "\[ThickSpace]","\"\[ThickSpace]\"",StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False],DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpener"]]},
                    "RowWithSeparators"], True->
                    TemplateBox[{
                    "\[ThickSpace]","\"\[ThickSpace]\"",StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False],DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 9] = 
                    False),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"], False->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    
                    TemplateBox[{
                    "\[ThickSpace]","\"\[ThickSpace]\"",StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False],DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpener"]]},
                    "RowWithSeparators"], True->
                    
                    TemplateBox[{
                    "\[ThickSpace]","\"\[ThickSpace]\"",StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False],DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 9] = 
                    True),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 9]]], 
                   PaneSelectorBox[{True->GridBox[{
                    {
                    RowBox[{"outputFileID", "\[Rule]", "\<\"\"\>"}]},
                    {
                    RowBox[{"isPrintTimeElapsed", "\[Rule]", "True"}]},
                    {
                    RowBox[{"isRunInParallel", "\[Rule]", "True"}]},
                    {
                    RowBox[{"founderAllelicError", "\[Rule]", "0.005`"}]},
                    {
                    RowBox[{"offspringAllelicError", "\[Rule]", "0.005`"}]},
                    {
                    RowBox[{"isFounderInbred", "\[Rule]", "True"}]},
                    {
                    RowBox[{"computingLodType", "\[Rule]", "\<\"both\"\>"}]},
                    {
                    RowBox[{"sequenceDataOption", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"isFounderAllelicDepth", "\[Rule]", "Automatic"}],
                     ",", 
                    RowBox[{
                    "isOffspringAllelicDepth", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"minPhredQualScore", "\[Rule]", "30"}], ",", 
                    RowBox[{
                    "priorFounderCallThreshold", "\[Rule]", "0.99`"}]}], 
                    "}"}]}]},
                    {
                    RowBox[{"minLodSaving", "\[Rule]", "1"}]},
                    {
                    RowBox[{"miniComponentSize", "\[Rule]", "5"}]},
                    {
                    RowBox[{
                    "graphLaplacian", "\[Rule]", "\<\"rwNormalized\"\>"}]},
                    {
                    RowBox[{
                    "eigenVectorSelection", "\[Rule]", "\<\"eigenratio\"\>"}]},
                    {
                    RowBox[{"nConnectedComponent", "\[Rule]", "1"}]},
                    {
                    RowBox[{"lodTypeClustering", "\[Rule]", "\<\"both\"\>"}]},
                    {
                    RowBox[{"lodTypeOrdering", "\[Rule]", "\<\"both\"\>"}]},
                    {
                    RowBox[{"minLodClustering", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"minLodOrdering", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"nNeighborFunction", "\[Rule]", 
                    RowBox[{"(", 
                    RowBox[{
                    SqrtBox["#1"], "&"}], ")"}]}]},
                    {
                    RowBox[{"nNeighborSaving", "\[Rule]", "10"}]},
                    {
                    RowBox[{"referenceMap", "\[Rule]", "None"}]},
                    {
                    RowBox[{"delStrongCrossLink", "\[Rule]", "True"}]},
                    {
                    RowBox[{"minLodSegregateBin", "\[Rule]", "\[Infinity]"}]},
                    {
                    RowBox[{"isImputingFounder", "\[Rule]", "True"}]},
                    {
                    RowBox[{"detectingThreshold", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"imputingThreshold", "\[Rule]", "1"}]},
                    {
                    RowBox[{"nReplicateAnnealing", "\[Rule]", "1"}]},
                    {
                    RowBox[{"initTemperature", "\[Rule]", "2"}]},
                    {
                    RowBox[{"coolingRatio", "\[Rule]", "0.85`"}]},
                    {
                    RowBox[{"freezingTemperature", "\[Rule]", "0.5`"}]},
                    {
                    RowBox[{"deltLoglThreshold", "\[Rule]", "1"}]},
                    {
                    RowBox[{"maxFreezeIteration", "\[Rule]", "15"}]},
                    {
                    RowBox[{"dupebinMarker", "\[Rule]", "True"}]},
                    {
                    RowBox[{"redoSimilarity", "\[Rule]", "True"}]},
                    {
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"","\"\[InvisibleSpace]\"","33","\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{1.}}}], False->
                    RowBox[{
                    RowBox[{"outputFileID", "\[Rule]", "\<\"\"\>"}], 
                    "\[ThinSpace]", 
                    StyleBox["\<\"\[Ellipsis]\"\>", "InformationRowOpener",
                    StripOnInput->False], "\[ThinSpace]", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"","\"\[InvisibleSpace]\"","33","\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 9]],
                    BaselinePosition->Baseline,
                    ImageSize->Automatic]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"MagicMap`magicMap\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"magicMap[magicsnp, model, popdesign,ngroup]performs \
linage map construction in multi-parental populations. The magicsnp specifies \
the input genotypic data matrix or filename. The model specifies whether the \
maternally and paternally derived chromosomes are indepdent (\\\"indepModel\\\
\"), completely dependent (\\\"depModel\\\"), or  modeled jointly \
(\\\"jointModel\\\"). The popdesign specifies the breeding design information \
in several possible ways: a list of mating schemes from founder population to \
the last generation, a list of values denoting the junction distribution, or \
a filename for population  pedigree information. The ngroup specifies the \
number of linkage groups. \"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "magicMap[magicsnp, model, popdesign,ngroup]performs linage map \
construction in multi-parental populations. The magicsnp specifies the input \
genotypic data matrix or filename. The model specifies whether the maternally \
and paternally derived chromosomes are indepdent (\"indepModel\"), completely \
dependent (\"depModel\"), or  modeled jointly (\"jointModel\"). The popdesign \
specifies the breeding design information in several possible ways: a list of \
mating schemes from founder population to the last generation, a list of \
values denoting the junction distribution, or a filename for population  \
pedigree information. The ngroup specifies the number of linkage groups. ", 
    "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
    "DownValues" -> 
    Information`InformationValueForm[
     DownValues, MagicMap`magicMap, {MagicMap`magicMap[
         PatternTest[
          Pattern[MagicMap`Private`inputmagicSNP, 
           Blank[]], Or[
           ListQ[#], 
           StringQ[#]]& ], 
         Pattern[MagicMap`Private`model, 
          Blank[String]], 
         PatternTest[
          Pattern[MagicMap`Private`popDesign, 
           Blank[]], Or[
           ListQ[#], 
           StringQ[#]]& ], 
         Pattern[MagicMap`Private`ngroup, 
          Blank[Integer]], 
         Pattern[MagicMap`Private`opts, 
          OptionsPattern[]]] :> 
       Module[{MagicMap`Private`starttime, MagicMap`Private`magicSNP = 
          MagicMap`Private`inputmagicSNP, MagicMap`Private`isbinning, 
          MagicMap`Private`redosim, MagicMap`Private`maxfreeze, 
          MagicMap`Private`isprint, MagicMap`Private`adjmtxfile, 
          MagicMap`Private`dupebinfile, MagicMap`Private`magicsnpfile, 
          MagicMap`Private`pairwisefile, MagicMap`Private`outputfiles, 
          MagicMap`Private`skeletonmapfile, MagicMap`Private`rfbinfile, 
          MagicMap`Private`refinemapfiles, MagicMap`Private`initmapfile, 
          MagicMap`Private`finalmapfile, MagicMap`Private`map, 
          MagicMap`Private`refmap, MagicMap`Private`outputid, 
          MagicMap`Private`gg}, {
           MagicMap`Private`isbinning, MagicMap`Private`redosim, 
            MagicMap`Private`maxfreeze, MagicMap`Private`isprint, 
            MagicMap`Private`refmap, MagicMap`Private`outputid} = 
          OptionValue[{
            MagicMap`dupebinMarker, MagicMap`redoSimilarity, 
             MagicMap`maxFreezeIteration, MagicDefinition`isPrintTimeElapsed, 
             MagicMap`referenceMap, MagicDefinition`outputFileID}]; 
         If[MagicMap`Private`isprint, 
           MagicMap`Private`starttime = SessionTime[]; Null]; 
         If[MagicMap`Private`isbinning, 
           MagicMap`Private`dupebinfile = 
            StringJoin[MagicMap`Private`outputid, "_dupebin_binning.csv"]; If[
             Or[MagicMap`Private`redosim, 
              Not[
               FileExistsQ[MagicMap`Private`dupebinfile]]], 
             If[MagicMap`Private`isprint, 
               Print["-----------------------------------------------------\
Binning Markers---------------------------------------------------------------\
-"]; Null]; {MagicMap`Private`magicsnpfile, MagicMap`Private`dupebinfile, 
                MagicMap`Private`adjmtxfile} = 
              MagicDataFilter`magicsnpBinning[MagicMap`Private`magicSNP, 
                FilterRules[{MagicMap`Private`opts}, 
                 Options[MagicDataFilter`magicsnpBinning]]], 
             MagicMap`Private`magicsnpfile = MagicMap`Private`magicSNP], 
           MagicMap`Private`magicsnpfile = MagicMap`Private`magicSNP]; 
         MagicMap`Private`pairwisefile = 
          StringJoin[MagicMap`Private`outputid, "_pairwise_similarity.txt"]; 
         If[
           Or[MagicMap`Private`redosim, 
            Not[
             FileExistsQ[MagicMap`Private`pairwisefile]]], 
           If[MagicMap`Private`isprint, 
             Print[
              "--------------------------------------------------Calculate \
PairwiseFraction----------------------------------------------------------"]; 
             Null]; MagicMap`Private`pairwisefile = 
            MagicMap`magicPairwiseSimilarity[
             MagicMap`Private`magicsnpfile, MagicMap`Private`model, 
              MagicMap`Private`popDesign, 
              FilterRules[{MagicMap`Private`opts}, 
               Options[MagicMap`magicPairwiseSimilarity]]]]; 
         If[MagicMap`Private`isprint, 
           Print["-----------------------------------------------------\
Construct \
LinkageMap-------------------------------------------------------------"]; 
           Null]; {MagicMap`Private`skeletonmapfile, 
            MagicMap`Private`rfbinfile} = 
          MagicMap`magicMapConstruct[
           MagicMap`Private`pairwisefile, MagicMap`Private`ngroup, 
            FilterRules[{MagicMap`Private`opts}, 
             Options[MagicMap`magicMapConstruct]]]; If[
           And[MagicMap`Private`isprint, MagicMap`Private`refmap =!= None, 
            Not[
             MissingQ[MagicMap`Private`rfbinfile]]], 
           MagicMap`Private`initmapfile = 
            MagicMap`magicMapExpand[
             MagicMap`Private`skeletonmapfile, MagicMap`Private`rfbinfile, 
              FilterRules[{MagicMap`Private`opts}, 
               Options[MagicMap`magicMapExpand]]]; 
           MagicMap`Private`gg = 
            MagicMap`Private`plotEstMap[
             MagicMap`Private`refmap, MagicMap`Private`initmapfile, 
              "initalmap"]; Print[
             GraphicsRow[MagicMap`Private`gg, ImageSize -> 1000]]; Null]; 
         If[MagicMap`Private`isprint, 
           Print["-------------------------------------------------------\
Refine LinkageMap-------------------------------------------------------------\
"]; Null]; 
         MagicMap`Private`refinemapfiles = 
          MagicMap`magicMapRefine[
           MagicMap`Private`skeletonmapfile, MagicMap`Private`rfbinfile, 
            MagicMap`Private`magicsnpfile, MagicMap`Private`model, 
            MagicMap`Private`popDesign, 
            FilterRules[{MagicMap`Private`opts}, 
             Options[MagicMap`magicMapRefine]]]; 
         If[MagicMap`Private`isprint, 
           Print["--------------------------------------------------------\
Export finalMap--------------------------------------------------------------\
"]; Null]; 
         If[MagicMap`Private`isbinning, MagicMap`Private`finalmapfile = 
           MagicMap`magicMapExpand[
             Part[MagicMap`Private`refinemapfiles, 1], 
             MagicMap`Private`dupebinfile, 
             FilterRules[{MagicMap`Private`opts}, 
              Options[MagicMap`magicMapExpand]]], 
           MagicMap`Private`map = Import[
              Part[MagicMap`Private`refinemapfiles, 1]]; 
           MagicMap`Private`map = Part[MagicMap`Private`map, All, 
              Span[1, 3]]; 
           MagicMap`Private`finalmapfile = 
            StringJoin[MagicMap`Private`outputid, "_finalmap.csv"]; 
           MagicDefinition`csvExport[
            MagicMap`Private`finalmapfile, MagicMap`Private`map]]; If[
           And[MagicMap`Private`isprint, MagicMap`Private`refmap =!= None], 
           MagicMap`Private`gg = 
            MagicMap`Private`plotEstMap[
             MagicMap`Private`refmap, MagicMap`Private`finalmapfile, 
              "finalmap"]; Print[
             GraphicsRow[MagicMap`Private`gg, ImageSize -> 1000]]; Null]; 
         If[MagicMap`Private`isprint, Print["Done. Finished date = ", 
             DateString[], ".\tTime elapsed in all steps of magicMap = ", 
             Round[SessionTime[] - MagicMap`Private`starttime, 0.01], 
             " seconds."]; Null]; 
         If[MagicMap`Private`isprint, 
           Print["------------------------------------------------------------\
End---------------------------------------------------------------------"]; 
           Null]; MagicMap`Private`outputfiles = {
           MagicMap`Private`pairwisefile, 
            
            DeleteMissing[{
             MagicMap`Private`skeletonmapfile, MagicMap`Private`rfbinfile}], 
            MagicMap`Private`refinemapfiles, MagicMap`Private`finalmapfile}; 
         If[MagicMap`Private`isbinning, 
           
           Join[{{MagicMap`Private`dupebinfile, MagicMap`Private`magicsnpfile,
               MagicMap`Private`adjmtxfile}}, MagicMap`Private`outputfiles], 
           MagicMap`Private`outputfiles]]}], "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> {
     MagicDefinition`outputFileID -> "", MagicDefinition`isPrintTimeElapsed -> 
      True, MagicDefinition`isRunInParallel -> True, 
      MagicDefinition`founderAllelicError -> 0.005, 
      MagicDefinition`offspringAllelicError -> 0.005, 
      MagicDefinition`isFounderInbred -> True, MagicMap`computingLodType -> 
      "both", MagicDefinition`sequenceDataOption -> {
       MagicDefinition`isFounderAllelicDepth -> Automatic, 
        MagicDefinition`isOffspringAllelicDepth -> Automatic, 
        MagicDefinition`minPhredQualScore -> 30, 
        MagicDefinition`priorFounderCallThreshold -> 0.99}, 
      MagicMap`minLodSaving -> 1, MagicMap`miniComponentSize -> 5, 
      SpectralOrdering`graphLaplacian -> "rwNormalized", 
      SpectralOrdering`eigenVectorSelection -> "eigenratio", 
      MagicMap`nConnectedComponent -> 1, MagicMap`lodTypeClustering -> "both",
       MagicMap`lodTypeOrdering -> "both", MagicMap`minLodClustering -> 
      Automatic, MagicMap`minLodOrdering -> Automatic, 
      MagicMap`nNeighborFunction -> (Sqrt[#]& ), MagicMap`nNeighborSaving -> 
      10, MagicMap`referenceMap -> None, MagicMap`delStrongCrossLink -> True, 
      MagicMap`minLodSegregateBin -> DirectedInfinity[1], 
      MagicMap`isImputingFounder -> True, MagicDefinition`detectingThreshold -> 
      Automatic, MagicDefinition`imputingThreshold -> 1, 
      MagicMap`nReplicateAnnealing -> 1, MagicMap`initTemperature -> 2, 
      MagicMap`coolingRatio -> 0.85, MagicMap`freezingTemperature -> 0.5, 
      MagicMap`deltLoglThreshold -> 1, MagicMap`maxFreezeIteration -> 15, 
      MagicMap`dupebinMarker -> True, MagicMap`redoSimilarity -> True}, 
    "Attributes" -> {}, "FullName" -> "MagicMap`magicMap"], False]]], "Output",
 CellChangeTimes->{3.7685646691848927`*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"a90b68f9-f020-4623-9e13-0d1ef63be24f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Options", "[", "magicMap", "]"}]], "Input",
 CellChangeTimes->{{3.765018861242956*^9, 3.7650188662602534`*^9}, 
   3.765019229050025*^9, 3.765019830215763*^9},
 CellLabel->"In[6]:=",ExpressionUUID->"63e1d1b7-9b3d-4ad9-85f2-582e76801f04"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"outputFileID", "\[Rule]", "\<\"\"\>"}], ",", 
   RowBox[{"isPrintTimeElapsed", "\[Rule]", "True"}], ",", 
   RowBox[{"isRunInParallel", "\[Rule]", "True"}], ",", 
   RowBox[{"founderAllelicError", "\[Rule]", "0.005`"}], ",", 
   RowBox[{"offspringAllelicError", "\[Rule]", "0.005`"}], ",", 
   RowBox[{"isFounderInbred", "\[Rule]", "True"}], ",", 
   RowBox[{"computingLodType", "\[Rule]", "\<\"both\"\>"}], ",", 
   RowBox[{"sequenceDataOption", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"isFounderAllelicDepth", "\[Rule]", "Automatic"}], ",", 
      RowBox[{"isOffspringAllelicDepth", "\[Rule]", "Automatic"}], ",", 
      RowBox[{"minPhredQualScore", "\[Rule]", "30"}], ",", 
      RowBox[{"priorFounderCallThreshold", "\[Rule]", "0.99`"}]}], "}"}]}], 
   ",", 
   RowBox[{"minLodSaving", "\[Rule]", "1"}], ",", 
   RowBox[{"miniComponentSize", "\[Rule]", "5"}], ",", 
   RowBox[{"graphLaplacian", "\[Rule]", "\<\"rwNormalized\"\>"}], ",", 
   RowBox[{"eigenVectorSelection", "\[Rule]", "\<\"eigenratio\"\>"}], ",", 
   RowBox[{"nConnectedComponent", "\[Rule]", "1"}], ",", 
   RowBox[{"lodTypeClustering", "\[Rule]", "\<\"both\"\>"}], ",", 
   RowBox[{"lodTypeOrdering", "\[Rule]", "\<\"both\"\>"}], ",", 
   RowBox[{"minLodClustering", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"minLodOrdering", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"nNeighborFunction", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{
      SqrtBox["#1"], "&"}], ")"}]}], ",", 
   RowBox[{"nNeighborSaving", "\[Rule]", "10"}], ",", 
   RowBox[{"referenceMap", "\[Rule]", "None"}], ",", 
   RowBox[{"delStrongCrossLink", "\[Rule]", "True"}], ",", 
   RowBox[{"minLodSegregateBin", "\[Rule]", "\[Infinity]"}], ",", 
   RowBox[{"isImputingFounder", "\[Rule]", "True"}], ",", 
   RowBox[{"detectingThreshold", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"imputingThreshold", "\[Rule]", "1"}], ",", 
   RowBox[{"nReplicateAnnealing", "\[Rule]", "1"}], ",", 
   RowBox[{"initTemperature", "\[Rule]", "2"}], ",", 
   RowBox[{"coolingRatio", "\[Rule]", "0.85`"}], ",", 
   RowBox[{"freezingTemperature", "\[Rule]", "0.5`"}], ",", 
   RowBox[{"deltLoglThreshold", "\[Rule]", "1"}], ",", 
   RowBox[{"maxFreezeIteration", "\[Rule]", "15"}], ",", 
   RowBox[{"dupebinMarker", "\[Rule]", "True"}], ",", 
   RowBox[{"redoSimilarity", "\[Rule]", "True"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7650188666612935`*^9, 3.76501922951667*^9, 
  3.765019830539796*^9, 3.7651660786343956`*^9, 3.7685646692786465`*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"4cb732be-1bc8-419f-9747-fb36b961a7b5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"dataid", "=", "\"\<Example\>\""}], "\[IndentingNewLine]", 
 RowBox[{"magicsnpfile", "=", 
  RowBox[{
  "dataid", "<>", "\"\<_ObservedGenotype.csv\>\""}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"model", "=", "\"\<jointModel\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"popdesignfile", "=", 
  RowBox[{
  "dataid", "<>", "\"\<_PedigreeInfor.csv\>\""}]}], "\[IndentingNewLine]", 
 RowBox[{"ngroup", "=", "5"}]}], "Input",
 CellChangeTimes->{{3.7415891048515825`*^9, 3.7415891081639137`*^9}, {
   3.741589227585409*^9, 3.7415892583530717`*^9}, 3.7415897752628613`*^9, {
   3.741589851753072*^9, 3.741589855944491*^9}, 3.7415907578295*^9, 
   3.741592431474414*^9, {3.7415943124269533`*^9, 3.7415943150792184`*^9}, {
   3.741594423613819*^9, 3.741594423835841*^9}, {3.741594915321555*^9, 
   3.7415949192949553`*^9}, {3.7415950930861473`*^9, 3.741595098777111*^9}, {
   3.7415956940694847`*^9, 3.7415956943965178`*^9}, {3.7415961902147884`*^9, 
   3.7415961925660233`*^9}, {3.744624873182199*^9, 3.744624875677199*^9}, {
   3.744625563810399*^9, 3.744625565936399*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"05387cc4-fbfc-4b70-b243-5f629c17f25f"],

Cell[BoxData["\<\"Example\"\>"], "Output",
 CellChangeTimes->{3.765166078661395*^9, 3.7685646693255177`*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"096b6f43-d02f-4331-bdb9-b26a7e8649f7"],

Cell[BoxData["\<\"Example_ObservedGenotype.csv\"\>"], "Output",
 CellChangeTimes->{3.765166078661395*^9, 3.7685646693411493`*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"a8d646bc-4bb1-4350-ba5c-709dfe80a9ca"],

Cell[BoxData["\<\"Example_PedigreeInfor.csv\"\>"], "Output",
 CellChangeTimes->{3.765166078661395*^9, 3.7685646693411493`*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"d9b12db9-443b-419d-aee5-a86b0d20cd61"],

Cell[BoxData["5"], "Output",
 CellChangeTimes->{3.765166078661395*^9, 3.7685646693411493`*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"b8729b02-9761-4afc-ad56-2a70553e9386"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"take", " ", "every", " ", "second", " ", 
     RowBox[{"marker", ".", " ", "set"}], " ", "thin"}], " ", "=", 
    RowBox[{"1", " ", "using", " ", "all", " ", "markers"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"thin", "=", "2"}], ";"}]}]], "Input",
 CellChangeTimes->{{3.744627818975799*^9, 3.744627854102399*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"bf53121e-49b8-4c5b-b9aa-99cc175d12d5"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"magicsnp", "=", 
    RowBox[{"Import", "[", "magicsnpfile", "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "thinning", " ", "markers", " ", "to", " ", "reduce", " ", "demonstration",
     " ", "time"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"magicsnp", "=", 
   RowBox[{"getsubMagicSNP", "[", 
    RowBox[{"magicsnp", ",", "All", ",", 
     RowBox[{";;", ";;", "thin"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"refmapfile", "=", 
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{"dataid", "<>", "\"\<_refmap.csv\>\""}], ",", 
    RowBox[{"Transpose", "[", 
     RowBox[{"magicsnp", "[", 
      RowBox[{"[", 
       RowBox[{"2", ";;", "4"}], "]"}], "]"}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"magicsnp", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"3", ";;", "4"}], ",", 
      RowBox[{"2", ";;"}]}], "]"}], "]"}], "=", "\"\<NA\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"magicsnp", "[", 
   RowBox[{"[", 
    RowBox[{
     RowBox[{"2", ";;", "10"}], ",", 
     RowBox[{";;", "10"}]}], "]"}], "]"}], "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.741592628421375*^9, 3.7415926697465725`*^9}, {
   3.7415927035051713`*^9, 3.7415928653348703`*^9}, 3.74159295757787*^9, {
   3.74159298780587*^9, 3.7415929881978703`*^9}, {3.741593384319274*^9, 
   3.7415933844782896`*^9}, {3.7415934615758967`*^9, 
   3.7415934713940415`*^9}, {3.741594116841451*^9, 3.7415941208568525`*^9}, 
   3.7415941626680264`*^9, 3.741594288823797*^9, {3.741596200847443*^9, 
   3.7415962013454933`*^9}, {3.744627815106799*^9, 3.744627815464799*^9}, {
   3.7458245910502186`*^9, 3.745824599965418*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"ca5facc7-63f5-4d82-94f3-b7fe8b34631a"],

Cell[BoxData["\<\"Example_refmap.csv\"\>"], "Output",
 CellChangeTimes->{3.7651660790123954`*^9, 3.7685646697473927`*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"4957f420-e1e2-44d8-b6ff-7c3a9a3cc113"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"\<\"marker\"\>", "\<\"MN1_29291\"\>", "\<\"MN1_112907\"\>", \
"\<\"MN1_197787\"\>", "\<\"MN1_444820\"\>", "\<\"MN1_592863\"\>", "\<\"BKN118\
\"\>", "\<\"CRY2_1021\"\>", "\<\"AXR1_381\"\>", "\<\"MN1_1602026\"\>"},
     {"\<\"chromosome\"\>", "\<\"NA\"\>", "\<\"NA\"\>", "\<\"NA\"\>", "\<\"NA\
\"\>", "\<\"NA\"\>", "\<\"NA\"\>", "\<\"NA\"\>", "\<\"NA\"\>", "\<\"NA\"\>"},
     {"\<\"pos(cM)\"\>", "\<\"NA\"\>", "\<\"NA\"\>", "\<\"NA\"\>", \
"\<\"NA\"\>", "\<\"NA\"\>", "\<\"NA\"\>", "\<\"NA\"\>", "\<\"NA\"\>", "\<\"NA\
\"\>"},
     {"\<\"Founder1\"\>", "\<\"N\"\>", "2", "1", "\<\"N\"\>", "1", "1", "2", 
      "2", "2"},
     {"\<\"Founder2\"\>", "2", "1", "\<\"N\"\>", "2", "2", "2", "1", "2", "1"},
     {"\<\"Founder3\"\>", "2", "1", "2", "2", "1", "2", "1", "1", "1"},
     {"\<\"Founder4\"\>", "1", "1", "2", "1", "2", "2", "1", "1", "1"},
     {"\<\"ProgenyLine1\"\>", "11", "11", "22", "11", "22", "22", "11", 
      "11", "\<\"NN\"\>"},
     {"\<\"ProgenyLine2\"\>", "\<\"NN\"\>", "\<\"NN\"\>", "11", "11", "11", 
      "11", "22", "22", "22"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.7651660790123954`*^9, 3.7685646697473927`*^9},
 CellLabel->
  "Out[17]//MatrixForm=",ExpressionUUID->"b3d3c932-c4c4-4df6-a7ca-\
72384db189d6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Options", "[", "magicMap", "]"}]], "Input",
 CellChangeTimes->{{3.74159287218187*^9, 3.74159287586087*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"25d9e3af-4351-4e66-86e0-0dda30acf2b1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"outputFileID", "\[Rule]", "\<\"\"\>"}], ",", 
   RowBox[{"isPrintTimeElapsed", "\[Rule]", "True"}], ",", 
   RowBox[{"isRunInParallel", "\[Rule]", "True"}], ",", 
   RowBox[{"founderAllelicError", "\[Rule]", "0.005`"}], ",", 
   RowBox[{"offspringAllelicError", "\[Rule]", "0.005`"}], ",", 
   RowBox[{"isFounderInbred", "\[Rule]", "True"}], ",", 
   RowBox[{"computingLodType", "\[Rule]", "\<\"both\"\>"}], ",", 
   RowBox[{"sequenceDataOption", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"isFounderAllelicDepth", "\[Rule]", "Automatic"}], ",", 
      RowBox[{"isOffspringAllelicDepth", "\[Rule]", "Automatic"}], ",", 
      RowBox[{"minPhredQualScore", "\[Rule]", "30"}], ",", 
      RowBox[{"priorFounderCallThreshold", "\[Rule]", "0.99`"}]}], "}"}]}], 
   ",", 
   RowBox[{"minLodSaving", "\[Rule]", "1"}], ",", 
   RowBox[{"miniComponentSize", "\[Rule]", "5"}], ",", 
   RowBox[{"graphLaplacian", "\[Rule]", "\<\"rwNormalized\"\>"}], ",", 
   RowBox[{"eigenVectorSelection", "\[Rule]", "\<\"eigenratio\"\>"}], ",", 
   RowBox[{"nConnectedComponent", "\[Rule]", "1"}], ",", 
   RowBox[{"lodTypeClustering", "\[Rule]", "\<\"both\"\>"}], ",", 
   RowBox[{"lodTypeOrdering", "\[Rule]", "\<\"both\"\>"}], ",", 
   RowBox[{"minLodClustering", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"minLodOrdering", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"nNeighborFunction", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{
      SqrtBox["#1"], "&"}], ")"}]}], ",", 
   RowBox[{"nNeighborSaving", "\[Rule]", "10"}], ",", 
   RowBox[{"referenceMap", "\[Rule]", "None"}], ",", 
   RowBox[{"delStrongCrossLink", "\[Rule]", "True"}], ",", 
   RowBox[{"minLodSegregateBin", "\[Rule]", "\[Infinity]"}], ",", 
   RowBox[{"isImputingFounder", "\[Rule]", "True"}], ",", 
   RowBox[{"detectingThreshold", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"imputingThreshold", "\[Rule]", "1"}], ",", 
   RowBox[{"nReplicateAnnealing", "\[Rule]", "1"}], ",", 
   RowBox[{"initTemperature", "\[Rule]", "2"}], ",", 
   RowBox[{"coolingRatio", "\[Rule]", "0.85`"}], ",", 
   RowBox[{"freezingTemperature", "\[Rule]", "0.5`"}], ",", 
   RowBox[{"deltLoglThreshold", "\[Rule]", "1"}], ",", 
   RowBox[{"maxFreezeIteration", "\[Rule]", "15"}], ",", 
   RowBox[{"dupebinMarker", "\[Rule]", "True"}], ",", 
   RowBox[{"redoSimilarity", "\[Rule]", "True"}]}], "}"}]], "Output",
 CellChangeTimes->{3.765166079069395*^9, 3.7685646698723974`*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"079547f1-3c87-4ce2-a0c8-820296e033f1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "refmapfile", " ", "is", " ", "used", " ", "only", " ", "for", " ", 
    "monitoring", " ", "the", " ", "iterative", " ", "improvement", " ", "of",
     " ", "genetic", " ", "map"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"outputfiles", "=", 
      RowBox[{"magicMap", "[", 
       RowBox[{
       "magicsnp", ",", "model", ",", "popdesignfile", ",", "ngroup", ",", 
        RowBox[{"referenceMap", "\[Rule]", "refmapfile"}], ",", 
        RowBox[{"outputFileID", "\[Rule]", 
         RowBox[{"dataid", "<>", "\"\<_magicMapOutput\>\""}]}]}], "]"}]}], 
     ";"}], "//", "AbsoluteTiming"}], "\[IndentingNewLine]", 
   "outputfiles"}]}]], "Input",
 CellChangeTimes->{{3.6656727742550983`*^9, 3.665672810866192*^9}, {
   3.665731972642981*^9, 3.6657319728769827`*^9}, {3.6657358408469334`*^9, 
   3.665735841034135*^9}, {3.665736058439838*^9, 3.665736058627039*^9}, {
   3.6657405075105267`*^9, 3.6657405076977277`*^9}, {3.665740841368266*^9, 
   3.6657408415554676`*^9}, {3.665741965522394*^9, 3.6657419656939955`*^9}, {
   3.6657513969515667`*^9, 3.6657513997439847`*^9}, {3.6657516447409925`*^9, 
   3.6657516453806295`*^9}, {3.665751726637085*^9, 3.6657517289147434`*^9}, 
   3.6657517722994556`*^9, {3.665751871597002*^9, 3.6657518754659014`*^9}, {
   3.6657520721861486`*^9, 3.6657520725761533`*^9}, {3.6658126811366425`*^9, 
   3.6658126813082466`*^9}, {3.665828707760069*^9, 3.665828713516469*^9}, 
   3.665828768304669*^9, {3.665828811922269*^9, 3.6658288120938687`*^9}, {
   3.6658960186965923`*^9, 3.665896018852397*^9}, {3.6658960624008937`*^9, 
   3.6658960625878596`*^9}, {3.6659272673042965`*^9, 
   3.6659272674602976`*^9}, {3.6659835139053907`*^9, 
   3.6659835140925894`*^9}, {3.6659864794283032`*^9, 3.665986479584303*^9}, {
   3.6659865409703035`*^9, 3.6659865411731033`*^9}, {3.6659933648922486`*^9, 
   3.6659933688858743`*^9}, {3.665993412005551*^9, 3.6659934123799534`*^9}, {
   3.665993810087073*^9, 3.6659938102430735`*^9}, {3.6659987179817133`*^9, 
   3.6659987181533146`*^9}, 3.6659987991646338`*^9, {3.666003699195315*^9, 
   3.6660036993669157`*^9}, {3.666005213461429*^9, 3.66600521364863*^9}, {
   3.6660954222052283`*^9, 3.6660954223924294`*^9}, {3.6660994827169046`*^9, 
   3.666099482904106*^9}, {3.6663334711539755`*^9, 3.666333471403577*^9}, {
   3.6663479228693056`*^9, 3.6663479230409055`*^9}, {3.6663481869929056`*^9, 
   3.6663481915169053`*^9}, {3.6663526780970993`*^9, 3.666352678299899*^9}, {
   3.6663535319678993`*^9, 3.6663535586750994`*^9}, {3.666356167600478*^9, 
   3.6663561677876787`*^9}, {3.6663569875409784`*^9, 3.666356987743778*^9}, {
   3.6663571676273785`*^9, 3.6663571677989783`*^9}, {3.6664410077684126`*^9, 
   3.6664410092036314`*^9}, {3.6664451152286916`*^9, 
   3.6664451156498947`*^9}, {3.6701272725420504`*^9, 
   3.6701272734783263`*^9}, {3.6701305635729895`*^9, 
   3.6701305639941645`*^9}, {3.670227094468669*^9, 3.6702271259972796`*^9}, {
   3.6702357095789833`*^9, 3.670235716259117*^9}, {3.6702393238117332`*^9, 
   3.670239326241831*^9}, {3.6702396616262455`*^9, 3.670239663906337*^9}, {
   3.670243083785739*^9, 3.670243084155753*^9}, {3.670243345566665*^9, 
   3.670243351182845*^9}, {3.670243531572427*^9, 3.670243531946839*^9}, 
   3.670302736551573*^9, {3.6703056410751696`*^9, 3.670305670809723*^9}, {
   3.670305759670171*^9, 3.6703057601381855`*^9}, {3.67031476374292*^9, 
   3.670314764842964*^9}, {3.6703164578204803`*^9, 3.6703164581790266`*^9}, {
   3.670561519566862*^9, 3.670561523560462*^9}, {3.670561859212262*^9, 
   3.6705618595398617`*^9}, 3.6705640072998705`*^9, {3.6706748233064013`*^9, 
   3.6706748450216017`*^9}, {3.6706748826645017`*^9, 
   3.6706749078585014`*^9}, {3.6706753148635015`*^9, 
   3.6706753157683015`*^9}, {3.67083678791917*^9, 3.67083678837157*^9}, {
   3.671775172540801*^9, 3.6717751731648016`*^9}, {3.6717842347393017`*^9, 
   3.6717842352697015`*^9}, {3.671788012970701*^9, 3.6717880173543015`*^9}, {
   3.6717912693539014`*^9, 3.671791290913101*^9}, {3.6717914381313014`*^9, 
   3.6717914385213013`*^9}, 3.671791558064101*^9, {3.672741024401228*^9, 
   3.6727410254620275`*^9}, {3.6727428809789276`*^9, 
   3.6727428813845277`*^9}, {3.6730827308208685`*^9, 3.673082731008069*^9}, {
   3.673088338022621*^9, 3.6730883381942215`*^9}, {3.6730885639772215`*^9, 
   3.6730885641956215`*^9}, {3.673090740130421*^9, 3.673090740317621*^9}, {
   3.6731497433180356`*^9, 3.6731497434896355`*^9}, {3.673243487669492*^9, 
   3.673243487825492*^9}, {3.6732522650288916`*^9, 3.673252266760492*^9}, {
   3.6732538756637917`*^9, 3.6732538758509917`*^9}, {3.674375293965885*^9, 
   3.674375304074685*^9}, {3.674378079132514*^9, 3.6743780868085012`*^9}, 
   3.6743822612353544`*^9, {3.674877039202262*^9, 3.6748770524435863`*^9}, 
   3.6750802568146315`*^9, {3.675153197485054*^9, 3.675153198780775*^9}, {
   3.6751562895747795`*^9, 3.675156290014824*^9}, {3.675167024524999*^9, 
   3.675167052365374*^9}, {3.6752330311893253`*^9, 3.675233098259325*^9}, {
   3.675233130299325*^9, 3.675233138901325*^9}, 3.690783443272925*^9, 
   3.690783482378813*^9, {3.6908184704959517`*^9, 3.690818495799152*^9}, 
   3.6957308933468285`*^9, {3.6959783222065067`*^9, 3.695978334092306*^9}, 
   3.6959784198717065`*^9, {3.697177323327376*^9, 3.697177327998843*^9}, 
   3.697192251586248*^9, 3.6972591784704943`*^9, {3.6972604882673626`*^9, 
   3.697260527743153*^9}, {3.697260950462345*^9, 3.6972609506683455`*^9}, {
   3.6972612784512424`*^9, 3.697261283188512*^9}, {3.6972614442875834`*^9, 
   3.69726144495465*^9}, {3.697265402800198*^9, 3.6972654060235205`*^9}, 
   3.697445243165933*^9, 3.6974452810311065`*^9, {3.6979893401051235`*^9, 
   3.6979893451761236`*^9}, 3.69808267866992*^9, {3.698082873609861*^9, 
   3.6980828802035203`*^9}, {3.698083381624256*^9, 3.6980833854256363`*^9}, {
   3.6980834253140125`*^9, 3.698083425704051*^9}, 3.698085701616711*^9, {
   3.698086228975809*^9, 3.698086229136825*^9}, {3.7027849448162003`*^9, 
   3.7027849592004337`*^9}, {3.702785006155917*^9, 3.7027850066507626`*^9}, 
   3.713093649412634*^9, 3.7130940118321495`*^9, {3.739509812753045*^9, 
   3.739509862180045*^9}, {3.739509968489045*^9, 3.7395099865660453`*^9}, 
   3.739510054788045*^9, {3.7395101923790455`*^9, 3.7395102264150453`*^9}, {
   3.7395134930370455`*^9, 3.7395134976840453`*^9}, {3.7395148354148455`*^9, 
   3.7395148416858454`*^9}, 3.7415890288690104`*^9, {3.7415890659148993`*^9, 
   3.7415891028753853`*^9}, {3.7415906126613035`*^9, 
   3.7415906168859034`*^9}, {3.7415909254835*^9, 3.7415909268415003`*^9}, {
   3.74159246625478*^9, 3.7415924675187798`*^9}, {3.741592507261979*^9, 
   3.7415925097249784`*^9}, {3.74159290984387*^9, 3.74159293897687*^9}, {
   3.7415930355878696`*^9, 3.7415930709472494`*^9}, {3.7415934934197545`*^9, 
   3.7415934993151193`*^9}, {3.741595710109089*^9, 3.7415957145095286`*^9}, 
   3.74159618503127*^9, {3.74159638646235*^9, 3.741596399086007*^9}, {
   3.7651659157285957`*^9, 3.7651659229115953`*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"e952bd3e-7cab-4dff-9caf-571a8c265635"],

Cell[CellGroupData[{

Cell[BoxData["\<\"-----------------------------------------------------\
Binning Markers---------------------------------------------------------------\
-\"\>"], "Print",
 CellChangeTimes->{3.7651660791063957`*^9, 3.7685646699348946`*^9},
 CellLabel->
  "During evaluation of \
In[19]:=",ExpressionUUID->"d24cd7b6-3940-4b20-a858-e606584b90a4"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"magicsnpBinning. Start date = \"\>", 
   "\[InvisibleSpace]", "\<\"Mon 3 Jun 2019 17:31:09\"\>", 
   "\[InvisibleSpace]", "\<\". Outputfiles = \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"\<\"Example_magicMapOutput_dupebin_magicsnp.csv\"\>", 
     ",", "\<\"Example_magicMapOutput_dupebin_binning.csv\"\>", 
     ",", "\<\"Example_magicMapOutput_dupebin_adjacencymatrix.txt\"\>"}], 
    "}"}]}],
  SequenceForm[
  "magicsnpBinning. Start date = ", "Mon 3 Jun 2019 17:31:09", 
   ". Outputfiles = ", {
   "Example_magicMapOutput_dupebin_magicsnp.csv", 
    "Example_magicMapOutput_dupebin_binning.csv", 
    "Example_magicMapOutput_dupebin_adjacencymatrix.txt"}],
  Editable->False]], "Print",
 CellChangeTimes->{3.7651660791063957`*^9, 3.7685646699505296`*^9},
 CellLabel->
  "During evaluation of \
In[19]:=",ExpressionUUID->"9ae1bd3f-4a7c-4e90-b625-23f1c719c7bb"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"#SNPs = \"\>", "\[InvisibleSpace]", "389", 
   "\[InvisibleSpace]", "\<\"; #Bins = \"\>", "\[InvisibleSpace]", "389"}],
  SequenceForm["#SNPs = ", 389, "; #Bins = ", 389],
  Editable->False]], "Print",
 CellChangeTimes->{3.7651660791063957`*^9, 3.768564673075535*^9},
 CellLabel->
  "During evaluation of \
In[19]:=",ExpressionUUID->"1ce7b23c-1774-4c0e-9689-0dbc1a6463ec"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Done. Finished date = \"\>", 
   "\[InvisibleSpace]", "\<\"Mon 3 Jun 2019 17:31:13\"\>", 
   "\[InvisibleSpace]", "\<\". Time elapsed in magicsnpBinning= \"\>", 
   "\[InvisibleSpace]", "3.19`", "\[InvisibleSpace]", "\<\" seconds.\"\>"}],
  SequenceForm[
  "Done. Finished date = ", "Mon 3 Jun 2019 17:31:13", 
   ". Time elapsed in magicsnpBinning= ", 3.19, " seconds."],
  Editable->False]], "Print",
 CellChangeTimes->{3.7651660791063957`*^9, 3.768564673075535*^9},
 CellLabel->
  "During evaluation of \
In[19]:=",ExpressionUUID->"5ab649cb-a3af-498f-840e-e80ee53e3854"],

Cell[BoxData["\<\"--------------------------------------------------Calculate \
PairwiseFraction----------------------------------------------------------\"\>\
"], "Print",
 CellChangeTimes->{3.7651660791063957`*^9, 3.768564673075535*^9},
 CellLabel->
  "During evaluation of \
In[19]:=",ExpressionUUID->"14f42058-65e6-429e-affd-c9ad1d5c5894"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"magicPairwiseSimilarity. Start date = \"\>", 
   "\[InvisibleSpace]", "\<\"Mon 3 Jun 2019 17:31:13\"\>", 
   "\[InvisibleSpace]", "\<\". Outputfile = \"\>", 
   "\[InvisibleSpace]", "\<\"Example_magicMapOutput_pairwise_similarity.txt\"\
\>"}],
  SequenceForm[
  "magicPairwiseSimilarity. Start date = ", "Mon 3 Jun 2019 17:31:13", 
   ". Outputfile = ", "Example_magicMapOutput_pairwise_similarity.txt"],
  Editable->False]], "Print",
 CellChangeTimes->{3.7651660791063957`*^9, 3.7685646732005377`*^9},
 CellLabel->
  "During evaluation of \
In[19]:=",ExpressionUUID->"e8e4b262-0564-4bfc-8e81-18805545b92d"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"{#founder, #offspring, #SNP} =\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"4", ",", "150", ",", "389"}], "}"}]}],
  SequenceForm["{#founder, #offspring, #SNP} =", {4, 150, 389}],
  Editable->False]], "Print",
 CellChangeTimes->{3.7651660791063957`*^9, 3.7685646732005377`*^9},
 CellLabel->
  "During evaluation of \
In[19]:=",ExpressionUUID->"2a34173f-dffe-4b9c-aba4-fa9c5a5f4a04"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"model is set to \\\"\"\>", 
   "\[InvisibleSpace]", "\<\"depModel\"\>", 
   "\[InvisibleSpace]", "\<\"\\\" since the IBD probability = \"\>", 
   "\[InvisibleSpace]", "0.875`", "\[InvisibleSpace]", "\<\"(>0.85)!\"\>"}],
  SequenceForm[
  "model is set to \"", "depModel", "\" since the IBD probability = ", 0.875, 
   "(>0.85)!"],
  Editable->False]], "Print",
 CellChangeTimes->{3.7651660791063957`*^9, 3.7685646734192796`*^9},
 CellLabel->
  "During evaluation of \
In[19]:=",ExpressionUUID->"455ec883-3372-4748-ad22-17fbebaa0451"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Done! Finished date =\"\>", 
   "\[InvisibleSpace]", "\<\"Mon 3 Jun 2019 17:31:53\"\>", 
   "\[InvisibleSpace]", "\<\". \\tTime elapsed in magicPairwiseSimilarity = \
\"\>", "\[InvisibleSpace]", "40.2`", 
   "\[InvisibleSpace]", "\<\" Seconds.\"\>"}],
  SequenceForm[
  "Done! Finished date =", "Mon 3 Jun 2019 17:31:53", 
   ". \tTime elapsed in magicPairwiseSimilarity = ", 40.2, " Seconds."],
  Editable->False]], "Print",
 CellChangeTimes->{3.7651660791063957`*^9, 3.768564713380906*^9},
 CellLabel->
  "During evaluation of \
In[19]:=",ExpressionUUID->"88da25e2-7456-4a14-aa7a-fd280b000fcc"],

Cell[BoxData["\<\"-----------------------------------------------------\
Construct \
LinkageMap-------------------------------------------------------------\"\>"],\
 "Print",
 CellChangeTimes->{3.7651660791063957`*^9, 3.768564713396533*^9},
 CellLabel->
  "During evaluation of \
In[19]:=",ExpressionUUID->"0765fa24-04c3-427d-8f51-b37cd2692a7e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"magicMapConstruct. Start date = \"\>", 
   "\[InvisibleSpace]", "\<\"Mon 3 Jun 2019 17:31:53\"\>", 
   "\[InvisibleSpace]", "\<\". Output map file = \"\>", 
   "\[InvisibleSpace]", "\<\"Example_magicMapOutput_pairwise_linkagemap.csv\"\
\>"}],
  SequenceForm[
  "magicMapConstruct. Start date = ", "Mon 3 Jun 2019 17:31:53", 
   ". Output map file = ", "Example_magicMapOutput_pairwise_linkagemap.csv"],
  Editable->False]], "Print",
 CellChangeTimes->{3.7651660791063957`*^9, 3.768564713396533*^9},
 CellLabel->
  "During evaluation of \
In[19]:=",ExpressionUUID->"0b0cd575-6014-472f-bc6c-b96f932af9ff"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Size of 2 connected componets: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"388", ",", "1"}], "}"}], 
   "\[InvisibleSpace]", "\<\"; dropping components with size <= \"\>", 
   "\[InvisibleSpace]", "5", "\[InvisibleSpace]", "\<\"!\"\>"}],
  SequenceForm[
  "Size of 2 connected componets: ", {388, 1}, 
   "; dropping components with size <= ", 5, "!"],
  Editable->False]], "Print",
 CellChangeTimes->{3.7651660791063957`*^9, 3.7685647147090406`*^9},
 CellLabel->
  "During evaluation of \
In[19]:=",ExpressionUUID->"677a13cc-b460-4720-92b0-2453343dd7fd"],

Cell[BoxData[
 StyleBox["\<\"The option value of minLodClustering is set to 2.664!\"\>",
  StripOnInput->False,
  LineColor->GrayLevel[0],
  FrontFaceColor->GrayLevel[0],
  BackFaceColor->GrayLevel[0],
  GraphicsColor->GrayLevel[0],
  FontColor->GrayLevel[0]]], "Print",
 CellChangeTimes->{3.7651660791063957`*^9, 3.7685647169746733`*^9},
 CellLabel->
  "During evaluation of \
In[19]:=",ExpressionUUID->"02b64273-ec64-4f4d-9164-40d9f7c94402"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Size of 5 groups = \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"87", ",", "68", ",", "70", ",", "72", ",", "91"}], "}"}], 
   "\[InvisibleSpace]", "\<\" and #ungrouped markers = \"\>", 
   "\[InvisibleSpace]", "1", 
   "\[InvisibleSpace]", "\<\" after spectral clustering!\"\>", 
   "\[InvisibleSpace]", "\<\"Time elapsed = \"\>", "\[InvisibleSpace]", 
   "3.6`", "\[InvisibleSpace]", "\<\" Seconds.\"\>"}],
  SequenceForm[
  "Size of 5 groups = ", {87, 68, 70, 72, 91}, " and #ungrouped markers = ", 
   1, " after spectral clustering!", "Time elapsed = ", 3.6, " Seconds."],
  Editable->False]], "Print",
 CellChangeTimes->{3.7651660791063957`*^9, 3.7685647170059233`*^9},
 CellLabel->
  "During evaluation of \
In[19]:=",ExpressionUUID->"e4a7707b-e9b4-4b38-b0d0-20a74558623c"],

Cell[BoxData[
 StyleBox["\<\"The option value of minLodOrdering is set to {2.664, 2.664, \
2.664, 2.664, 2.664}!\"\>",
  StripOnInput->False,
  LineColor->GrayLevel[0],
  FrontFaceColor->GrayLevel[0],
  BackFaceColor->GrayLevel[0],
  GraphicsColor->GrayLevel[0],
  FontColor->GrayLevel[0]]], "Print",
 CellChangeTimes->{3.7651660791063957`*^9, 3.768564717068423*^9},
 CellLabel->
  "During evaluation of \
In[19]:=",ExpressionUUID->"0f44becc-1052-4791-8230-6c92a2f5841b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"# NearestNeighbors = \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"10", ",", "9", ",", "9", ",", "9", ",", "10"}], "}"}]}],
  SequenceForm["# NearestNeighbors = ", {10, 9, 9, 9, 10}],
  Editable->False]], "Print",
 CellChangeTimes->{3.7651660791063957`*^9, 3.768564717162179*^9},
 CellLabel->
  "During evaluation of \
In[19]:=",ExpressionUUID->"1fbe4d2f-fb33-4d68-9f3f-2e62695af8a7"],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     GraphicsBox[{{}, {{{}, {}, {}, {}, 
         {RGBColor[0, 0, 1], Opacity[0.3], 
          LineBox[{{1., 0.}, {1., -4.3572254865761536`*^-18}}]}, 
         {RGBColor[0, 0, 1], Opacity[0.3], 
          LineBox[{{2., 0.}, {2., 0.00034316592274407135`}}], 
          LineBox[{{3., 0.}, {3., 0.0012986819015467744`}}], 
          LineBox[{{4., 0.}, {4., 0.0024326134877383256`}}], 
          LineBox[{{5., 0.}, {5., 0.004259561370493184}}]}, {}, 
         {GrayLevel[0.5], Opacity[0.3], 
          LineBox[{{6., 0.}, {6., 0.010287858165504822`}}], 
          LineBox[{{7., 0.}, {7., 0.020192669083360874`}}], 
          LineBox[{{8., 0.}, {8., 0.04040616111811932}}], 
          LineBox[{{9., 0.}, {9., 0.05602595049508893}}], 
          LineBox[{{10., 0.}, {10., 0.16559538770133206`}}]}}, {
         {RGBColor[0, 0, 1], PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
            FormBox[
             StyleBox[
              GraphicsBox[
               {EdgeForm[None], DiskBox[{0, 0}]}],
              StripOnInput->False,
              GraphicsBoxOptions->{DefaultBaseStyle->Directive[
                PointSize[0.012833333333333334`], 
                AbsoluteThickness[1.6], 
                RGBColor[0, 0, 1]]}],
             TraditionalForm], {0., 0.}, Automatic, Offset[12]], {{{
           1., -4.3572254865761536`*^-18}}, {{2., 
           0.00034316592274407135`}}, {{3., 0.0012986819015467744`}}, {{4., 
           0.0024326134877383256`}}, {{5., 0.004259561370493184}}}]}, 
         {GrayLevel[0.5], PointSize[0.012833333333333334`], AbsoluteThickness[
          1.6], GeometricTransformationBox[InsetBox[
            FormBox[
             StyleBox[
              GraphicsBox[
               {EdgeForm[None], 
                PolygonBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}}]}],
              StripOnInput->False,
              GraphicsBoxOptions->{DefaultBaseStyle->Directive[
                PointSize[0.012833333333333334`], 
                AbsoluteThickness[1.6], 
                GrayLevel[0.5]]}],
             TraditionalForm], {0., 0.}, Automatic, Offset[12]], {{{6., 
           0.010287858165504822`}}, {{7., 0.020192669083360874`}}, {{8., 
           0.04040616111811932}}, {{9., 0.05602595049508893}}, {{10., 
           0.16559538770133206`}}}]}}, {
         {RGBColor[0, 0, 1], PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6]}, 
         {GrayLevel[0.5], PointSize[0.012833333333333334`], AbsoluteThickness[
          1.6]}, {}, {}, {}}, {
         {RGBColor[0, 0, 1], PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6]}, 
         {GrayLevel[0.5], PointSize[0.012833333333333334`], AbsoluteThickness[
          1.6]}, {}, {}, {}}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0.8125000000000003, 0},
      DisplayFunction->Identity,
      Frame->{{True, False}, {True, False}},
      FrameLabel->{{
         FormBox["\"Eigenvalue\"", TraditionalForm], None}, {
         FormBox["\"i-th smallest\"", TraditionalForm], None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{50., 2.}, {42.00000000000003, 23.90491953351203}},
      LabelStyle->Directive[FontSize -> 13, FontFamily -> "Helvetica", 
        GrayLevel[0]],
      Method->{
       "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox[
       "\"5 eigenvectors (blue) are used for clustering.\"", TraditionalForm],
      PlotRange->{{0.8125000000000003, 10.}, {-4.3572254865761536`*^-18, 
       0.16559538770133206`}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {192., -116.80842387373012}, 
     ImageScaled[{0.5, 0.5}], {360., 222.49223594996212}], InsetBox[
     GraphicsBox[{{{{}, {{
           {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            0.007333333333333334], AbsoluteThickness[1.6], 
            GeometricTransformationBox[InsetBox[
              FormBox[
               StyleBox[
                GraphicsBox[
                 {EdgeForm[None], DiskBox[{0, 0}]}],
                StripOnInput->False,
                GraphicsBoxOptions->{DefaultBaseStyle->Directive[
                  PointSize[0.007333333333333334], 
                  RGBColor[0.368417, 0.506779, 0.709798], 
                  AbsoluteThickness[1.6]]}],
               TraditionalForm], {0., 0.}, Automatic, Offset[
              5]], CompressedData["
1:eJx9zclKA2EQBOBWLx5z8JCDB5UgIkGMa1zTLklcYmIminfBs6/Qj/Y/ko9g
wKpIF9GB4aNrunrW3z+rjyUze5u+C9N30fh8dX5ccQRwWVyFNVj33NuQnHfZ
49012JBeTfJNkb0tcRs2ReY7cA/uwkPY+mPvAO5LT3O9cyQei23xRDyFHXgm
nsMLkfnl/DtxhdnzXnjWZG/WuxaRB+ebbKjcu80G5x7sIscc3Sz32OOe9UX2
+lm7y4Zo95hF5vaQDdEeMT9BzDaEg5zHIPeMvZHc4Z7eGWZtNP/OLH/Ouhiw
iMxtjBk6tCrnRTTdg07HObcJ+vw++T/3F/S5h7nwe5XzkJ6/ImcPc+E+ZpPc
Jece/1t+734DJVF83Q==
             "]]}, 
           {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
            0.007333333333333334], AbsoluteThickness[1.6], 
            GeometricTransformationBox[InsetBox[
              FormBox[
               StyleBox[
                GraphicsBox[
                 {EdgeForm[None], 
                  PolygonBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}}]}],
                StripOnInput->False,
                GraphicsBoxOptions->{DefaultBaseStyle->Directive[
                  PointSize[0.007333333333333334], 
                  RGBColor[0.880722, 0.611041, 0.142051], 
                  AbsoluteThickness[1.6]]}],
               TraditionalForm], {0., 0.}, Automatic, Offset[
              5]], CompressedData["
1:eJx9ktENwjAMRA0sApv4gwn4AAqllFR8s0JG6SgepaNQwV0lnxCVoieffbEd
dVdeh+fGzPbzWc1nbfyO/kE9f+mIgzp5yro14CnXOeMm+6gHY97DvkLWcS7O
Gefs0zm8yXWcY9GFdgGvqENchawLofr8mlmFwXwLf/tfr8Jg/pYZoJMdfKKz
zrrM2v32UQ+h3+EXUu8f8N8zA9z28AkXHX5HHGAvrOCE+pH6I/sm4XbIffoC
HbEh75yj5L2C+zFGfqRech3v5ZwT8sY6vkv53Zd7ck4fpA/+i5FzDjJXyX3Z
Z9lT30X68F1577znG4YHigQ=
             "]]}, 
           {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
            0.007333333333333334], AbsoluteThickness[1.6], 
            GeometricTransformationBox[InsetBox[
              FormBox[
               StyleBox[
                GraphicsBox[
                 {EdgeForm[None], 
                  PolygonBox[{{0, 1}, {1, 0}, {0, -1}, {-1, 0}}]}],
                StripOnInput->False,
                GraphicsBoxOptions->{DefaultBaseStyle->Directive[
                  PointSize[0.007333333333333334], 
                  RGBColor[0.560181, 0.691569, 0.194885], 
                  AbsoluteThickness[1.6]]}],
               TraditionalForm], {0., 0.}, Automatic, Offset[
              5]], CompressedData["
1:eJxtzusNgkAQBOBVGzk7uV8WYAUXBQEhsYUt5Uq5Uq4Uic6Y7EQS8mWHfXC+
va7jycwu+3vY36Ph8Xv+WMU8fG2oDXVHnYaYu+RN9nRYZI8zH3F/iDadG+Kc
jbEvoXaYx5gXydlXxd9esYv2wH6ReYYNFn6fcF/yKnKOfV3kniRmlXemqIsV
2oz73Lvg7hRz9nEuzdEsFtHFOssd1mLG/9gS5/ifTfqKyDnnvMi8iV20ZzSx
XnEfdYPlGXOXuQq7zOU15i53uDetUc45+6Bt//MqNrHzO+9vMU/bzzdcKps+

             "]]}, 
           {RGBColor[0.922526, 0.385626, 0.209179], PointSize[
            0.007333333333333334], AbsoluteThickness[1.6], 
            GeometricTransformationBox[InsetBox[
              FormBox[
               StyleBox[
                GraphicsBox[
                 {EdgeForm[None], 
                  PolygonBox[
                   NCache[{{0, 1}, {-1, 1 - 3^Rational[1, 2]}, {
                    1, 1 - 3^Rational[1, 2]}}, {{0, 
                    1}, {-1, -0.7320508075688772}, {
                    1, -0.7320508075688772}}]]}],
                StripOnInput->False,
                GraphicsBoxOptions->{DefaultBaseStyle->Directive[
                  PointSize[0.007333333333333334], 
                  RGBColor[0.922526, 0.385626, 0.209179], 
                  AbsoluteThickness[1.6]]}],
               TraditionalForm], {0., 0.}, Automatic, Offset[
              5]], CompressedData["
1:eJyFz8GtwjAQBNAFGkgJpgNK8JFjRAXWl7glkFCBS0gJLoESXAIluIRfAghm
QDsSIlL0tJvdsbP9Ox+OGzPbP97V410bnjjEp3l8mVAH1Bk15wo0fK+Dn2uD
z9E55sYTHH1uGn3O+16cY57YROYazglikXtUmGAWmVNE3Wuinb1BjGKCWayw
MG/y/YC6SQ7nuNfJHPd2Iuei2IsJZjh96Re4QJt9v0N9lZwqezexydw//2P2
51zlHO6F2cs95sTZ24sJTiL7WVzEAivv+aN/g90F/8H7ijt8N5njHnPCxcu9
KDKnhxNMP/pZXD7eAcuXpBA=
             "]]}, 
           {RGBColor[0.528488, 0.470624, 0.701351], PointSize[
            0.007333333333333334], AbsoluteThickness[1.6], 
            GeometricTransformationBox[InsetBox[
              FormBox[
               StyleBox[
                GraphicsBox[
                 {EdgeForm[None], 
                  PolygonBox[
                   NCache[{{0, -1}, {-1, -1 + 3^Rational[1, 2]}, {
                    1, -1 + 3^Rational[1, 2]}}, {{
                    0, -1}, {-1, 0.7320508075688772}, {
                    1, 0.7320508075688772}}]]}],
                StripOnInput->False,
                GraphicsBoxOptions->{DefaultBaseStyle->Directive[
                  PointSize[0.007333333333333334], 
                  RGBColor[0.528488, 0.470624, 0.701351], 
                  AbsoluteThickness[1.6]]}],
               TraditionalForm], {0., 0.}, Automatic, Offset[
              5]], CompressedData["
1:eJyF0MFthDAQBVAnaYASnA5cgktAueaCIuUctISFo0twCZTgElyCS6AElxAk
/j/Mv2Ql9DRfY3tm379+Pr7fnHOf1/dyfa8Ov+MRb5fbgnpAXVFX1A31hPpE
HVD3h73HLdZB7vGo42LvSZJzznGxco5Z5NxJ5swyJ/fmHEXk3jzXeJ/IvIvu
1zpAL0YYpI/5KLJvEmcxwSwyP8QiVthE5qfYRbdiH3GCHkYYROaj6OWeBOfV
vqt5Fg9YROZVbOLJ957Ye7UyZ9/wtHrYYJA8iqP0TZLP8IBJ+rLIvhMWOVcl
b5LzXBeH7daJzAP0MP6Txx17sg/1tFln2GDiu+jPqCs85FyBp/S53d6rffzf
+2Z1MrfO4Xcr90qy9zXnH7aO2FM=
             "]]}}, {
           {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            0.007333333333333334], AbsoluteThickness[1.6]}, 
           {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
            0.007333333333333334], AbsoluteThickness[1.6]}, 
           {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
            0.007333333333333334], AbsoluteThickness[1.6]}, 
           {RGBColor[0.922526, 0.385626, 0.209179], PointSize[
            0.007333333333333334], AbsoluteThickness[1.6]}, 
           {RGBColor[0.528488, 0.470624, 0.701351], PointSize[
            0.007333333333333334], AbsoluteThickness[
            1.6]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}}, {
           {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
            0.007333333333333334], AbsoluteThickness[1.6]}, 
           {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
            0.007333333333333334], AbsoluteThickness[1.6]}, 
           {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
            0.007333333333333334], AbsoluteThickness[1.6]}, 
           {RGBColor[0.922526, 0.385626, 0.209179], PointSize[
            0.007333333333333334], AbsoluteThickness[1.6]}, 
           {RGBColor[0.528488, 0.470624, 0.701351], PointSize[
            0.007333333333333334], AbsoluteThickness[
            1.6]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}}}, {{}, {}}}, {{}, {{{}, {}, 
           {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
            Tiny], LineBox[{{87.5, 1.}, {87.5, 388.}}]}, 
           {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
            Tiny], LineBox[{{155.5, 1.}, {155.5, 388.}}]}, 
           {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
            Tiny], LineBox[{{225.5, 1.}, {225.5, 388.}}]}, 
           {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
            Tiny], LineBox[{{297.5, 1.}, {297.5, 388.}}]}, 
           {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
            Tiny], LineBox[{{388., 1.}, {388., 388.}}]}}, {
           {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
            Tiny]}, 
           {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
            Tiny]}, 
           {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
            Tiny]}, 
           {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
            Tiny]}, 
           {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
            Tiny]}}, {
           {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
            Tiny]}, 
           {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
            Tiny]}, 
           {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
            Tiny]}, 
           {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
            Tiny]}, 
           {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
            Tiny]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}}, {
           {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
            Tiny]}, 
           {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
            Tiny]}, 
           {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
            Tiny]}, 
           {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
            Tiny]}, 
           {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
            Tiny]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}}}, {{}, {}}}}, {{}, {{{}, {}, 
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[Tiny],
            LineBox[{{1., 87.5}, {388., 87.5}}]}, 
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[Tiny],
            LineBox[{{1., 155.5}, {388., 155.5}}]}, 
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[Tiny],
            LineBox[{{1., 225.5}, {388., 225.5}}]}, 
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[Tiny],
            LineBox[{{1., 297.5}, {388., 297.5}}]}, 
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[Tiny],
            LineBox[{{1., 388.5}, {388., 388.5}}]}}, {
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
           Tiny]}, 
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
           Tiny]}, 
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
           Tiny]}, 
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
           Tiny]}, 
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
           Tiny]}}, {
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
           Tiny]}, 
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
           Tiny]}, 
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
           Tiny]}, 
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
           Tiny]}, 
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
           Tiny]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}}, {
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
           Tiny]}, 
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
           Tiny]}, 
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
           Tiny]}, 
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
           Tiny]}, 
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
           Tiny]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}}}, {{}, {}}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{True, False}, {True, False}},
      FrameLabel->{{
         FormBox["\"estmap ordering\"", TraditionalForm], None}, {
         FormBox["\"refmap ordering\"", TraditionalForm], None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{50., 2.}, {42.00000000000003, 23.90491953351203}},
      LabelStyle->Directive[FontSize -> 13, FontFamily -> "Helvetica", 
        GrayLevel[0]],
      Method->{
       "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox[
       "\"Kendall \[Tau] = {0.937, 0.763, 0.911, 0.92, 0.886}\"", 
        TraditionalForm],
      PlotRange->{{0, 388.}, {0, 388.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {576., -116.80842387373012}, 
     ImageScaled[{0.5, 0.5}], {360., 222.49223594996212}]}, {}},
  ContentSelectable->True,
  ImageSize->1100,
  PlotRangePadding->{6, 5}]], "Print",
 CellChangeTimes->{3.7651660791063957`*^9, 3.7685647181778116`*^9},
 CellLabel->
  "During evaluation of \
In[19]:=",ImageCache->GraphicsData["CompressedBitmap", "\<\
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\
\>"],ExpressionUUID->"265fb88d-5567-4ac0-8108-5e65b5431e31"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Done! Finished date =\"\>", 
   "\[InvisibleSpace]", "\<\"Mon 3 Jun 2019 17:31:58\"\>", 
   "\[InvisibleSpace]", "\<\". \\tTime elapsed in magicMapConstruct = \"\>", 
   "\[InvisibleSpace]", "5.`", "\[InvisibleSpace]", "\<\" Seconds.\"\>"}],
  SequenceForm[
  "Done! Finished date =", "Mon 3 Jun 2019 17:31:58", 
   ". \tTime elapsed in magicMapConstruct = ", 5., " Seconds."],
  Editable->False]], "Print",
 CellChangeTimes->{3.7651660791063957`*^9, 3.768564718443428*^9},
 CellLabel->
  "During evaluation of \
In[19]:=",ExpressionUUID->"31170729-f1e0-4b11-9090-fb28eba9457f"],

Cell[BoxData["\<\"-------------------------------------------------------\
Refine LinkageMap-------------------------------------------------------------\
\"\>"], "Print",
 CellChangeTimes->{3.7651660791063957`*^9, 3.768564718443428*^9},
 CellLabel->
  "During evaluation of \
In[19]:=",ExpressionUUID->"361ff002-2c9a-4a37-87e4-a42156b32265"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"magicMapRefine. Start date = \"\>", 
   "\[InvisibleSpace]", "\<\"Mon 3 Jun 2019 17:31:58\"\>", 
   "\[InvisibleSpace]", "\<\". Outputfiles = \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"\<\"Example_magicMapOutput_refine_linkagemap.csv\"\>", 
     ",", "\<\"Example_magicMapOutput_refine_history.txt\"\>"}], "}"}]}],
  SequenceForm[
  "magicMapRefine. Start date = ", "Mon 3 Jun 2019 17:31:58", 
   ". Outputfiles = ", {
   "Example_magicMapOutput_refine_linkagemap.csv", 
    "Example_magicMapOutput_refine_history.txt"}],
  Editable->False]], "Print",
 CellChangeTimes->{3.7651660791063957`*^9, 3.7685647185371785`*^9},
 CellLabel->
  "During evaluation of \
In[19]:=",ExpressionUUID->"db427b64-6919-4d6b-a1a9-24c000be30ee"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"detectingThreshold is set to 0.9 for \"\>", 
   "\[InvisibleSpace]", "\<\"jointModel\"\>"}],
  SequenceForm["detectingThreshold is set to 0.9 for ", "jointModel"],
  Editable->False]], "Print",
 CellChangeTimes->{3.7651660791063957`*^9, 3.7685647185371785`*^9},
 CellLabel->
  "During evaluation of \
In[19]:=",ExpressionUUID->"d8f0b36f-f1fa-40aa-b61e-4e289740b648"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"{Iteration,Temperature,ParentImpute&Phasing,ErrorDetect,\
OffspringImpute}=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "True", ",", "True", ",", "False"}], "}"}]}],
  SequenceForm[
  "{Iteration,Temperature,ParentImpute&Phasing,ErrorDetect,OffspringImpute}=",\
 {1, 2, True, True, False}],
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.7685647223028193`*^9},
 CellLabel->
  "(kernel 7)",ExpressionUUID->"eee1157e-4769-4cfc-9071-27225367629e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"{Iteration,Temperature,ParentImpute&Phasing,ErrorDetect,\
OffspringImpute}=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "4", ",", "1.2282499999999998`", ",", "True", ",", "True", ",", "False"}],
     "}"}]}],
  SequenceForm[
  "{Iteration,Temperature,ParentImpute&Phasing,ErrorDetect,OffspringImpute}=",\
 {4, 1.2282499999999998`, True, True, False}],
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.7685649613095274`*^9},
 CellLabel->
  "(kernel 7)",ExpressionUUID->"93d20184-2c41-47a2-bddf-3ce448378e7c"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"{Iteration,Temperature,ParentImpute&Phasing,ErrorDetect,\
OffspringImpute}=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "7", ",", "0.7542990312499998`", ",", "True", ",", "True", ",", "False"}],
     "}"}]}],
  SequenceForm[
  "{Iteration,Temperature,ParentImpute&Phasing,ErrorDetect,OffspringImpute}=",\
 {7, 0.7542990312499998, True, True, False}],
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.7685651494801426`*^9},
 CellLabel->
  "(kernel 7)",ExpressionUUID->"3273e912-471b-4d3e-92a7-f7c7ca15d240"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"{Iteration,Temperature,ParentImpute&Phasing,ErrorDetect,\
OffspringImpute}=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "11", ",", "0.2844835142723441`", ",", "True", ",", "True", ",", 
     "False"}], "}"}]}],
  SequenceForm[
  "{Iteration,Temperature,ParentImpute&Phasing,ErrorDetect,OffspringImpute}=",\
 {11, 0.2844835142723441, True, True, False}],
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.7685653674138303`*^9},
 CellLabel->
  "(kernel 7)",ExpressionUUID->"011b6353-baf5-47d9-8518-c7828d13ca37"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"{Iteration,Temperature,ParentImpute&Phasing,ErrorDetect,\
OffspringImpute}=\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "16", ",", "0.024850835236440393`", ",", "True", ",", "True", ",", 
     "False"}], "}"}]}],
  SequenceForm[
  "{Iteration,Temperature,ParentImpute&Phasing,ErrorDetect,OffspringImpute}=",\
 {16, 0.024850835236440393`, True, True, False}],
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.7685654165147448`*^9},
 CellLabel->
  "(kernel 7)",ExpressionUUID->"1aceda87-43fb-414b-83d0-705e4439b05c"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{{}, {InsetBox[
         GraphicsBox[{{{}, {{{}, {}, 
              {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
               0.007333333333333334], AbsoluteThickness[1.6], 
               LineBox[CompressedData["
1:eJxVz39M1HUcx/EPWEg6pKEprjQEBKfcyXH8kF/HC+/4jcf9BIElQ7KVI87J
dEqbfBFPJwgqpqW03CImV4p4w2mM2hEzkYBjQ+JKIU3TQ20eKtBESR3v78f1
2b777rHn5/XHZ9lGk26TO2Ms5+X36j9zXAns/wduF82qp2lOxQw9UVB0wzpm
/o/uvY3sSIunpOVNzHgBoqZ7l8i5fTHgapZEc78Hv/7TjZnBs8l++Gf5/Mrj
Li+yP+LG5Xt3HVpEDsRIaYUly3M5OQiTq2tDtNwr0HDlz8hPOoPIKyH7rOnC
Zu4QDJoOFaq8V5KlGC+pD5psDiGHYteKn74vXiYly9A1XCop4Q7Dhh/2nzFx
y1Fave+XvE7R4ahiPv723TJyBLILHX+9diS8GnJ35t2Uk6PgYW80V64KJ6/B
Ze87qmP1oqPRVDz8W7clkhwDZ5fti1+5Y+E60mt3tEaR4/BteEDP4Kpocjym
qgZH+3pEK5BvmrLYuRNQHJrp2J0bQwYCxn/vdwuPm7EAFLwbe8RdNEvEwf33
NI73FdQT0Rkb/84dK5mthUfU5BC3sBaBs5O+vMu7EvuuX3s6R51IXYkpjSx/
rmimgqCo8G//WkldBWe3spKbJaGx4qPec+1J1JOQdf87qVU0S0bJ+Yih1Q/F
ngxDy1d/+NUlU09Bes/PLYphspCCmvJbXvdcKdRTcWnAXhq0MZV6KoJtj+pl
89TU03BOHfqcW0hD6427J/KhoZ4O1cMJZ+0BspCO6WeSJ4+vij0DS9rmXHfm
a6lnYJs+5vCsk2SWiZLbFzu4hUzEL+ofe93XIbhmwLu7Tezr0L7jJLiZGnnS
tnLrHh11NczN7hE5P5JZFspMNZu4hSxsvTba4N2kp66Buc73KvfLd503Phk9
kGCg+xocmxhznh0h2zRYmBC4uEU006Kq78ysD3yMtNcipejTdk08WdBiamTh
42d9ZJsW1sWSgOeimQ6F2/WoC8umvQ4b0sa2cAs6+JjK17xRQ7bpUHZr+sOl
Q2Smx8e6wqPc0ON23M5L3IIeSn3HuFtTDu31WD9PuiNHuZ72Bpi2Xl66oIgM
Az6Xbt988wFZMKBCNeFjfSuX9gZUp8u/OZxBZkZ4dP19qqCMDCOO1kU4uAUj
rnRU/2uwiHsjBlpjGj3O5uIFRHZ5UQ==
                "]]}, 
              {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
               0.007333333333333334], AbsoluteThickness[1.6], 
               LineBox[CompressedData["
1:eJxNzX0s1HEAx/EfsVZtkWoZu3by3GgxD1uMT1yeImnd89PvznF6WIyN/vy1
0ionRdloKg0tabkaEXIoZzKLlmYpp4bS5lRED1Z0399vfbfvvnv98f5+PLTZ
hzLsKYoSrNzV13ZEoP4/EOFr38Gh95Nd0f/MiFBmxyQLpohNInQ2fXhRw5oS
I5y/2Xlt0rjNEGNs63qe0LBEejEMN842WEKcbDsmMXaHToXlFoWQXQmyikoW
OUMCUZ6lNY81I0FNvbwl800o6SWwk2853n09jPRS9DSfCOhhDSn6i4xWzowU
ynrr/aesTVLU2j3Tu9DhpJfhrnLJq6KbGDIMhsdMcmZksFyw1layNslwtD4o
sC04ivRyvCqdm+UMOZI29DWddowmvRyP+/VVlm5ikxxPTJfVfjl7Sa/AxHxv
J2coUOHpFWV9RMwoYKZ/Cxc+EZsU+HZGt26TUwzplRiu2jOdf4sYSlRb3RMK
WDNKePAefqkUxJJeiYml9nIHTwHpVbjoHrTEGSqcd2przRUTMyroXbuOGHT7
SK8ClfWgnzOlRtToz53FrKHG2x8tufMGYkaNe/4ReuYd26txeLLDzJmiccd7
jf8p1nwarkHl9rVlceQ/Gk2OzrmLO+JtpmkM6QNrYmeIGRrV22YcBKxv0vg4
1pvDMyeQPRrTbsFm3sZEmy00AhoFvttZUxqYGwdGPHTEfA3O1WU7LIckkX0N
dMVXMzjTGuQX+Jg5Mxp0NWdWO47vJ/sayMSfdSW/ksm+BsZZY6qPWwrZ10C0
kGjkTGmhnX7t4suar8VI/Ojz9h5iaBHpaoiLGCCmVywduM2ZWbFf/2Dp4gGy
r4Xo+8tdZaxNWqQMJ1zibNGiJFI4x5lKxzFeR9oV1vx0nKxr8E4TppL9dHio
lws50+ko/HNtatV/Af4qPDs=
                "]]}, 
              {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
               0.007333333333333334], AbsoluteThickness[1.6], 
               LineBox[CompressedData["
1:eJxNzX9MTXEYx/HDKqqtccOM4hYxo638qqH6FOoiEo2R2l33/LrnJGraKtSd
RWnFmqVk5YqVhrUyomYOlhaG3bWabltnZi3ZuLL6QxrpPufMs3337LV997yD
Mk4c4GYzDBM//f7tmbFZwPw/dgsq2trkxNCR6BkrFvgtyZqKiHHGzFi14LLr
6UNRM8NCvfSTvabZyCKy/0pQ+jEP912wiKgz3Gv3NrhtZjFr4ceHHZptLOpr
Ow896Fjstp1Fj7P3naMp2G2FRXl3NxOQu9JtlcWEz+qSQM0MB6enUtYzb7Xb
Rg4F47d832gGB2/j0vK3ms0cUlOzDe802zhsEUw5Z1+soT6HU19M44WaFQ67
xXOL7/qEUZ9DbvL6o72/11OfR8gO/7Ku3A3U5zFyuPVIY/pm6vPICYqbcmVE
UJ/H+bLJ1ktxW6jPYzTU80dpKdnOo3q0ssLAbaU+j18J4Un+mlUedwd3e5e9
iqK+AGes7UfYsRjqC/CJqWsL1wwBKZGc4NVJNguYE9T/aFcIqC9gEVyPGy+S
7QIGutptX1WyImDH8RpTlVcs9QX0ZcfXb4sgMyIKa32GB5rJRhHFCd89LvTH
UV9Ef0fgZlfvduqLqD8/Ge3iE6gvImPotHGVZRf1ReS//7Pv+gOyImLRmcAW
3aqIvHzzZyFqD/Wt4NgnO0XNRisaAr416oYVN3E77EjhXupbUVVwtVK3zYrX
hytxUkmivhWJruAG3cr0/+aikurY/dS3osjXKyDJQWYkHNzU/ixvbjL1Jdy7
NquyZDkZEuqlO891myVwA3ljum0S5hfEryjVbJfwcqV/To9KViR8+JTdoFuV
sCD6tUM3I2N/umEorfgA9WWs8zU1PnOSIWPh976bNX4HqS/D4rHRodsmY23L
jbS9VWS7jK6U7grdigx/z3Hn/TayKuNkVu5E8zCZyUTPYNO3sdAU6mciw+RY
9nPafwEnxj4q
                "]]}, 
              {RGBColor[0.922526, 0.385626, 0.209179], PointSize[
               0.007333333333333334], AbsoluteThickness[1.6], 
               LineBox[CompressedData["
1:eJxNz31IE3Ecx/GpkeIKBqNMMFtSGbRIK8mVzU8rTLPWsnL2oA1jFbS7+91V
/pPW6AGlJyzKDCEWSFFCaopGpMwaUcRiRkVmDytMS1HMYpiCpt73jn5wHK+/
Pt/3/EIhxxmu0WgyJ77J/9SDC5r/n8OFuIeV27NW/TBP2e1CZpd2jtEyLNvj
QoR75nnzovD0KXtdCL+oDTSZomQHXUiIvNva6xyWreHwbs3clNnPxmUbOJw3
Jln9RyPkXXBYvmxBeqE7WraDQ2zAajmk2M3hcfSxxT0ntLI9HA5GnXivj9PJ
9nIobv/2sjQ0V3aQQ4nlxS9WmkBdPPSPdNyWpQtlG3jciSjrtyoGj/CvQz2h
aiPt87iVNmNxVFEy7fPIHaqPjf+eQvs8mmztpzrzU2mfR2tv9vqPioM81vad
XdRRlUb7AvTlNmdN7FraF6CT4lsG8s20L+BC+qu9nw+k076A+q+3531R7BZw
dfWI9cUHskdA3orsa4/HyF4BhkfdO1sUBwVU56TGtCrWMHQWvX2vWsfwMtBw
X2sE3cNQU3Jukz+ZnMTQrTcUlz5dR/cx7Cs0JzgdFtk2BnvMjdOqHQxvVtZ2
qWYMv2J9PVV96+l+hsvWfn9BcIPscgbzMl/IviSDehhqtSZ7nuI6hpuzDfvz
/5K9DKELFRk3KzfKDjCMWmZVxjSQgwxX7o0Mqx5k6Imz7J6jWCPCpGsP8zsz
qV9E2h6r/SCyqF9Ef+Kah6qTRIy59+16nUOGCHviE/7ng03UL6Jp3h1flzmb
+kW0BZvN7DmZiZAGEj2q3SK+tHWbxk2bqV9Ex/HcKtUeEQsbn6e0ecl1Ivxh
EaayHVuoX4QlPr6oVyAHJjxuqxj8RA6KaNRXh1QPiohqO5pstG6lfgndfc25
BZVknYSsyD/Nqg0SWPG71b9TbdQvwXpk+mHVkLD8+pnbz+rJNgl1usvj/dO2
Ub+E0aKYpAHFTILTl+lQ7Zbgu3S1XHW5hJKTI95J/wOTNUtH
                "]]}, 
              {RGBColor[0.528488, 0.470624, 0.701351], PointSize[
               0.007333333333333334], AbsoluteThickness[1.6], 
               LineBox[CompressedData["
1:eJxNz39Q0wUYx/FBUmTzmHclKr+GmQoeNKJQNNvHrIjV5VBRSmS7agWXydz3
1zqPnNwFKHJO0QhPbTZ/ncsYXKcCM5dX/hgDR3ecoV4NCzcLY9Sp0yuI+D7f
7/XcPffc6+75553+duUKU6xCoVg7vv/diXFYoPj/uC243X/3+Ok14Rcm7LVg
t2vbMuvOsHbCAQuqAuc/tksOWhA9W9V0THLEAvb7lwa8khUMQgnVL/dLVjHI
eCpsG5GsZlC+OMn56C6yhsGFyqGWdMlgcP3Slmv5kvUM5iUvjW2fele0kUF3
p6JHOSle7DAzmFYfdlgTyTYGhw4GLlXrpoi2M/hSsftynWQHg53K1r+TtqSJ
djP4fP6As7QnXbSXwQ/rtJn33porOsAg9ZPy0PDkDNFBBvUbupvLdmWKjjBI
8jXNNEpWsOg5MtQatGaJVrHoMxo3d7z6tGg1i9CJuEkeyRoWw6lO9YBPIxos
CqJXO6dPyxWtZ5H6WQqz1/KcaCOLxrLHltSuX0D9LE6YKsZk21iYTO3f1km2
s5gb9/B3pQ/IDhZHNyfVrpPsZpHiP19YJtnL4rqhqiuxfgn1s8jpz3mlIRnU
z2J+X9uZopPkCItf/FMiN/9YSv0cfvvmTO37eS9SP4f8c9FFC3XLqJ/DgZos
3TFXAfVzSPhxz+OoKaR+DtE07Rc5eTrqH/+f3Vu8avnr1M8hYDackm3mcGT1
ju5fN75B/Rx6445mD0q2c6hs/GrynDGyg0OZZ+UHst0cHM1dftleDscbF158
d2w59XO4cq0gwyQ5yKHF79oqO8LB/FHM15kDeurnUXInpeSh9CLq51EfP1In
W82jrdTwU/VasobHnBjfTd2nZPDY2zFqGHWS9TyGT1ojHdkrqJ9H5foFFX2H
yWYeWQGNJ9RHtvEwbY+3Fj+ykvp5RF2Fh29kkx08ZhnufzjjGbKbR+/oO4uN
e8heHu1NB58cvEoO8Dg7Wz/z1tZV1M8jN8+pkx3hofE8e4e7QlYIKMrVnev4
h6wS8Kfvib9kqwVcTg70dmmLqV+Aat9QjF8yBBzar80P2VdTv4Dnd1gqZBsF
NDffuliTtYb6BSzKabgv2yZgY8+FwQMFZLuA7MTXGnybyA4BaeH8ba0uslvA
/hFlp2yvAGZ6+++yAwI2TVUmt0kOCritPLV9w8/kiIDyfT6PbIUV4dpq97xR
ssqKWW8O12pjS6jfipb3Yk/L1lhxI7czLBvjTjDPwLj/BUj7uiA=
                "]]}}, {
              {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
               0.007333333333333334], AbsoluteThickness[1.6], 
               GeometricTransformationBox[InsetBox[
                 FormBox[
                  StyleBox[
                   GraphicsBox[
                    {EdgeForm[None], DiskBox[{0, 0}]}],
                   StripOnInput->False,
                   GraphicsBoxOptions->{DefaultBaseStyle->Directive[
                    PointSize[0.007333333333333334], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}],
                  TraditionalForm], {0., 0.}, Automatic, Offset[
                 5]], CompressedData["
1:eJxVz2tM01ccxvEDbMhcEIPOS6YOAcEordRykVt5sOWOpVeuUYLMxRlGF4lG
WSJ/ZJ0RxCnO21hmMkZG3URsMHOELWWEiQiUBBndFNTptLgtFhUwoigJv/8x
O8l58cn3PC/Oyq0m3TYPxlj2zHWbue5MPK549v8Dt0tm1bNUp2KWXigoumUd
M7+kd/ORFWHxkjS/iVkvROR073I59xIMuJokUdzL4Nf/Q0NG8ByyH/5btaDy
tMub7I/Ycfln+44sJgdipLTCkum1ihyEyXWHQ7Tcq1F/5WbEhx1B5DWQfdL4
4w7uEAyajhSqfNaQpRgvqQuabAohh2Lf6l++L14pJcvQNVwqKeFejy0/HTxn
4pajtPrAb3kdosNQxXz97ftl5HBkFTr+eu0IeNfn7s27LSdHwtPeYK5cG0be
gMs+91Qn6kRHobF4+PduSwQ5Gs4u28mr3DFwHeu1O1oiybH4NiygZ3BtFDkO
U1WDo309ohXIN01Z7NzxKA7NcOzPjSYDAeN/9LuFxc5aAArejTnmLpol4POD
DzSO9xTUE9ARE/fOPSuZbYRn5OQQt7ARgXMST93nXYkDN64/m6tOoK7ElEaW
/7ZopoKgqPBv+1pJXQVnt7KSmyWioeKD3gttidQTkfnPWalVNEtCycXwoXUP
xZ4EQ/NXf/rVJlFPRlrPr82KYbKQjJryO94PXMnUU9A5YC8N2ppCPQXBtkd1
snlq6qm4oA59wS2kouXW/S/zoaGeBtXDCefhQ2QhDdPPJU8eXxN7Opa3zr3h
zNdST8cuffRRjzNkloGSu5fauYUMxC3uH3vdNyG4ZsCnu1Xsm9C25wy4mRp5
0tZy66c66mqYm9zDs38ms0yUmWq2cQuZ2Hl9tN6nUU9dA3PtkmvcM/+6aHwy
eijeQO81ODEx5jw/QrZpsCg+cGmzaKZFVd85j82+RtprkVz0UZsmjixoMTWy
6PHzPrJNC+tSScAL0UyHwt161K7Por0OW1LHPuYWdPA1lW94o4Zs06HszvT7
K4bITI/tusLj3NDjbuzeTm5BD6W+fdytMZv2euTMk+7JVubQ3gDTzssrFhaR
YcAX0t07bv9LFgyoUE34Wt/Kpb0B1Wnyb46mk5kRnl1/f1dQRoYRx2vDHdyC
EVfaq58aLOLeiIGW6AbP87l4BVd6eVM=
                "]]}, 
              {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
               0.007333333333333334], AbsoluteThickness[1.6], 
               GeometricTransformationBox[InsetBox[
                 FormBox[
                  StyleBox[
                   GraphicsBox[
                    {EdgeForm[None], 
                    PolygonBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}}]}],
                   StripOnInput->False,
                   GraphicsBoxOptions->{DefaultBaseStyle->Directive[
                    PointSize[0.007333333333333334], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]]}],
                  TraditionalForm], {0., 0.}, Automatic, Offset[
                 5]], CompressedData["
1:eJxNzX8s1HEcx/GvX2vVFqmWsWt3+d1oMT+2GK+4/Iqk5c7dOfe9H5x+LMZG
f35baZWTomw0lYaWtKgRIYdydplFS7OUU0Npcypy/bC6us/3uz7b+4/HH8/P
S6DKO5jtQFGU0Hp21rOn2CcC9f+DCF+GDoy+m+mL/mdGhEo7Jlk4S6wXobft
/fN61pQY4fxNLmuSpmyGGJNb1vHSdRbSi6G7fqbZFOJs29GLsSt0NqygNITs
ZiC3tHyFMzIgKjR1FrJmMlDfJOvIeR1K+gzYyTYf678WRnoJBtqPBwywhgTG
0lYzZ0YCeZP53hPWegka7J5qXelw0ktxR27xqu4nhhQj4TEznBkpTOfNDTWs
9VIcaQoK7AqOIr0MLysWFzhDhqT1Q22nnKJJL8Mjo7bW1E+sl+Gx/pLCL38P
6TMxvTTYyxmZqPb0ijI/JGYyYaB/pS9/JNZn4utpzdqNzjGkl2Osdvdc0U1i
yFFn9kgoZs3IIeA9+FwjjCW9HNOW7ipHTyHps3DBI8jCGVk459zVWSAmZrKg
des7rNPsJX0WqNz7Rs6UAlETP3aUsYYCb753FCzpiBkF7vpHaJm3bK/AoZke
A2eKxm1vB/+TrPk03IKq7Bsq48h/NNqcXApWtsfbTNMY1QbWx84TMzTqts47
ClnfoPFhcjCfZ0ggezTm3IMNvA2JNptoBLQIfbexppQwtAyPCzTEfCXONuY5
roYkkX0lNGVXsjnTShQV+xg4M0r0tefUOU3tI/tKSMWfNOU/k8m+Eq0Lrak+
7ilkXwnRcmIrZ0oF1dwrV1/WfBXG4yeedQ8QQ4VIN11cxDAxbbVk+BZnxmo/
40jFyn6yr4Lo24udlaz1KqSMJVzkbFKhPDJ9kTOlxlFeT9pl1nw1TjQ2e6el
p5J9NQSK1RLOtBolv6/O/vUfDpE8PQ==
                "]]}, 
              {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
               0.007333333333333334], AbsoluteThickness[1.6], 
               GeometricTransformationBox[InsetBox[
                 FormBox[
                  StyleBox[
                   GraphicsBox[
                    {EdgeForm[None], 
                    PolygonBox[{{0, 1}, {1, 0}, {0, -1}, {-1, 0}}]}],
                   StripOnInput->False,
                   GraphicsBoxOptions->{DefaultBaseStyle->Directive[
                    PointSize[0.007333333333333334], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]]}],
                  TraditionalForm], {0., 0.}, Automatic, Offset[
                 5]], CompressedData["
1:eJxNzXtIUwEUx/FrqeUEqa0iSmuzLKIEey4q3U8rXU97SNFLxnZfu7eXkqBW
NqLShhYj7GFky2IlFeKiLCO6FSZWVAxp5IIuEdEDahX2Rw9quHMvHTh/fOBw
vhbnjjXcYIZhCmObENtBDI3HBeb/8bvQEAzKy7Pf5w1YcSFtzPY/VlvENmDV
haPRO9dFzQwL9ch39pRmM4u54WOW0s2J8b9gYT1jvNKRYozbwSJh5MvrnZo9
LJqbbq+71jk6bj+Lnkjv09DFzLgVFvXd3Ux6xcS4VRY/DJNrMzQzHCJJirdn
2OS4zRyq+8+nPtYMDinmsfVPNDs4bNpUZnyq2cNhnmAv33t/CvU57Ppg76/R
rHBYKu4ffdmQQ30OFatnbOz9PYP6PLIWmbxdFTOpz+P9+vYNgdI51OdRbin4
E3Vaqc/joPdX+5GCedTn8TE76WtdHdnP48RHX4ORm099Hj+LphebNKs8Lr9a
muJ9mEt9AZF8z9eczTbqCzDYzgSna4aAkrmckHyb7BAwxBK+sSQL1BcwCtGb
gcNkv4C+rg7PJ5WsCFi07aS9MTmf+gJelBU2L7CSGRE1TYZ3fa1ks4gDRV8S
D4ULqC8i3JkxJ9q7kPoimg/+yovyRdQX4Xy92zzJtYT6Iqqe/V15+hpZETFq
T0abblVEZZXjrZC7jPpucOytxaJmsxst6Z8DuuHGOVzI2VCzgvpuNFYf9+n2
uPFovQ87lWLqu7E8mtmiW4ndt+6rPZG/ivpu7EtNTi8OkRkJa2d33K0cupr6
Eq6cSvDVjidDQrN06Z5uhwSur/Kbbo+E4dWFE+o0+yU8mGgq71HJioTnb8pa
dKsSRuQ9CulmZKwqNb7ecmAN9WVMS7UH7kbIkDHyy4tzJ9PWUl+GK3FWSLdH
xtS2s1tWNJL9MrpKuht0KzJMSf2Rq0GyKmPn9oofre/IzFb0vLr4+Vt2CfW3
wmkPjfse8z84Zj4s
                "]]}, 
              {RGBColor[0.922526, 0.385626, 0.209179], PointSize[
               0.007333333333333334], AbsoluteThickness[1.6], 
               GeometricTransformationBox[InsetBox[
                 FormBox[
                  StyleBox[
                   GraphicsBox[
                    {EdgeForm[None], 
                    PolygonBox[
                    NCache[{{0, 1}, {-1, 1 - 3^Rational[1, 2]}, {
                    1, 1 - 3^Rational[1, 2]}}, {{0, 
                    1}, {-1, -0.7320508075688772}, {
                    1, -0.7320508075688772}}]]}],
                   StripOnInput->False,
                   GraphicsBoxOptions->{DefaultBaseStyle->Directive[
                    PointSize[0.007333333333333334], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]]}],
                  TraditionalForm], {0., 0.}, Automatic, Offset[
                 5]], CompressedData["
1:eJxNz21IU2EYxvHpoqQVDEaaoLakMmiRVpIzm1crTLPWsnK9qcNYBu2c85xT
+SWt0QtKVlj0YgiyQIoSSis0omTWiCIWMyosK2eYlqKoxTCDzDr3OfTA8+H3
6br/c4uFPJdWo9FkT/6IyR+poQc3NP8/pxtx92u25Kz4avlnjxvZPbrZJuuY
bK8bWs/MKsuCyMx/9rkReUYXbDZHyQ65kTjtRmu/a0y2hsPblfGp0U8nZBs5
VJmSbYGDWnkXHJYumZdZ7Jku28khNmiz7lPs4fBw+qGFfUd0sr0cSqKOdBji
9LJ9HMraP7+oCMfLDnEotz4fYRWJ1MXD8EDPbVw8X7aRx3Vt5aBNMXhEdo/2
hetNtM/jasaMhVGlKbTPI3+0KTbhSyrt82i2tx/rLEijfR6t/blrPigO8Vg1
cHLBu9oM2hdgqLa7GmJX0b4AvZTwaKjAQvsCTme+3P1pbybtC2jqvjanS7FH
wIX0cdvz92SvgO3Lci8+/E32CTA+6N32SHFIQH1eWkyrYg1DZ+mbDtV6hhfB
u7d0JtA9DA3lp9YHUsjJDL0GY1nFk9V0H0NRsSXR5bTKtjM4Yq4cV+1keL38
do9qxjAS6++rHVhD9zOcsw0GCkNrZVczWJb4w45FWdTDcFtndmxX3MhQF23c
U/CT7GMIn76UVVezTnaQ4Zd1Vk3MXXKI4fzN8THVwwx9cdadsxVrRJj17REB
Vzb1i8jYZXOUIIf6RQwmrbyvOlnEb0/Rjld5ZIhwJD3mv91ZT/0imudc9/dY
cqlfRFuoxcKekZkIaSjJq9ojoqut1zxh3kD9It4dzq9V7RUx/96z1DYfuVFE
IEJrrty6kfpFWBMSSvsFcnDSE/ZLwx/JIRH3DPVh1cMiotoOpphsm6hfQu9A
S35hDVkvIWfajxbVRgms7G369zQ79UuwHZi6XzUkLL184trTJrJdQqP+3MTg
lM3UL+FXaUzykGImweXPdqr2SPCfvVCtulpC+dFx31//AaQdS0k=
                "]]}, 
              {RGBColor[0.528488, 0.470624, 0.701351], PointSize[
               0.007333333333333334], AbsoluteThickness[1.6], 
               GeometricTransformationBox[InsetBox[
                 FormBox[
                  StyleBox[
                   GraphicsBox[
                    {EdgeForm[None], 
                    PolygonBox[
                    NCache[{{0, -1}, {-1, -1 + 3^Rational[1, 2]}, {
                    1, -1 + 3^Rational[1, 2]}}, {{
                    0, -1}, {-1, 0.7320508075688772}, {
                    1, 0.7320508075688772}}]]}],
                   StripOnInput->False,
                   GraphicsBoxOptions->{DefaultBaseStyle->Directive[
                    PointSize[0.007333333333333334], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]]}],
                  TraditionalForm], {0., 0.}, Automatic, Offset[
                 5]], CompressedData["
1:eJxNz39MlAUcx/EHlCLDgVuJym8zFRx0RKFodh+zIq6Wh4pSInerrmCZnPf8
uubIky0OReYpGuHUzs5f8zIO1lTgzMuVP44DjzZmqKvDwjsL46hpZyvo5vN9
nvXdPn+8tu8/76y3alYaJjEMsy66mOhiGTq7Ccz/z2XCncF7J86sDT3/wB4T
9ji3LzfvCqkf2G9Crf/CRzbZARMi52pbjssOm8B99+KQRzbDIphY99Kg7CQW
2U+GLGOyM1lULUlxPLKbrGJxsWakLUs2WNy4vPV6kWwti/mpy2I7p92TrGfR
2830JUyOlzqMLKY3huzmZLKFxeFD/st1mqmSbSy+YPZcaZBtZ7Erof2flK0Z
kl0sPlsw5Kjoy5LsYfH9enXOX2/Ok+xnkf5xVXB0SrbkAIvGjb2tlbtzJIdZ
pHhbZullMxz6jo60B8y5kpM4DOj1W7peeUpyJofgybjJbtkqDqPpjswhr0oy
OBRHrnXPmF4gWcsh/dM0dp/pWcl6Ds2Vjy61blhI/RxOGqonFFs4GAyd3zTI
tnGYF/fQtxV/k+0cjm1Jsa6X7eKQ5rtQUinbw+GGrrYnuXEp9XPIH8x/uSkV
1M9hwUDH2dJT5DCHn31Tw7d+X0b9PH79+qz1vcIXqJ9H0fnI4kWa5dTP42B9
rua4s5j6eST+sPcx1JdQP49Ihvrz/EIN9Uf/5/SXrV7xGvXz8Bt1pxUbeRxd
s7P3l02vUz+P/rhjecOybTxqmr+cMneCbOdR6V71vmIXD3trj0+xh8eJ5kWX
3plYQf08rl4vzjbIDvBo8zm3KQ7zMH4Y81XOkJb6BZTfTSuflFVK/QIa48ca
FGcK6KjQ/Vi3jqwSMDfGe0vzCRkC9nWN68YdZK2A0VPmcFfeSuoXULNhYfXA
EbJRQK5f5Q4OkC0CDDvizWUPr6J+ARFnyZGbeWS7gNm6+x/MfJrsEtA//vYS
/V6yR0Bny6Enhq+R/QLOzdHOur1tNfULKCh0aBSHBajcz9zlr5IZEaUFmvNd
/5KTRPzhffxPxZkirqT6+3vUZdQvImn/SIxPNkQcPqAuCtrWUL+I53aaqhXr
RbS23r5Un7uW+kUszm+6r9giYlPfxeGDxWSbiLzkV5u8m8l2ERmhou3tTrJL
xIGxhG7FHhHsjM7fFPtFbJ6WkNohOyDiTsLpHRt/IodFVO33uhUzZoSsda75
4+QkM2a/MWpVx5ZTvxlt78aeUawy42ZBd0gxok40zkTU/wFcj7oi
                "]]}}, {
              {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
               0.007333333333333334], AbsoluteThickness[1.6]}, 
              {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
               0.007333333333333334], AbsoluteThickness[1.6]}, 
              {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
               0.007333333333333334], AbsoluteThickness[1.6]}, 
              {RGBColor[0.922526, 0.385626, 0.209179], PointSize[
               0.007333333333333334], AbsoluteThickness[1.6]}, 
              {RGBColor[0.528488, 0.470624, 0.701351], PointSize[
               0.007333333333333334], AbsoluteThickness[
               1.6]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}}, {
              {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
               0.007333333333333334], AbsoluteThickness[1.6]}, 
              {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
               0.007333333333333334], AbsoluteThickness[1.6]}, 
              {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
               0.007333333333333334], AbsoluteThickness[1.6]}, 
              {RGBColor[0.922526, 0.385626, 0.209179], PointSize[
               0.007333333333333334], AbsoluteThickness[1.6]}, 
              {RGBColor[0.528488, 0.470624, 0.701351], PointSize[
               0.007333333333333334], AbsoluteThickness[
               1.6]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}}}, {{}, {}}}, {{}, {{{}, {}, 
              {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
               Tiny], LineBox[{{87.5, 0.}, {87.5, 102.7347806046776}}]}, 
              {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
               Tiny], LineBox[{{155.5, 0.}, {155.5, 102.7347806046776}}]}, 
              {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
               Tiny], LineBox[{{225.5, 0.}, {225.5, 102.7347806046776}}]}, 
              {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
               Tiny], LineBox[{{297.5, 0.}, {297.5, 102.7347806046776}}]}, 
              {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
               Tiny], LineBox[{{388., 0.}, {388., 102.7347806046776}}]}}, {
              {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
               Tiny]}, 
              {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
               Tiny]}, 
              {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
               Tiny]}, 
              {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
               Tiny]}, 
              {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
               Tiny]}}, {
              {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
               Tiny]}, 
              {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
               Tiny]}, 
              {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
               Tiny]}, 
              {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
               Tiny]}, 
              {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
               Tiny]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}}, {
              {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
               Tiny]}, 
              {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
               Tiny]}, 
              {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
               Tiny]}, 
              {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
               Tiny]}, 
              {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
               Tiny]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}}}, {{}, {}}}},
          AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
          Axes->{True, True},
          AxesLabel->{None, None},
          AxesOrigin->{0, 0},
          DisplayFunction->Identity,
          Frame->{{True, False}, {True, False}},
          FrameLabel->{{
             FormBox["\"Marker position (cM)\"", TraditionalForm], None}, {
             FormBox["\"index\"", TraditionalForm], None}},
          FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
          GridLines->{None, None},
          GridLinesStyle->Directive[
            GrayLevel[0.5, 0.4]],
          
          ImagePadding->{{46., 11.000000000000057`}, {42.00000000000003, 
           24.02304685466069}},
          LabelStyle->Directive[FontSize -> 13, FontFamily -> "Helvetica", 
            GrayLevel[0]],
          
          Method->{
           "OptimizePlotMarkers" -> True, 
            "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& )}},
          
          PlotLabel->FormBox[
           "\"Length (cM) = {102.7, 62.7, 80.7, 68.1, 96.}\"", 
            TraditionalForm],
          PlotRange->{{0, 388.}, {0, 102.7347806046776}},
          PlotRangeClipping->True,
          PlotRangePadding->{{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.02], 
             Scaled[0.05]}},
          Ticks->{Automatic, Automatic}], {192., -116.80842387373012}, 
         ImageScaled[{0.5, 0.5}], {360., 222.49223594996212}], InsetBox[
         GraphicsBox[{{{{}, {{
               {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
                0.007333333333333334], AbsoluteThickness[1.6], 
                GeometricTransformationBox[InsetBox[
                  FormBox[
                   StyleBox[
                    GraphicsBox[
                    {EdgeForm[None], DiskBox[{0, 0}]}],
                    StripOnInput->False,
                    GraphicsBoxOptions->{DefaultBaseStyle->Directive[
                    PointSize[0.007333333333333334], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}],
                   TraditionalForm], {0., 0.}, Automatic, Offset[
                  5]], CompressedData["
1:eJx1zrtKA1EUheGtNpYWFiksVERERLzfY068RGMyGhPFXrD2FfajnUfyERxw
rWItcGD42P/sMzNrn9/Tr4WI+GjvufaeD14/vT9XCgLswEW4DJdM9tV/zvl7
ubdu8j82MG+a7Ftw22TfMXfhPtwz2Q/MQ/PIPDb5nRPz1Dwzz+GFyX5pXpld
eG2y98yiphl9NTnfqOly7xazyR53appxrybngcqeAzUe1DTjUU3OQ5U9h2o8
qWnGCHMDR9pjrObY9hrrjfZ4VpPzi8qe7BOVvUzUhNVkj1e1mAmryR5T7Jvs
aVY+n6nsZaamWc14UwtM9x3nMFfMYb1Y57li59q9X+DifN0=
                 "]]}, 
               {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
                0.007333333333333334], AbsoluteThickness[1.6], 
                GeometricTransformationBox[InsetBox[
                  FormBox[
                   StyleBox[
                    GraphicsBox[
                    {EdgeForm[None], 
                    PolygonBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}}]}],
                    StripOnInput->False,
                    GraphicsBoxOptions->{DefaultBaseStyle->Directive[
                    PointSize[0.007333333333333334], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]]}],
                   TraditionalForm], {0., 0.}, Automatic, Offset[
                  5]], CompressedData["
1:eJxtksFtw0AMBJm4EbkTPlKBH44sOdJZQd5ugaWoFJaiUiIYXAO7toDDgHO7
vI+Oy/30dzCzr/187OfT8J39gSx6ET6EL7lvpgtDmMWtVa+v+0v1araao+de
Ij9wDj3HPPBevJOy1wYmes8cfM2Je/RHpo+cC/Uje7uy95pDCJ9C+2G6MHCP
nvqJ6ZPk4OfykjP1M/sAsVe8NfZdY++NfRMf4lfxKf75392YndCFTYi9cWOu
wixuQluYyHU1t6Iv7/1aDMnBp3ATome/zE7oxSbc/T8zpYoE
                 "]]}, 
               {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
                0.007333333333333334], AbsoluteThickness[1.6], 
                GeometricTransformationBox[InsetBox[
                  FormBox[
                   StyleBox[
                    GraphicsBox[
                    {EdgeForm[None], 
                    PolygonBox[{{0, 1}, {1, 0}, {0, -1}, {-1, 0}}]}],
                    StripOnInput->False,
                    GraphicsBoxOptions->{DefaultBaseStyle->Directive[
                    PointSize[0.007333333333333334], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]]}],
                   TraditionalForm], {0., 0.}, Automatic, Offset[
                  5]], CompressedData["
1:eJyFz91pgzEMhWG1WcTZRFcZIBOY5j8pdAWPolE8ikdpSHUoem/ygXnw4Vji
23797E8bM9s9z8fzfFp+4+AvAyqfqR3/XIeqcvXasepph8oHDN1POVd7oXqG
Xsu7ww7V0x7NCTjhUv9cVd7OVYcdDhhwwqX5l9wPlTvscMCAEy6q/79WG3TY
4UhnGm/ypX23aoPq+a3a4YABJ1zQ7vk+bfeaO+yQ7yJd6XyT26PaoKcdKh9p
wAnVW9C+q+3fXxc5mz4=
                 "]]}, 
               {RGBColor[0.922526, 0.385626, 0.209179], PointSize[
                0.007333333333333334], AbsoluteThickness[1.6], 
                GeometricTransformationBox[InsetBox[
                  FormBox[
                   StyleBox[
                    GraphicsBox[
                    {EdgeForm[None], 
                    PolygonBox[
                    NCache[{{0, 1}, {-1, 1 - 3^Rational[1, 2]}, {
                    1, 1 - 3^Rational[1, 2]}}, {{0, 
                    1}, {-1, -0.7320508075688772}, {
                    1, -0.7320508075688772}}]]}],
                    StripOnInput->False,
                    GraphicsBoxOptions->{DefaultBaseStyle->Directive[
                    PointSize[0.007333333333333334], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]]}],
                   TraditionalForm], {0., 0.}, Automatic, Offset[
                  5]], CompressedData["
1:eJxdzNFpAzEQRdFJ0sCWoHSwJcxnPhdXIAz5S2wlFaiELUEluASV4BJUwpYQ
E95gdAXDgctD7+fr6fPNzD4e9/K4V9PzL/83wy4rbNKxiz6gfc8m6DLD6BU2
2OGAdplN0GGGFTbY4YB2nU3QZYbRK2xyyB7/l7k39CQXGD3+Wcusyyw3mLEr
sMJdNhj9Brs85B19oB/o9jO7wCRXGN3hBrMsMHqVO4ze4A12eIcDHtB+ZxeY
4AodbnKXWRYYu4rd/ux/E3WkEA==
                 "]]}, 
               {RGBColor[0.528488, 0.470624, 0.701351], PointSize[
                0.007333333333333334], AbsoluteThickness[1.6], 
                GeometricTransformationBox[InsetBox[
                  FormBox[
                   StyleBox[
                    GraphicsBox[
                    {EdgeForm[None], 
                    PolygonBox[
                    NCache[{{0, -1}, {-1, -1 + 3^Rational[1, 2]}, {
                    1, -1 + 3^Rational[1, 2]}}, {{
                    0, -1}, {-1, 0.7320508075688772}, {
                    1, 0.7320508075688772}}]]}],
                    StripOnInput->False,
                    GraphicsBoxOptions->{DefaultBaseStyle->Directive[
                    PointSize[0.007333333333333334], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]]}],
                   TraditionalForm], {0., 0.}, Automatic, Offset[
                  5]], CompressedData["
1:eJyFz8FNxDAUhGEDDbgE00FKcAkRVy4WEmciEliOKSElpASXkBJcgktwCbsi
8yT8S2hXij7NrP1sP799vLw/Oedeb9/D7Xt0+u2f8dd1Ps3Km/KhnJSL8qRc
lUflphyVnYzLqcfcgLkD5nKOnWNz7F62b8I9/nuXvXuf+3tkeMz9uoK+om/o
3dL3fun7AIelXxfRj3KVSU4wYd0uN5nv9Ae0cwussEH31ethgAOMcJQJWj/J
FVq/yR1an+Ehqyx3+gbdd6+HAQ4wyhFan+AEV7jBHWZ4wCIrtL5Bd+n1MkDr
Bxgt/5yOtk852TrlSbnJ1c7X/5tylbssMuPc49LvK9hXsa5hjp1r9/C4d8C7
7J227s+7rovu2FM=
                 "]]}}, {
               {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
                0.007333333333333334], AbsoluteThickness[1.6]}, 
               {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
                0.007333333333333334], AbsoluteThickness[1.6]}, 
               {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
                0.007333333333333334], AbsoluteThickness[1.6]}, 
               {RGBColor[0.922526, 0.385626, 0.209179], PointSize[
                0.007333333333333334], AbsoluteThickness[1.6]}, 
               {RGBColor[0.528488, 0.470624, 0.701351], PointSize[
                0.007333333333333334], AbsoluteThickness[
                1.6]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}}, {
               {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
                0.007333333333333334], AbsoluteThickness[1.6]}, 
               {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
                0.007333333333333334], AbsoluteThickness[1.6]}, 
               {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
                0.007333333333333334], AbsoluteThickness[1.6]}, 
               {RGBColor[0.922526, 0.385626, 0.209179], PointSize[
                0.007333333333333334], AbsoluteThickness[1.6]}, 
               {RGBColor[0.528488, 0.470624, 0.701351], PointSize[
                0.007333333333333334], AbsoluteThickness[
                1.6]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}}}, {{}, {}}}, {{}, {{{}, {}, 
               {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
                Tiny], LineBox[{{87.5, 1.}, {87.5, 388.}}]}, 
               {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
                Tiny], LineBox[{{155.5, 1.}, {155.5, 388.}}]}, 
               {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
                Tiny], LineBox[{{225.5, 1.}, {225.5, 388.}}]}, 
               {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
                Tiny], LineBox[{{297.5, 1.}, {297.5, 388.}}]}, 
               {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
                Tiny], LineBox[{{388., 1.}, {388., 388.}}]}}, {
               {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
                Tiny]}, 
               {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
                Tiny]}, 
               {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
                Tiny]}, 
               {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
                Tiny]}, 
               {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
                Tiny]}}, {
               {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
                Tiny]}, 
               {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
                Tiny]}, 
               {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
                Tiny]}, 
               {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
                Tiny]}, 
               {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
                Tiny]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}}, {
               {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
                Tiny]}, 
               {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
                Tiny]}, 
               {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
                Tiny]}, 
               {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
                Tiny]}, 
               {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
                Tiny]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}}}, {{}, {}}}}, {{}, {{{}, {}, 
              {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
               Tiny], LineBox[{{1., 87.5}, {388., 87.5}}]}, 
              {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
               Tiny], LineBox[{{1., 155.5}, {388., 155.5}}]}, 
              {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
               Tiny], LineBox[{{1., 225.5}, {388., 225.5}}]}, 
              {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
               Tiny], LineBox[{{1., 297.5}, {388., 297.5}}]}, 
              {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
               Tiny], LineBox[{{1., 388.5}, {388., 388.5}}]}}, {
              {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
               Tiny]}, 
              {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
               Tiny]}, 
              {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
               Tiny]}, 
              {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
               Tiny]}, 
              {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
               Tiny]}}, {
              {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
               Tiny]}, 
              {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
               Tiny]}, 
              {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
               Tiny]}, 
              {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
               Tiny]}, 
              {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
               Tiny]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}}, {
              {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
               Tiny]}, 
              {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
               Tiny]}, 
              {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
               Tiny]}, 
              {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
               Tiny]}, 
              {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
               Tiny]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}}}, {{}, {}}}},
          AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
          Axes->{True, True},
          AxesLabel->{None, None},
          AxesOrigin->{0, 0},
          DisplayFunction->Identity,
          Frame->{{True, False}, {True, False}},
          FrameLabel->{{
             FormBox["\"estmap ordering\"", TraditionalForm], None}, {
             FormBox["\"refmap ordering\"", TraditionalForm], None}},
          FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
          GridLines->{None, None},
          GridLinesStyle->Directive[
            GrayLevel[0.5, 0.4]],
          
          ImagePadding->{{46., 11.000000000000057`}, {42.00000000000003, 
           24.02304685466069}},
          LabelStyle->Directive[FontSize -> 13, FontFamily -> "Helvetica", 
            GrayLevel[0]],
          
          Method->{
           "OptimizePlotMarkers" -> True, 
            "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& )}},
          
          PlotLabel->FormBox[
           "\"Kendall \[Tau] = {0.966, 0.909, 0.964, 0.977, 0.883}\"", 
            TraditionalForm],
          PlotRange->{{0, 388.}, {0, 388.}},
          PlotRangeClipping->True,
          PlotRangePadding->{{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.02], 
             Scaled[0.05]}},
          Ticks->{Automatic, Automatic}], {576., -116.80842387373012}, 
         ImageScaled[{0.5, 0.5}], {360., 222.49223594996212}]}, {}},
      ContentSelectable->True,
      ImageSize->1000,
      PlotRangePadding->{6, 5},
      ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztfXd8VMe1/z5tkSh2EjuO052X2Cl2GthUdzvGjh3HyUuc+CU/YxuwcMUd
U00vAoEkRBcCYaowAiTtrnpDvSKQKEIIEEiiqKJCDdHvzJy5ZefO3btFcvzH
4yOv9+5tM9/Tz5yZef61j994/d3XPn5z/Gs/evrD195/483xH/1ozHsfwk/m
/zKZzBdMpv965tsm+N5rMuF/6n8t8J/rT//3i/4v/yJH5t7e2vDRpmBnr+m3
5NhKjti/0eG1vaYkt/f8hhwH0kNyNfnnDDaRU70mp9s772fHcDl9D17dTT7v
ki7qVb4IvmMTw4PlN9NXyy1nx/JJPBvspC0qwrdLjzQFkONvaZ+geqm7psht
DSD32kaHO106EBxMfzfLbTFZyMeAXgVs/n3Yoh972FH9BrkDjzSMPsEb7CXy
ssdgA1SXugKmnKbfFOx/5vJ44QM8h15pEyKjvFXNCYTrKO6/1tyh6a/n3fQC
ee6Z5LsK+W8a3O4MduVleiCdtZInWNnvEvNRtIt7ZQnlH4lofNsLoNVyrjSI
naUca5ZvI8Lda7pDA6tLu12eI7oA23iHFzDzj6N0V+F8u/v7Xbro0hwQYCI0
gWqdIikVxLqEPN+mlTV63+0mvuuGGkV6L9UeVo4LUUOY5SYi3t907b+6V6pH
6nSQtvNOTTsNEHd9oNQ6FeI/dL1fo7PcMoCGRZhGVX6gHP4d8aPFTzQAHnnO
5iGH/1r/bSqT6GEHhZ3wCDROm3CYc3qw11DBiSy66p0Uc9ThAiRdNb/mLbyS
xm+cSlbpcFWL4VdDHa5WLJ51UX2Xd7BxqNtcbw8ODx9NZdeiJhX95RuuPCwb
dLXcq2lOe04OqPUcTH4bHRzsCo7yAHoHfc/AYKfUEvm8Yv+dlKMHKHe7tID6
HOi5yJgi+oPFnou6Rayf33TfT5e7xNgNcNUteHe4i5Yh56gsqvxJ8lt9r6uX
90vumkOe3C3/Jr67m3vHIMGTzlDgWN9pd+7lrhrEPSVPbpn076sUOfj7yz97
ZW9F4QbTH3oFPrnmKvGvj9N7FTZGS61WBEZPeKKXi368bsNV4a/P/Ud79aTf
vfpMRTG1IYAvOhTjrxL/+rhyL5UAq7f33qI2AKiutOZK/xlXhb+KqdX/PXqi
D3qElPpHL/X31f6B3Bvau9t0XSuXSIX/EXsnW0r0fW71/P7fkeu/oTrl6Y2m
y2569Ox/sEdP+dyjmWpKidouopRhHCX9+ITSL/qsAOyXx/fzlPL4RolSwnMC
Sn1pPeIp5XmP+pdSVDvfpuNEe0YlF8/3P0slf3rzlM+96V8KIcqieMaoXZRn
b5dcVg8D0y+BSr736Ek/e2RMqd+Tc9+sdTr5hvmiu+g5z1vnOy7uKPXMf7BH
T/ncIxdKCS0YoxRlBRq/eW19HyNPuEN9RpzccG9J+8ereOYr0jt/PQyx1071
oUXy88kZr73cW1Q+KX7lEyWePENhTc3jfPXfn/2P9+2JPuibOuZSZz0IZfWi
ZNerxL9ijKvK3ZCffXmCUw5JFX/MwydcFf6qFyV/Ob160u9eIcV6Vf/8yY+8
RL4GBwf/A/7bpfo+jJ79I2uB3FzaAhptmuEifBBGM6rjr3HHt/7fsdvjOCHK
Fu4q/vg/3Wp/j79sLqF2knE0rwV1Obqj6+qZ851+t5VIsvlKU5HJfPXCAfab
zctnDISPgKvXOwP+w3TrG27nKfB/3N4f3P48+dTxPHmEKc9b4XjsXMfYOY43
l6TWn7tE/cKA+g13m2ynN9xdL/215Ey+ee0S/4T7KOGARTdn/mWl48GMyvkB
FzuO/Td31TfoVTc7WlqCR7eMG9Y6bpgZ/mcy9+xYzq6gtsdckleXmlBNhnQ6
3fSCtz3CXlma2y/vP3A2Kv7g0VMtz3FX/A93/BfueL4aSWEMQ95pIZU3MoJz
HPi3LeUIetZmAK1i33TA0GQhaBJlwJ7PyzNFMXBX/oRdKXPC9g0Jix8SljAk
IuGBUxfyTT/irr2NHp/fFlY393UCYgBFsvX1UQCvjOSAzo7L26JTFk1JJAqt
rafxbPvZU62tzV3w3RRwvukS9UnMtbUsejBtc9NXgqdV6mug3JLrN27W1Ld+
GJH58hyHKQB6bjK/EZIKv5LLHqXPv3btGnt+INcLHO26efPmjRs3yNefcOdv
5+4fjRwkXQ8X/p57wmiPaKbl/ojYMpl2ZUfPK7TLyspSaHepatO//0WdS1rH
ZgEmh/OEUPuGBMD/TGbgfhADcpLWngU2HquujIlom/RU26QxbW8+0vL6yH9f
v2YaTs4NTnccSnZmAnXgb8kM57JZzuWzk5fNSlo6wxkywxH6mbOj4zJmJeEl
HlJI3TNq22xAis2O6tcXJo+d6yT9m+0wUyqBZLDrHqb3Xbhw4ejRo+TrCHp8
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\
\>"]]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {None, 
       RGBColor[0.87, 0.94, 1]}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Print",
 CellChangeTimes->{3.7651660791063957`*^9, 3.76856548237061*^9},
 CellLabel->
  "During evaluation of \
In[19]:=",ExpressionUUID->"e2654f26-5a4e-41d8-845e-6dc290726e75"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"# iterations = \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "\<\"20\"\>", "}"}], ",", 
     RowBox[{"{", "\<\"20\"\>", "}"}], ",", 
     RowBox[{"{", "\<\"20\"\>", "}"}], ",", 
     RowBox[{"{", "\<\"20\"\>", "}"}], ",", 
     RowBox[{"{", "\<\"15\"\>", "}"}]}], "}"}]}],
  SequenceForm["# iterations = ", {{"20"}, {"20"}, {"20"}, {"20"}, {"15"}}],
  Editable->False]], "Print",
 CellChangeTimes->{3.7651660791063957`*^9, 3.768565482448738*^9},
 CellLabel->
  "During evaluation of \
In[19]:=",ExpressionUUID->"05623e5f-96da-4d93-8676-734f1fc6430a"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Done! Finished date =\"\>", 
   "\[InvisibleSpace]", "\<\"Mon 3 Jun 2019 17:44:42\"\>", 
   "\[InvisibleSpace]", "\<\". \\tTime elapsed in magicMapRefine = \"\>", 
   "\[InvisibleSpace]", "763.9000000000001`", 
   "\[InvisibleSpace]", "\<\" Seconds.\"\>"}],
  SequenceForm[
  "Done! Finished date =", "Mon 3 Jun 2019 17:44:42", 
   ". \tTime elapsed in magicMapRefine = ", 763.9000000000001, " Seconds."],
  Editable->False]], "Print",
 CellChangeTimes->{3.7651660791063957`*^9, 3.7685654824643617`*^9},
 CellLabel->
  "During evaluation of \
In[19]:=",ExpressionUUID->"b06845a5-2204-46e3-ac56-14845d964725"],

Cell[BoxData["\<\"--------------------------------------------------------\
Export finalMap--------------------------------------------------------------\
\"\>"], "Print",
 CellChangeTimes->{3.7651660791063957`*^9, 3.7685654824643617`*^9},
 CellLabel->
  "During evaluation of \
In[19]:=",ExpressionUUID->"40751a23-a459-43ce-ac82-112e8756ec0b"],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     GraphicsBox[{{{}, {{
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           0.007333333333333334], AbsoluteThickness[1.6], 
           GeometricTransformationBox[InsetBox[
             FormBox[
              StyleBox[
               GraphicsBox[
                {EdgeForm[None], DiskBox[{0, 0}]}],
               StripOnInput->False,
               GraphicsBoxOptions->{DefaultBaseStyle->Directive[
                 PointSize[0.007333333333333334], 
                 RGBColor[0.368417, 0.506779, 0.709798], 
                 AbsoluteThickness[1.6]]}],
              TraditionalForm], {0., 0.}, Automatic, Offset[
             5]], CompressedData["
1:eJx1zrtKA1EUheGtNpYWFiksVERERLzfY068RGMyGhPFXrD2FfajnUfyERxw
rWItcGD42P/sMzNrn9/Tr4WI+GjvufaeD14/vT9XCgLswEW4DJdM9tV/zvl7
ubdu8j82MG+a7Ftw22TfMXfhPtwz2Q/MQ/PIPDb5nRPz1Dwzz+GFyX5pXpld
eG2y98yiphl9NTnfqOly7xazyR53appxrybngcqeAzUe1DTjUU3OQ5U9h2o8
qWnGCHMDR9pjrObY9hrrjfZ4VpPzi8qe7BOVvUzUhNVkj1e1mAmryR5T7Jvs
aVY+n6nsZaamWc14UwtM9x3nMFfMYb1Y57li59q9X+DifN0=
            "]]}, 
          {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
           0.007333333333333334], AbsoluteThickness[1.6], 
           GeometricTransformationBox[InsetBox[
             FormBox[
              StyleBox[
               GraphicsBox[
                {EdgeForm[None], 
                 PolygonBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}}]}],
               StripOnInput->False,
               GraphicsBoxOptions->{DefaultBaseStyle->Directive[
                 PointSize[0.007333333333333334], 
                 RGBColor[0.880722, 0.611041, 0.142051], 
                 AbsoluteThickness[1.6]]}],
              TraditionalForm], {0., 0.}, Automatic, Offset[
             5]], CompressedData["
1:eJxljcttw0AMRGmnEaUDl8CLG8ghdiR/VhJ8TgssRaWwFJUSw+bYmMkCiwe+
neF+Tr9ftw8z29/v5n63hvPtD2TRi/Ah/Jc7MF0YwiyurXrHev+pXs1Wcxy5
l8j3nEPPMfe8F/+k7LWeid4rB19z4h39gekD50L9wN5O7L3mEMKn0M5MFwbe
0VN/YfpFcvDX8pIz9Vf2AWKveGvsu8beMe/yqRvnQnJLEbmU3Co5G5md0IVN
GCP/s6gf2a9Cm5jdxD2vuQmRi+IiRC+Fq9Bm3tPN7H1m34Txzv0BvzeMGA==

            "]]}, 
          {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
           0.007333333333333334], AbsoluteThickness[1.6], 
           GeometricTransformationBox[InsetBox[
             FormBox[
              StyleBox[
               GraphicsBox[
                {EdgeForm[None], 
                 PolygonBox[{{0, 1}, {1, 0}, {0, -1}, {-1, 0}}]}],
               StripOnInput->False,
               GraphicsBoxOptions->{DefaultBaseStyle->Directive[
                 PointSize[0.007333333333333334], 
                 RGBColor[0.560181, 0.691569, 0.194885], 
                 AbsoluteThickness[1.6]]}],
              TraditionalForm], {0., 0.}, Automatic, Offset[
             5]], CompressedData["
1:eJxdztutAjEMRVEDjYRO/HULoIIIkrnzkmjBpbgUl5JS4MNBOgdptDVLtof7
8/3oNxH5+z6X73OV/PlLoZG17MhKw04vDfe0oVeqNZxz8pjvPb/TsNJxr3Tc
046t1Hl37nnHu0E+yGXBlgXnlLwu6Ebu5EE+yOU/71OnK7VSjerUoA6qrPi/
yoquK3olN3LPBnXODZqTDVuouuFeJbcN3cmDfJDLjl7y3bK641wlN3Lf8U7M
+9Q5JwfOlQNdD/RKNZpzalAH7cmJXk50PX/+AeXkmwc=
            "]]}, 
          {RGBColor[0.922526, 0.385626, 0.209179], PointSize[
           0.007333333333333334], AbsoluteThickness[1.6], 
           GeometricTransformationBox[InsetBox[
             FormBox[
              StyleBox[
               GraphicsBox[
                {EdgeForm[None], 
                 PolygonBox[
                  NCache[{{0, 1}, {-1, 1 - 3^Rational[1, 2]}, {
                    1, 1 - 3^Rational[1, 2]}}, {{0, 
                    1}, {-1, -0.7320508075688772}, {
                    1, -0.7320508075688772}}]]}],
               StripOnInput->False,
               GraphicsBoxOptions->{DefaultBaseStyle->Directive[
                 PointSize[0.007333333333333334], 
                 RGBColor[0.922526, 0.385626, 0.209179], 
                 AbsoluteThickness[1.6]]}],
              TraditionalForm], {0., 0.}, Automatic, Offset[
             5]], CompressedData["
1:eJx1zEFtxDAURdE/LYFAcBkEgpezjIrAqtRdkzhBYAiBYAgDwRAGgiEEQmfx
o+pdqZGsqxw9++Nr/fx+N7P769xe5838Sz9RWrzNW//x6O3Y2aweZvU4qye0
YFfhDd7htqiHRT0u6gle4BXe4B1uq3pY1eOqntCCXYW3633Usva6N/h/QC8f
s74b4ZM3oZfnrPcK/IBX9IFdgz+9p7djd2Jnm+6GTT1s6iMasZvgCZ7Rgt2B
Vuwe8AZ/wjv8hNuuPuzqYVcf4RE+wZP38Ga04N6Be/Vv9wsCoKR2
            "]]}, 
          {RGBColor[0.528488, 0.470624, 0.701351], PointSize[
           0.007333333333333334], AbsoluteThickness[1.6], 
           GeometricTransformationBox[InsetBox[
             FormBox[
              StyleBox[
               GraphicsBox[
                {EdgeForm[None], 
                 PolygonBox[
                  NCache[{{0, -1}, {-1, -1 + 3^Rational[1, 2]}, {
                    1, -1 + 3^Rational[1, 2]}}, {{
                    0, -1}, {-1, 0.7320508075688772}, {
                    1, 0.7320508075688772}}]]}],
               StripOnInput->False,
               GraphicsBoxOptions->{DefaultBaseStyle->Directive[
                 PointSize[0.007333333333333334], 
                 RGBColor[0.528488, 0.470624, 0.701351], 
                 AbsoluteThickness[1.6]]}],
              TraditionalForm], {0., 0.}, Automatic, Offset[
             5]], CompressedData["
1:eJxdkMttwzAQBZmkAZbAdKASVAKRay5CgJwjRB/nyBJUAktQCSqBJagElRAj
fotgx4AxeONHLtevH19vny8hhPf79+n+fQ767N/9H8v04KG8KTflQflUHpUv
5awcxF6MlucHE+Z0mNNjDu8dcK+9w+4peJftYXtW5aq8T3jX5H2b/LkTvQu9
MPtenH0vzb7Xzd7b/2TnMnqDWMQRLOhtYgV30HoH2PCOE/6CD4v3cfE+Ld53
8D18hh/AEb0CbuhVcEfvgG/iCVrvQi+s3sfV+7R638H38Bkc0BvhC/wGX+F3
+AO+wZ/ghV64eR9v3iewu/leD58t/2hPO6882jnlYvPFzebr96p8irvYxAPv
aLjHzlXMOTDH7o14V8IetlfGHnYu/+/5C7iL2Ak=
            "]]}}, {
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           0.007333333333333334], AbsoluteThickness[1.6]}, 
          {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
           0.007333333333333334], AbsoluteThickness[1.6]}, 
          {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
           0.007333333333333334], AbsoluteThickness[1.6]}, 
          {RGBColor[0.922526, 0.385626, 0.209179], PointSize[
           0.007333333333333334], AbsoluteThickness[1.6]}, 
          {RGBColor[0.528488, 0.470624, 0.701351], PointSize[
           0.007333333333333334], AbsoluteThickness[
           1.6]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}}, {
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           0.007333333333333334], AbsoluteThickness[1.6]}, 
          {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
           0.007333333333333334], AbsoluteThickness[1.6]}, 
          {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
           0.007333333333333334], AbsoluteThickness[1.6]}, 
          {RGBColor[0.922526, 0.385626, 0.209179], PointSize[
           0.007333333333333334], AbsoluteThickness[1.6]}, 
          {RGBColor[0.528488, 0.470624, 0.701351], PointSize[
           0.007333333333333334], AbsoluteThickness[
           1.6]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}}}, {{}, {}}}, {{}, {{{}, {}, 
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[Tiny],
            LineBox[{{1., 0.}, {389., 0.}}]}, 
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[Tiny],
            LineBox[{{1., 87.5}, {389., 87.5}}]}, 
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[Tiny],
            LineBox[{{1., 155.5}, {389., 155.5}}]}, 
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[Tiny],
            LineBox[{{1., 225.5}, {389., 225.5}}]}, 
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[Tiny],
            LineBox[{{1., 297.5}, {389., 297.5}}]}, 
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[Tiny],
            LineBox[{{1., 388.5}, {389., 388.5}}]}}, {
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
           Tiny]}, 
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
           Tiny]}, 
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
           Tiny]}, 
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
           Tiny]}, 
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
           Tiny]}, 
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
           Tiny]}}, {
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
           Tiny]}, 
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
           Tiny]}, 
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
           Tiny]}, 
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
           Tiny]}, 
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
           Tiny]}, 
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
           Tiny]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
           Tiny]}, 
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
           Tiny]}, 
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
           Tiny]}, 
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
           Tiny]}, 
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
           Tiny]}, 
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
           Tiny]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, {{}, \
{}}}, {{}, {{{}, {}, 
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[Tiny],
            LineBox[{{0., 0.}, {0., 388.}}]}, 
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[Tiny],
            LineBox[{{87.5, 0.}, {87.5, 388.}}]}, 
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[Tiny],
            LineBox[{{156.5, 0.}, {156.5, 388.}}]}, 
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[Tiny],
            LineBox[{{226.5, 0.}, {226.5, 388.}}]}, 
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[Tiny],
            LineBox[{{298.5, 0.}, {298.5, 388.}}]}, 
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[Tiny],
            LineBox[{{389.5, 0.}, {389.5, 388.}}]}}, {
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
           Tiny]}, 
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
           Tiny]}, 
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
           Tiny]}, 
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
           Tiny]}, 
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
           Tiny]}, 
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
           Tiny]}}, {
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
           Tiny]}, 
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
           Tiny]}, 
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
           Tiny]}, 
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
           Tiny]}, 
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
           Tiny]}, 
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
           Tiny]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
           Tiny]}, 
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
           Tiny]}, 
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
           Tiny]}, 
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
           Tiny]}, 
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
           Tiny]}, 
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
           Tiny]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, {{}, \
{}}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{False, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., -14.4},
      DisplayFunction->Identity,
      Frame->{{True, False}, {True, False}},
      FrameLabel->{{
         FormBox["\"finalmap ordering\"", TraditionalForm], None}, {
         FormBox["\"refmap ordering\"", TraditionalForm], None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{46., 8.523038723521381}, {42., 3.5062503912058958`}},
      LabelStyle->Directive[FontSize -> 13, FontFamily -> "Helvetica", 
        GrayLevel[0]],
      Method->{
       "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 389.}, {-16., 388.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {192., -116.80842387373012}, 
     ImageScaled[{0.5, 0.5}], {360., 222.49223594996212}], InsetBox[
     GraphicsBox[{{{}, {{
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           0.007333333333333334], AbsoluteThickness[1.6], 
           GeometricTransformationBox[InsetBox[
             FormBox[
              StyleBox[
               GraphicsBox[
                {EdgeForm[None], DiskBox[{0, 0}]}],
               StripOnInput->False,
               GraphicsBoxOptions->{DefaultBaseStyle->Directive[
                 PointSize[0.007333333333333334], 
                 RGBColor[0.368417, 0.506779, 0.709798], 
                 AbsoluteThickness[1.6]]}],
              TraditionalForm], {0., 0.}, Automatic, Offset[
             5]], CompressedData["
1:eJxF0ws01FkcB/AZjzwqrzRTbV61yZBBY4WG+SoJ0zBeM6YJY5gWie21OdIp
SlFCwrbZSsd6DEezKdUWm3B6HUvJlsJUVEtsot0e53jsf7I7/3vOPef/Ob97
/vf+7u/+rKTJwTJNCoUiJCaVmBqqbz3aYdaNZo6sWhIavFwHrvPljpeN+jkD
5SWtlr9oI/PHy/tk5aNq16/61Bx7j4r/bdT2YODjZR1s89B/XPZuLjZ/fBl9
7nsDfOsdn/wuc5ozybPxbrpJB+W/IVcu6ralmuNWb/3BtHw6tOl2CY7alur4
RM5snTWpDIzFtEVwdZfhmqmwaO9HW7VVy+cO24PVeoGZ1GKNqpx9Z7dRHdRO
op8adrZ2xI7HJuNehrb4sv+kI3J64ijJVky4R9DmlRxwUvuQppWoKXal2vHy
BrMXl1goD8C86BYm9L46E8nY44xsL8mr+xlO2Fq14M/k4m/U7mFxNbq6XWBO
S+C9P78C4sInlicaXOFS4ykUv2ChyODRtFuTG0aCrppn2jlDzvupd1TXHV4Z
/bdPljijv2AgYIi9Gp3JUTrtchfkLSQyms1We0mFt0ljOBuqa310aRXmPrfP
L431gOp0D+3csKzt0qTdUg5+b1MNN5i5Eje/nHQ/VRZyvpCDL+UQucPzvv4c
kZsX5uf4v9FyZsPiWulvso2kORTihMy1EJytqe228ISRYpg+Yu0N5bYjuS/r
PJHmvSH7axvSzPzST062pPm3Y2bZbvXBAYcNFfoBXtixX5JrfpO0rNyPMfjW
F6r0r59Zi6mulCFrQ3+1n2WLHA4t4uLCi6GiuoZ1M3Ws5cK8ctCXOboOzz49
ZXFfk3HiEmQLszaA2H3cosAHgYpCWdZSHuKO/5XG6fNB3yjfdPB0IEpem1UO
vlsPA/u606O0IAT7nd5vLfVFTcrS93foYTN5GARA29nYhZ1KWlezo/GwvxAD
LouaxODjqavU3lMhRIIq4Rw+6BmLCx03h2O3vZXF3118LJn8sOu5ngjNhyqF
964FIb9ROTm2SoT12z8bDomDoM9llyZuF8Fo6IpC82wQ7Hj+Xld6SC9epmh3
0tiodvrIP2/zRBvV/2t7e7dlDU08k//BYPzafH1Ta68YD3lSo/DGYJwzoh7m
j4lBnCZRQPjOyevF+bQIjHcSC6pCkEt9MtwnJM1Y0mKr7ItA7Opngcc4oSja
K9SaTohEhaq9laGg3GLFDW4hPd9dcYGrjAQ74MHxTSZhuNj5s+nOqUjMOSHP
CPIIQ31irYNJbxT8mNNWk+1haK/u+EPwkvQPbhG0EzYSWIdolxWsFKB1t/TR
0UTS1bIte42zJIinJKdrHRNgjEG5dbFWghVdp16bPRbAfderi+wbpN+zr64e
Vkqg1NA7YkE4vY4hTCmORh0zqYxaJcSEsoKzpy8aqaqGXBuODlMigTfR0GjQ
NjGNCZ/p98VSaAmIl0HUrcIwgh+VJAXRLXdD5SIYf6cblpAnxU6fwg+zFCII
fD/71SukSL3NcC/gihDVuaC2rFMKVbtEpYqw0iM6W2dcii7iWfaPhGNCPtbJ
myLj/wKuHl6y
            "]]}, 
          {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
           0.007333333333333334], AbsoluteThickness[1.6], 
           GeometricTransformationBox[InsetBox[
             FormBox[
              StyleBox[
               GraphicsBox[
                {EdgeForm[None], 
                 PolygonBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}}]}],
               StripOnInput->False,
               GraphicsBoxOptions->{DefaultBaseStyle->Directive[
                 PointSize[0.007333333333333334], 
                 RGBColor[0.880722, 0.611041, 0.142051], 
                 AbsoluteThickness[1.6]]}],
              TraditionalForm], {0., 0.}, Automatic, Offset[
             5]], CompressedData["
1:eJxN029MU1cYBvDOZiWKw0wFipUBIroZInVsWoU1z9RaqF0QcCQtwba31d7+
FRSRjcKmdkoNaOKGK1tBBIeKFRkpSDQyNgsDx4rAZkEMlnXIZmMsm1HrSNhl
S3r9cD788pzc+56T58QRe7N2MxkMhoBar1BrHrVWEqKVmauV8O1vC//nqgTG
oxz/R5QLt33xlHVFgscnnzWFJyqxUSDcF6DyFuZUxZt5tM1CjtBuVkIe4orK
dEmQFkhvy2hVov7OO495r0sxFO10LX1DBduHZy5dviDFwI1j28NeqMC9vnpR
KEeJOg8hqLy5BzGf+TI7cmSwd59nWPXqoE3pSseJdjXuup5lewd34b5FksQa
ViNt4uOlzWdkSFxSdjHmVzqPPigK8YWTwTzMUpJYGkEG867SaJ46j0RRAec1
T4IMg82bb2UUkTjdurDATu0fqhAMS9pIWIbGPaHHZJjpcdeO3iOD8+zs+W6g
I0A7tubaX6MzJOSTt1eM1cjhW85sdUdqgvZPnPK6sjXwdIbZkjvk0HjL255b
NYiWqlLuD8jR43zglT7VgFJGZbICD4v7sXtWA0nk1UFGlgLrH8YtywvToqy5
nfhEoICQWRx6jqfFb9TxhLkKXG5omr9ipxapN7JOx32qgPnQ1PiWXNoHit7m
iWza4PcdBU6paUIL3vMfVE0XFOA/8rtVHB3WXFxye6tHAVZtyaIv+bRrW5zM
Wx/oYDUuPtK1iYC7If+941k6iDdY3pc/UmBScfaOw6aD6UiSuJFLYG7M0U4d
fvnqQfR5yvkJKesP99A5/49R+wu/Dl8ftNXHZxCIog5gmaa97OjJ8rcCtM0j
1ZvVszqcFTf0dZPcrlZyU0o1R4+1cTFP9CYCY4EybWqOHj9upwaqI7BgR/ZP
ObV6NAupAgwRWFe9hl01Rnvh5NbrC7gGCEb8T0TzleibtypfpzBAZhWHV3CV
KCcLQ76lXO/YQN2QEmkR3EO5BO2f+/v7xWba8XMPoNIQ7LM/ee3y8kYD3FT9
BQNKlNyduJI+a/i/dxGq//5/nG3EiQNUAal3MXe9jS+5rvfzc7oE2o7eos4Y
vhGrsl9tOCVSgTXMNTm3GGFzxrbsS1Ph8NT4zW/KjOimSFap4Nv4Z6nXSu/H
u7uu9bXT+e/rmFXTXbRnClP3xH5Pe3FUzvS2l5wUOV3DvmfEjhn2frddhUvF
8X/3svaiiarHCGWzhs2v59P+F2Zg9IA=
            "]]}, 
          {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
           0.007333333333333334], AbsoluteThickness[1.6], 
           GeometricTransformationBox[InsetBox[
             FormBox[
              StyleBox[
               GraphicsBox[
                {EdgeForm[None], 
                 PolygonBox[{{0, 1}, {1, 0}, {0, -1}, {-1, 0}}]}],
               StripOnInput->False,
               GraphicsBoxOptions->{DefaultBaseStyle->Directive[
                 PointSize[0.007333333333333334], 
                 RGBColor[0.560181, 0.691569, 0.194885], 
                 AbsoluteThickness[1.6]]}],
              TraditionalForm], {0., 0.}, Automatic, Offset[
             5]], CompressedData["
1:eJxN02tQlFUcBvAFLZrisoiJICyLFwwGWBBkBhJ8gkBU7rFIUgQ7LPsue2H3
ZXflIiAiDKYQxm1htxFpV2O5VDShgohADIFSVjBIZYGAVsyQEuAiUb1+6eXD
8+E3z4fzn/85x5mXGcffxGAwwqiYUDGlUhVgEnlGkwmDzd0377Wm4XiEOKi9
j/ZonW2KU38mXiF2irO70uBikpFRv0mGjhhRwwnKEaZjYx0bLGy+4XiJIwP2
J3cd/icNMgtxzVSsDJd7+mxdAvnI61mbCYyjPTi8blkilkHLvdjSRvIxXKUT
PTTI0HbuJ4JxOB31RSPGqz0ydF7OGXJd4qMlJT7uUZ8Mw2aBGu4EH93pi6N+
/XTPPjXmUjErw/l1/tNZx3R0/fj+un6DzauaT1vP0WZcKFgL2GBrlsThyWb5
/+dby17iGvzkIHdYTHm0p4PFjWQuvyfHsLq7tnKHANt0dudcsuXQfsX+jDQX
oCU/gOVjkCMk6LfJ1mwByJj+iKRpOdSVVrl+9QIY//YKzv5LDt4+rpfbsgDN
Gac/6d5OIpxctfp9XYCg1LNm8XtJCKl159oRaOJpe8960nZaLS7aG0Ji4eTB
/clqAo5s9cdDCbTvvFab1JBKIprHTPTXEfB+/HPeNQkJq5te9W6dBEzDJQ90
JSQUE1sW3/iWwAqzfIGtIWHQRcFmjoDiVEoFq4UEe0mckL9AYDzEt2tggMR4
w0PHK88I3IwsXJm5T8KHGr+ZT2B+RJCT/ISEaeQZi2hbIYo6XI8ZLbPw3Rdv
L1/nCeFb8o3InZOFTw9N525tEuJBou3VC9sVmCzKCqsuzQDPWKb+MFaBqtuF
4b12Ihx4yvK8XqOATfGtkUsviPD583fVRvfUVp9pbyvAqWw0ep8U4YPX9cXK
cQXKrhwb2Uf5sY+nQ9k43X8Z/0uF1y4lpqLL66TmYthlTWzpcKddlK/44wih
RLaHs9OSVoyXqQuvkdKOKlzZNViuBGt47qBuVIwCRpzGqFfi+f9hbJNA338v
mHlXiThqTO0BCTi+E8K0cSXe+eHGzFZvCVxrk45HTtL9zimmoXqadpbnIFdv
qoLxrRm9hnL7cmiwxk6F5KNfmwV+JIFHiMN8kzNtRnvaUKk/bea7Mb8upqqg
CKteefFPCQrXAmSWUhXYJfOx1+yl8A89ROYUqNBoz7m/21eKW87xzfVq2lGh
buclHSoUtHfyCk9IMdhqG7LaqcLuI3nFnFIpStlme+70q+BS929lAdW7X5zL
8ZpVwX5zgqVHoxR+eY2vJj5SoXJ20en7ASl6+VF1JRv8H3ng9ro=
            "]]}, 
          {RGBColor[0.922526, 0.385626, 0.209179], PointSize[
           0.007333333333333334], AbsoluteThickness[1.6], 
           GeometricTransformationBox[InsetBox[
             FormBox[
              StyleBox[
               GraphicsBox[
                {EdgeForm[None], 
                 PolygonBox[
                  NCache[{{0, 1}, {-1, 1 - 3^Rational[1, 2]}, {
                    1, 1 - 3^Rational[1, 2]}}, {{0, 
                    1}, {-1, -0.7320508075688772}, {
                    1, -0.7320508075688772}}]]}],
               StripOnInput->False,
               GraphicsBoxOptions->{DefaultBaseStyle->Directive[
                 PointSize[0.007333333333333334], 
                 RGBColor[0.922526, 0.385626, 0.209179], 
                 AbsoluteThickness[1.6]]}],
              TraditionalForm], {0., 0.}, Automatic, Offset[
             5]], CompressedData["
1:eJxN0mlQlAUYB/BVDA8aASkgY4fEXcRIVjTAqOQvGiC4NbmAcogoAzpIvPu+
Ky6774oC44JYyBFE23JJsESGHHLIFVeeuKEupCkYRxwjIw2HgLjZVjO+++H/
4TfP83z5z7PuMLE33IDFYnnpskSXpbpc5oD/xZMTSBuesr7bEQ31i8jVJlrG
FuHO1zl6PqFN6Nus58KHPmuLrMWvfJfdqdbwxFimWPF23kw0nHLkA0MuYnyn
Y4gBga9O5ZMDbmKI/1CaFpsSiOwnU1K9xXA3O9RxbxOB7wX7tt/Ss4dsQ4RW
Zw1xcLnakUCZZiLeP0KMqoHxrKpdBLZFBX39QCFG/mnbdnk1Ae644kbdJTHG
2KoxrwkCwQZBXMtuMY7xp1MFRkKo3BbTBwcYfyL3a/rcJRb5IRtvmXgKkUcb
f6OUxwJOIQ27JUJ4pVyvuKmOBSs9btG1VYj/+noZi+rcSdXVUSFaknxSG7mS
Vz4+OZARdkwCO2OjmhJ7EudctpxvipFgtJw7nLiVRETx7o2lJRLUI2HwmicJ
Z+vf5Cn1EqjLfu3x30+iyy47SKHn2flm/s+dEvRzDOOzDpJgV5rnu1+TwKN2
Wqs5ROLwfHLOXj0rVa7DEXpOcxRvKrwtgXvon902R0mMstqsmrsl4DxciIs8
QuJbHq+1pYfZX93h2amZlmDLiotWgQrd/VxZ1kojKd4NPt8++xMJheffoQVs
xiqbN6+aOzC+MlwvaPCT4qNP76QHPyZRezZzMZeU4s6u+3/NaEm0R9+vHTsj
hcUD9ZxgA4WKSh9fIpvxD3zlI16dFEH3mobe2EHhrVHCvbBNCh86kbdnP4XT
ZqtMKzRS5F5Yf+WFL4XGqYA8zz5mznIbao/X86DuTbq0UkQpxMoL0RRCdygq
S1fS6B2NtH92loKlreC1Ii4NibT4vZ1fUvBuiJi6vZWZN43Ze1X70di8p2SV
Rz2F/IA1BSPhNALl23p/uUFhoZl/yllGg/dynfbZ7xRiMi2XmScwhmXs05Ny
Ggd09diNU3g+tXQiLINxT1VNS3IeDcOiDNclzynsTEtcU9JCoyk7zVj6ugjE
rHImrotGesG844ixCEmqfTepXho9ihG2ii3C4AGHwcZHjKvD1pvwDGWYjfI/
We4jQviHjz/jm8n+799XhKdPWj8YsmFc82PaVKaDDAuOI+VcoQjtVh/HTbrI
UNLcZmGrM/kOxyjHVYb+zKQzgakizF26+P54mAwFa3l9nCIRyuoMa71jZJhJ
FRz/1x7x29OPZDI+Gue03KuYcbJDKRFwmbn/B8x7MS4=
            "]]}, 
          {RGBColor[0.528488, 0.470624, 0.701351], PointSize[
           0.007333333333333334], AbsoluteThickness[1.6], 
           GeometricTransformationBox[InsetBox[
             FormBox[
              StyleBox[
               GraphicsBox[
                {EdgeForm[None], 
                 PolygonBox[
                  NCache[{{0, -1}, {-1, -1 + 3^Rational[1, 2]}, {
                    1, -1 + 3^Rational[1, 2]}}, {{
                    0, -1}, {-1, 0.7320508075688772}, {
                    1, 0.7320508075688772}}]]}],
               StripOnInput->False,
               GraphicsBoxOptions->{DefaultBaseStyle->Directive[
                 PointSize[0.007333333333333334], 
                 RGBColor[0.528488, 0.470624, 0.701351], 
                 AbsoluteThickness[1.6]]}],
              TraditionalForm], {0., 0.}, Automatic, Offset[
             5]], CompressedData["
1:eJxN02lUU0cUB/CAoKKUoLhA0daFKlXBBQSXqv8j0YJaECiLS1HigpIC1bwk
L4a85IWeFCtSN9wTWSpoPRLFoMZGBEXcqgVZKiAepZYEqQWKG2ihD74MH+bD
79w7Z+beOzNemBS2aQCPx1vDLRtu2XJr2QZj+i81yai4sOq1qUGMO/e/G8DU
Ec9cF6O+6qyEm12kk1elGLmx71KjPZQYXfvgbThnF77nsVmrlTi0h7/DzyRG
cuysiLY4JX6YU3MzwSBGeWyRmSdWov3VslXaKgr39/Fmv04j8f1RFlfnDGK1
Oersimzi4kmiqoACYr/9SRfl/byo7HHh9/08+7D22QYjcViQTt10RYnMj6c3
eOSIMbcif/HdIuK8e0Khz28k3+T3dZrPayWs8VPfHJpJwcd9476Kjxg4uOtj
Ph9P9fWnezYDXfZE04dvKLhclvj/LmDQe41kEZe/0q2nO4SBuJPffElGobSl
y35+GHFfvXEMegK6XrakU/jpQ0mxmGFQvrnaEq+j0H6FKcnXMphY38n0+r94
J2fHAwys70+3PzRw56UU3x2fy+Dc9i17X7pJYHwhLswoJP7x/q3CrMsM7Cxp
nr2eN3Cjwb+IQdJwbuMECfKsgd491cRdTLzZ+Jz4r+q5Az3GqLB8lXZOjUKC
Z6qptdt8VYgoOfVzcBcF203h+W0KFRIilfkXcyWw21NXeidNBWFWjW+rSYLK
92V/6C+qUOCdmGPzTIKq9sPssmou38IV0CxB7rSAMaJuFTyZNJPIUYpJt3QP
S3aosfQzie3Rw1IcLx13LuygGtFrzl/7u1IKz8l1EbeN6r59Lc1SyA2rj7Q9
UePIrwf38L1kkPqHSKxW4u2j3hhv8FiE1rknx26TITCh8bnegXjKXsH0FGcW
U10zqhxSZFgvDfnkjSuL3uv02v/Mwqg17iTuvdC++NEMFm8lT48Py5Ehc1a3
UutLbEg+aLHxIx5JKYImRrGYEyfYmlQvw7zoHkt5DAunEMOBTS0yvJ+Q5XVL
SJy6hRoUupkF1y2zfZcMtkcHuy9MZFGW4Ku+NJjG2a1Ptg1RsIBL7I1Kbxq7
/xknbdKyeJUeTnk40siZn6q7o2fRcW6l6OgKGtdD/31hzmGxlmufPpqGk1eB
rjWfxb613QFdG2lcSW0t/fYmCxH3vBsSaQRdU4599IDFXu77nkmiUbB0geBG
HQsx95ySU+m+f7v0Txaulyp4T47QaG067WT6wGLwgmMRJ27SfXOt6OfgjvRw
o60GQ3sHWkujXPCobQRfA1W8mdrfSEPfmld2b7gGw09eLRndQWOnYpoy0IXE
M58KlyR8SuKdQYUhlikamCfzhxbmyMF1+aRyvgb84z7ZRs6j4r/qCP6CxHXe
u3YmLNLg7K76LbxjctSuk4YUcc56N7MpP1sOTeT620MWk/jT+ldxJ5ZosPyF
ne+wdDksY/OspzhzY9DHfClH0DC3yPOcN7s1Ro/WyKGa0fa4PpDkUzEbDln7
OXSE1aVTSOyQZz99tUiDxuaMAkeJHCeD4WIj1kCvnnRdmyjHCEHDoPVycp4i
c6RrgYLUl25YcEGwm+T/D1LosCM=
            "]]}}, {
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           0.007333333333333334], AbsoluteThickness[1.6]}, 
          {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
           0.007333333333333334], AbsoluteThickness[1.6]}, 
          {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
           0.007333333333333334], AbsoluteThickness[1.6]}, 
          {RGBColor[0.922526, 0.385626, 0.209179], PointSize[
           0.007333333333333334], AbsoluteThickness[1.6]}, 
          {RGBColor[0.528488, 0.470624, 0.701351], PointSize[
           0.007333333333333334], AbsoluteThickness[
           1.6]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}}, {
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           0.007333333333333334], AbsoluteThickness[1.6]}, 
          {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
           0.007333333333333334], AbsoluteThickness[1.6]}, 
          {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
           0.007333333333333334], AbsoluteThickness[1.6]}, 
          {RGBColor[0.922526, 0.385626, 0.209179], PointSize[
           0.007333333333333334], AbsoluteThickness[1.6]}, 
          {RGBColor[0.528488, 0.470624, 0.701351], PointSize[
           0.007333333333333334], AbsoluteThickness[
           1.6]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}}}, {{}, {}}}, {{}, {{{}, {}, 
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[Tiny],
            LineBox[{{0.14646, 0.}, {593.658545, 0.}}]}, 
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[Tiny],
            LineBox[{{0.14646, 102.7348}, {593.658545, 102.7348}}]}, 
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[Tiny],
            LineBox[{{0.14646, 165.40140000000002`}, {593.658545, 
            165.40140000000002`}}]}, 
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[Tiny],
            LineBox[{{0.14646, 246.11940000000004`}, {593.658545, 
            246.11940000000004`}}]}, 
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[Tiny],
            LineBox[{{0.14646, 314.1965}, {593.658545, 314.1965}}]}, 
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[Tiny],
            LineBox[{{0.14646, 410.23170000000005`}, {593.658545, 
            410.23170000000005`}}]}}, {
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
           Tiny]}, 
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
           Tiny]}, 
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
           Tiny]}, 
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
           Tiny]}, 
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
           Tiny]}, 
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
           Tiny]}}, {
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
           Tiny]}, 
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
           Tiny]}, 
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
           Tiny]}, 
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
           Tiny]}, 
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
           Tiny]}, 
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
           Tiny]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
           Tiny]}, 
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
           Tiny]}, 
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
           Tiny]}, 
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
           Tiny]}, 
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
           Tiny]}, 
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
           Tiny]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, {{}, \
{}}}, {{}, {{{}, {}, 
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[Tiny],
            LineBox[{{0.14646, 0.}, {0.14646, 410.23170000000005`}}]}, 
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[Tiny],
            LineBox[{{151.947, 0.}, {151.947, 410.23170000000005`}}]}, 
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[Tiny],
            LineBox[{{249.95730500000002`, 0.}, {249.95730500000002`, 
            410.23170000000005`}}]}, 
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[Tiny],
            LineBox[{{366.470115, 0.}, {366.470115, 410.23170000000005`}}]}, 
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[Tiny],
            LineBox[{{459.271835, 0.}, {459.271835, 410.23170000000005`}}]}, 
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[Tiny],
            LineBox[{{593.658545, 0.}, {593.658545, 410.23170000000005`}}]}}, {
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
           Tiny]}, 
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
           Tiny]}, 
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
           Tiny]}, 
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
           Tiny]}, 
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
           Tiny]}, 
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
           Tiny]}}, {
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
           Tiny]}, 
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
           Tiny]}, 
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
           Tiny]}, 
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
           Tiny]}, 
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
           Tiny]}, 
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
           Tiny]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
           Tiny]}, 
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
           Tiny]}, 
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
           Tiny]}, 
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
           Tiny]}, 
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
           Tiny]}, 
          {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
           Tiny]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, {{}, \
{}}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{False, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., -14.768341200000002`},
      DisplayFunction->Identity,
      Frame->{{True, False}, {True, False}},
      FrameLabel->{{
         FormBox["\"finalmap position(cM)\"", TraditionalForm], None}, {
         FormBox["\"refmap position\"", TraditionalForm], None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{46., 8.523038723521381}, {42., 3.5062503912058958`}},
      LabelStyle->Directive[FontSize -> 13, FontFamily -> "Helvetica", 
        GrayLevel[0]],
      Method->{
       "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 593.658545}, {-16.409268, 410.23170000000005`}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {576., -116.80842387373012}, 
     ImageScaled[{0.5, 0.5}], {360., 222.49223594996212}]}, {}},
  ContentSelectable->True,
  ImageSize->1000,
  PlotRangePadding->{6, 5}]], "Print",
 CellChangeTimes->{3.7651660791063957`*^9, 3.7685654831049986`*^9},
 CellLabel->
  "During evaluation of \
In[19]:=",ExpressionUUID->"926cfaba-91af-4ce0-8e54-448be791355a"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Done. Finished date = \"\>", 
   "\[InvisibleSpace]", "\<\"Mon 3 Jun 2019 17:44:43\"\>", 
   "\[InvisibleSpace]", "\<\".\\tTime elapsed in all steps of magicMap = \
\"\>", "\[InvisibleSpace]", "813.19`", 
   "\[InvisibleSpace]", "\<\" seconds.\"\>"}],
  SequenceForm[
  "Done. Finished date = ", "Mon 3 Jun 2019 17:44:43", 
   ".\tTime elapsed in all steps of magicMap = ", 813.19, " seconds."],
  Editable->False]], "Print",
 CellChangeTimes->{3.7651660791063957`*^9, 3.7685654831362514`*^9},
 CellLabel->
  "During evaluation of \
In[19]:=",ExpressionUUID->"6ad6cad8-e439-4a68-849d-8de727bd9653"],

Cell[BoxData["\<\"------------------------------------------------------------\
End---------------------------------------------------------------------\"\>"]\
, "Print",
 CellChangeTimes->{3.7651660791063957`*^9, 3.7685654831362514`*^9},
 CellLabel->
  "During evaluation of \
In[19]:=",ExpressionUUID->"53bf0111-959d-4be7-bbc2-faf356d4c782"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"813.1727602`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.7651667273659954`*^9, 3.7685654831362514`*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"9fbe5074-430f-46a6-bd89-13a0d1ab5553"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"Example_magicMapOutput_dupebin_binning.csv\"\>", 
     ",", "\<\"Example_magicMapOutput_dupebin_magicsnp.csv\"\>", 
     ",", "\<\"Example_magicMapOutput_dupebin_adjacencymatrix.txt\"\>"}], 
    "}"}], ",", "\<\"Example_magicMapOutput_pairwise_similarity.txt\"\>", ",", 
   RowBox[{
   "{", "\<\"Example_magicMapOutput_pairwise_linkagemap.csv\"\>", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Example_magicMapOutput_refine_linkagemap.csv\"\>", 
     ",", "\<\"Example_magicMapOutput_refine_history.txt\"\>"}], "}"}], 
   ",", "\<\"Example_magicMapOutput_finalmap.csv\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.7651667273659954`*^9, 3.7685654831362514`*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"5817211e-6843-4deb-a63a-9d1a6f8d6a5a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plotHeatMapGUI", "[", 
  RowBox[{
  "\"\<Example_magicMapOutput_pairwise_similarity.txt\>\"", ",", 
   "\"\<Example_magicMapOutput_refine_linkagemap.csv\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.7651659329519954`*^9, 3.7651659628533955`*^9}, {
  3.7651667671941957`*^9, 3.7651668236463957`*^9}, {3.7651671111717954`*^9, 
  3.7651671117313957`*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"15ff962c-23c9-450d-8e4f-24c7541adee7"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{MagicMap`Private`color$$ = Hue, 
    MagicMap`Private`isrescale$$ = True, MagicMap`Private`isreverse$$ = True, 
    MagicMap`Private`isscale$$ = False, MagicMap`Private`set$$ = All, 
    MagicMap`Private`size$$ = 800, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[MagicMap`Private`set$$], All, "LinkageGroups"}, {
      All, {1}, {2}, {3}, {4}, {5}, {6}, {1, 2}, {1, 3}, {1, 4}, {1, 5}, {1, 
       6}, {2, 3}, {2, 4}, {2, 5}, {2, 6}, {3, 4}, {3, 5}, {3, 6}, {4, 5}, {4,
        6}, {5, 6}}}, {{
       Hold[MagicMap`Private`isrescale$$], True, "DataRescale"}, {
      True, False}}, {{
       Hold[MagicMap`Private`isreverse$$], True, "DataReversed"}, {
      True, False}}, {{
       Hold[MagicMap`Private`size$$], 800, "ImageSize"}, 200, 2000, 100}, {
      Hold[
       Row[{
         Manipulate`Place[1], 
         Manipulate`Place[2], 
         Manipulate`Place[3], 
         Manipulate`Place[4]}, 
        Spacer[10]]], Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[MagicMap`Private`isscale$$], False, "ColorFunctionScaling"}, {
      True, False}}, {{
       Hold[MagicMap`Private`color$$], Hue, "ColorScheme"}, {
      Hue, "TemperatureMap", "Rainbow", "SunsetColors", "GreenPinkTones"}}, {
      Hold[
       Row[{
         Manipulate`Place[5], 
         Manipulate`Place[6]}, 
        Spacer[10]]], Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = {
    879., {419., 426.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, MagicMap`Private`set$13169$$ = 0, 
    MagicMap`Private`isrescale$13174$$ = False, 
    MagicMap`Private`isreverse$13175$$ = False, 
    MagicMap`Private`size$13176$$ = 0, MagicMap`Private`isscale$13177$$ = 
    False, MagicMap`Private`color$13178$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {
       MagicMap`Private`color$$ = Hue, MagicMap`Private`isrescale$$ = True, 
        MagicMap`Private`isreverse$$ = True, MagicMap`Private`isscale$$ = 
        False, MagicMap`Private`set$$ = All, MagicMap`Private`size$$ = 800}, 
      "ControllerVariables" :> {
        Hold[MagicMap`Private`set$$, MagicMap`Private`set$13169$$, 0], 
        Hold[
        MagicMap`Private`isrescale$$, MagicMap`Private`isrescale$13174$$, 
         False], 
        Hold[
        MagicMap`Private`isreverse$$, MagicMap`Private`isreverse$13175$$, 
         False], 
        Hold[MagicMap`Private`size$$, MagicMap`Private`size$13176$$, 0], 
        Hold[
        MagicMap`Private`isscale$$, MagicMap`Private`isscale$13177$$, False], 
        Hold[MagicMap`Private`color$$, MagicMap`Private`color$13178$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> (
       MagicMap`Private`ggls$13108 = 
        MagicMap`plotHeatMap[
         MagicMap`Private`pairwisedata$13108, 
          "Example_magicMapOutput_refine_linkagemap.csv", 
          MagicDefinition`linkageGroupSet -> MagicMap`Private`set$$, 
          MagicMap`rescaleSimilarity -> MagicMap`Private`isrescale$$, 
          PlotLegends -> Automatic, DataReversed -> 
          MagicMap`Private`isreverse$$, ColorFunctionScaling -> 
          MagicMap`Private`isscale$$, ColorFunction -> 
          MagicMap`Private`color$$, ImageSize -> MagicMap`Private`size$$]; 
       MagicMap`Private`labls$13108 = Switch[
          Length[MagicMap`Private`ggls$13108], 1, {"Independence LOD"}, 3, {
          "Recombination fraction", "Linkage LOD", 
           "Recombination fraction & Linkage LOD"}, 5, {
          "Recombination fraction", "Linkage LOD", "Independence LOD", 
           "Recombination fraction & Linkage LOD", 
           "Linkage LOD & Independence LOD"}, 
          Blank[], Abort[]; Null]; TabView[
         Thread[MagicMap`Private`labls$13108 -> MagicMap`Private`ggls$13108], 
         Min[
          Length[MagicMap`Private`ggls$13108], 4]]), 
      "Specifications" :> {{{MagicMap`Private`set$$, All, "LinkageGroups"}, {
         All, {1}, {2}, {3}, {4}, {5}, {6}, {1, 2}, {1, 3}, {1, 4}, {1, 5}, {
          1, 6}, {2, 3}, {2, 4}, {2, 5}, {2, 6}, {3, 4}, {3, 5}, {3, 6}, {4, 
          5}, {4, 6}, {5, 6}}, ControlPlacement -> 1}, {{
         MagicMap`Private`isrescale$$, True, "DataRescale"}, {True, False}, 
         ControlPlacement -> 2}, {{
         MagicMap`Private`isreverse$$, True, "DataReversed"}, {True, False}, 
         ControlPlacement -> 3}, {{MagicMap`Private`size$$, 800, "ImageSize"},
          200, 2000, 100, ControlPlacement -> 4}, 
        Row[{
          Manipulate`Place[1], 
          Manipulate`Place[2], 
          Manipulate`Place[3], 
          Manipulate`Place[4]}, 
         Spacer[10]], {{
         MagicMap`Private`isscale$$, False, "ColorFunctionScaling"}, {
         True, False}, ControlPlacement -> 5}, {{
         MagicMap`Private`color$$, Hue, "ColorScheme"}, {
         Hue, "TemperatureMap", "Rainbow", "SunsetColors", "GreenPinkTones"}, 
         ControlPlacement -> 6}, 
        Row[{
          Manipulate`Place[5], 
          Manipulate`Place[6]}, 
         Spacer[10]]}, "Options" :> {ContinuousAction -> False}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{930., {480., 486.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.7685654843237777`*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"c2d3197f-989a-466d-845f-b4b202bbef2b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "plotMapComparison"}]], "Input",
 CellChangeTimes->{{3.7651671487661953`*^9, 3.7651671572167954`*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"15795b38-66ec-4fdc-a98f-9dca7615d941"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"plotMapComparison[estmap, refmap, \
isordering,linestyle] plot estimated map estmap vs reference map refmap. \
Comparsons are in terms of marker ordering (isordering = True) or marker \
position (isordering = False). The style of chromosome boundary lines is \
specified by linestyle. \"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"plotMapComparison", "[", 
                    RowBox[{
                    "MagicMap`Private`inputmapx_", ",", 
                    "MagicMap`Private`inputmapy_", ",", 
                    "MagicMap`Private`isordering_", ",", 
                    "MagicMap`Private`linestyle_", ",", 
                    RowBox[{"MagicMap`Private`opts", ":", 
                    RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    "MagicMap`Private`mapx", "=", 
                    "MagicMap`Private`inputmapx"}], ",", 
                    RowBox[{
                    "MagicMap`Private`mapy", "=", 
                    "MagicMap`Private`inputmapy"}], ",", 
                    "MagicMap`Private`temp", ",", "MagicMap`Private`refrule", 
                    ",", "MagicMap`Private`isexistungroup", ",", 
                    "MagicMap`Private`nungroup", ",", 
                    "MagicMap`Private`index", ",", "MagicMap`Private`order", 
                    ",", "MagicMap`Private`pos", ",", "MagicMap`Private`res", 
                    ",", "MagicMap`Private`data", ",", "MagicMap`Private`y00",
                     ",", "MagicMap`Private`xmin", ",", 
                    "MagicMap`Private`xmax", ",", "MagicMap`Private`ymin", 
                    ",", "MagicMap`Private`ymax", ",", "MagicMap`Private`g1", 
                    ",", "MagicMap`Private`g2", ",", "MagicMap`Private`gg", 
                    ",", "MagicMap`Private`g2yy", ",", "MagicMap`Private`i"}],
                     "}"}], ",", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"StringQ", "[", "MagicMap`Private`mapx", "]"}], 
                    ",", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{
                    "FileExistsQ", "[", "MagicMap`Private`mapx", "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"Print", "[", 
                    
                    RowBox[{"\<\"File \"\>", ",", "MagicMap`Private`mapx", 
                    ",", "\<\" does not exist!\"\>"}], "]"}], ";", 
                    RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", 
                    RowBox[{"MagicMap`Private`mapx", "=", 
                    RowBox[{"Import", "[", 
                    RowBox[{"MagicMap`Private`mapx", ",", "\<\"CSV\"\>"}], 
                    "]"}]}], ";"}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"StringQ", "[", "MagicMap`Private`mapy", "]"}], 
                    ",", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{
                    "FileExistsQ", "[", "MagicMap`Private`mapy", "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"Print", "[", 
                    
                    RowBox[{"\<\"File \"\>", ",", "MagicMap`Private`mapy", 
                    ",", "\<\" does not exist!\"\>"}], "]"}], ";", 
                    RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", 
                    RowBox[{"MagicMap`Private`mapy", "=", 
                    RowBox[{"Import", "[", 
                    RowBox[{"MagicMap`Private`mapy", ",", "\<\"CSV\"\>"}], 
                    "]"}]}], ";"}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"DuplicateFreeQ", "[", 
                    RowBox[{"MagicMap`Private`mapx", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{"2", ";;", "All"}], ",", "1"}], 
                    "\[RightDoubleBracket]"}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{
                    "Print", "[", "\<\"MarkerIDs are not unique in mapx!\"\>",
                     "]"}], ";", 
                    RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"DuplicateFreeQ", "[", 
                    RowBox[{"MagicMap`Private`mapy", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{"2", ";;", "All"}], ",", "1"}], 
                    "\[RightDoubleBracket]"}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{
                    "Print", "[", "\<\"MarkerIDs are not unique in mapy!\"\>",
                     "]"}], ";", 
                    RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", 
                    RowBox[{"MagicMap`Private`temp", "=", 
                    RowBox[{
                    RowBox[{"MagicMap`Private`mapx", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{"2", ";;", "All"}], ",", "1"}], 
                    "\[RightDoubleBracket]"}], "\[Intersection]", 
                    RowBox[{"MagicMap`Private`mapy", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{"2", ";;", "All"}], ",", "1"}], 
                    "\[RightDoubleBracket]"}]}]}], ";", 
                    RowBox[{"MagicMap`Private`temp", "=", 
                    RowBox[{"MagicMap`Private`temp", "/.", "\[VeryThinSpace]", 
                    RowBox[{"Dispatch", "[", 
                    RowBox[{"Thread", "[", 
                    RowBox[{
                    RowBox[{"MagicMap`Private`mapx", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{"2", ";;", "All"}], ",", "1"}], 
                    "\[RightDoubleBracket]"}], "\[Rule]", 
                    RowBox[{"Range", "[", 
                    RowBox[{"2", ",", 
                    RowBox[{"Length", "[", "MagicMap`Private`mapx", "]"}]}], 
                    "]"}]}], "]"}], "]"}]}]}], ";", 
                    RowBox[{"MagicMap`Private`mapx", "=", 
                    RowBox[{"MagicMap`Private`mapx", "\[LeftDoubleBracket]", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"{", "1", "}"}], ",", 
                    RowBox[{"Sort", "[", "MagicMap`Private`temp", "]"}]}], 
                    "]"}], "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{"MagicMap`Private`isordering", ",", 
                    RowBox[{
                    RowBox[{"MagicMap`Private`mapx", "=", 
                    RowBox[{"MagicMap`Private`mapx", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", 
                    RowBox[{"1", ";;", "2"}]}], "\[RightDoubleBracket]"}]}], 
                    ";", 
                    RowBox[{"MagicMap`Private`mapy", "=", 
                    RowBox[{"MagicMap`Private`mapy", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", 
                    RowBox[{"1", ";;", "2"}]}], "\[RightDoubleBracket]"}]}]}],
                     ",", 
                    RowBox[{
                    RowBox[{"MagicMap`Private`mapx", "=", 
                    RowBox[{"MagicMap`Private`mapx", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", 
                    RowBox[{"1", ";;", "3"}]}], "\[RightDoubleBracket]"}]}], 
                    ";", 
                    RowBox[{"MagicMap`Private`mapy", "=", 
                    RowBox[{"MagicMap`Private`mapy", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", 
                    RowBox[{"1", ";;", "3"}]}], "\[RightDoubleBracket]"}]}], 
                    ";"}]}], "]"}], ";", 
                    RowBox[{"MagicMap`Private`temp", "=", 
                    RowBox[{"SplitBy", "[", 
                    RowBox[{
                    RowBox[{"MagicMap`Private`mapx", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ";;", "All"}], "\[RightDoubleBracket]"}], 
                    ",", 
                    RowBox[{
                    RowBox[{
                    "#1", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "&"}]}], "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", "MagicMap`Private`isordering"}], ",", 
                    RowBox[{
                    RowBox[{"MagicMap`Private`pos", "=", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{"Position", "[", 
                    RowBox[{
                    RowBox[{"MagicMap`Private`temp", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1", ",", "2"}], 
                    "\[RightDoubleBracket]"}], ",", "\<\"ungrouped\"\>"}], 
                    "]"}], "]"}]}], ";", 
                    RowBox[{
                    RowBox[{"MagicMap`Private`temp", "\[LeftDoubleBracket]", 
                    RowBox[{"MagicMap`Private`pos", ",", "All", ",", "3"}], 
                    "\[RightDoubleBracket]"}], "=", "0.`"}], ";", 
                    RowBox[{"BlockRandom", "[", 
                    RowBox[{
                    RowBox[{"SeedRandom", "[", "1234", "]"}], ";", 
                    RowBox[{"MagicMap`Private`i", "=", 
                    RowBox[{"Mean", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox[
                    RowBox[{
                    RowBox[{"#1", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", "3"}], "\[RightDoubleBracket]"}],
                     "-", 
                    RowBox[{"#1", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "3"}], "\[RightDoubleBracket]"}]}], 
                    RowBox[{
                    RowBox[{"Length", "[", "#1", "]"}], " ", "2"}]], "&"}], 
                    ")"}], "/@", "MagicMap`Private`temp"}], "]"}]}], ";", 
                    RowBox[{
                    RowBox[{"MagicMap`Private`temp", "\[LeftDoubleBracket]", 
                    RowBox[{"MagicMap`Private`pos", ",", "All", ",", "3"}], 
                    "\[RightDoubleBracket]"}], "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"RandomReal", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"MagicMap`Private`i", " ", 
                    RowBox[{"Length", "[", "#1", "]"}]}]}], "}"}], ",", 
                    RowBox[{"Length", "[", "#1", "]"}]}], "]"}], "&"}], ")"}],
                     "/@", 
                    RowBox[{"MagicMap`Private`temp", "\[LeftDoubleBracket]", 
                    RowBox[{"MagicMap`Private`pos", ",", "All", ",", "3"}], 
                    "\[RightDoubleBracket]"}]}]}], ";", 
                    RowBox[{
                    RowBox[{"MagicMap`Private`temp", "\[LeftDoubleBracket]", 
                    RowBox[{"MagicMap`Private`pos", ",", 
                    RowBox[{"-", "1"}], ",", "3"}], "\[RightDoubleBracket]"}],
                     "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Max", "[", "#1", "]"}], "&"}], ")"}], "/@", 
                    RowBox[{"MagicMap`Private`temp", "\[LeftDoubleBracket]", 
                    RowBox[{"MagicMap`Private`pos", ",", "All", ",", "3"}], 
                    "\[RightDoubleBracket]"}]}]}]}], "]"}], ";"}]}], "]"}], 
                    ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", "MagicMap`Private`isordering"}], ",", 
                    RowBox[{
                    RowBox[{"MagicMap`Private`temp", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "All", ",", "3"}], 
                    "\[RightDoubleBracket]"}], "+=", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"{", "0", "}"}], ",", 
                    RowBox[{"Most", "[", 
                    RowBox[{"Accumulate", "[", 
                    RowBox[{"MagicMap`Private`temp", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", 
                    RowBox[{"-", "1"}], ",", "3"}], "\[RightDoubleBracket]"}],
                     "]"}], "]"}]}], "]"}]}]}], "]"}], ";", 
                    RowBox[{
                    RowBox[{"MagicMap`Private`mapx", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ";;", "All"}], "\[RightDoubleBracket]"}], 
                    "=", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{"MagicMap`Private`temp", ",", "1"}], "]"}]}], ";", 
                    RowBox[{"MagicMap`Private`refrule", "=", 
                    RowBox[{"SplitBy", "[", 
                    RowBox[{
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"MagicMap`Private`mapx", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{"2", ";;", "All"}], ",", 
                    RowBox[{"1", ";;", "2"}]}], "\[RightDoubleBracket]"}], 
                    ",", 
                    RowBox[{"List", "/@", 
                    RowBox[{"Range", "[", 
                    RowBox[{
                    RowBox[{"Length", "[", "MagicMap`Private`mapx", "]"}], 
                    "-", "1"}], "]"}]}], ",", "2"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    "#1", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "&"}]}], "]"}]}], ";", 
                    RowBox[{"MagicMap`Private`refrule", "=", 
                    RowBox[{"Map", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Rule", "@@", "#1"}], "&"}], ",", 
                    RowBox[{
                    "MagicMap`Private`refrule", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "All", ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "3"}], "}"}]}], 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"{", "2", "}"}]}], "]"}]}], ";", 
                    RowBox[{"MagicMap`Private`mapy", "=", 
                    RowBox[{"SplitBy", "[", 
                    RowBox[{
                    RowBox[{"MagicMap`Private`mapy", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ";;", "All"}], "\[RightDoubleBracket]"}], 
                    ",", 
                    RowBox[{
                    RowBox[{
                    "#1", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "&"}]}], "]"}]}], ";", 
                    RowBox[{"MagicMap`Private`isexistungroup", "=", 
                    RowBox[{"MatchQ", "[", 
                    RowBox[{
                    RowBox[{"MagicMap`Private`mapy", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", "1", ",", "2"}], 
                    "\[RightDoubleBracket]"}], ",", "\<\"ungrouped\"\>"}], 
                    "]"}]}], ";", 
                    RowBox[{"MagicMap`Private`nungroup", "=", 
                    RowBox[{"If", "[", 
                    RowBox[{"MagicMap`Private`isexistungroup", ",", 
                    RowBox[{"Length", "[", 
                    RowBox[{"MagicMap`Private`mapy", "\[LeftDoubleBracket]", 
                    RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], "]"}], ",",
                     "0"}], "]"}]}], ";", 
                    RowBox[{"MagicMap`Private`index", "=", 
                    RowBox[{
                    RowBox[{"MagicMap`Private`mapy", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "All", ",", "1"}], 
                    "\[RightDoubleBracket]"}], "/.", "\[VeryThinSpace]", 
                    RowBox[{"Dispatch", "[", 
                    RowBox[{"Flatten", "[", "MagicMap`Private`refrule", "]"}],
                     "]"}]}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{"MagicMap`Private`isexistungroup", ",", 
                    RowBox[{"MagicMap`Private`order", "=", 
                    RowBox[{"Append", "[", 
                    RowBox[{
                    RowBox[{"Ordering", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Median", "[", 
                    RowBox[{"Select", "[", 
                    RowBox[{"#1", ",", "NumberQ"}], "]"}], "]"}], "&"}], 
                    ")"}], "/@", 
                    RowBox[{"Most", "[", "MagicMap`Private`index", "]"}]}], 
                    "]"}], ",", 
                    RowBox[{"Length", "[", "MagicMap`Private`index", "]"}]}], 
                    "]"}]}], ",", 
                    RowBox[{"MagicMap`Private`order", "=", 
                    RowBox[{"Ordering", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Median", "[", 
                    RowBox[{"Select", "[", 
                    RowBox[{"#1", ",", "NumberQ"}], "]"}], "]"}], "&"}], 
                    ")"}], "/@", "MagicMap`Private`index"}], "]"}]}]}], "]"}],
                     ";", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "MagicMap`Private`mapy", ",", "MagicMap`Private`index"}], 
                    "}"}], "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    "#1", "\[LeftDoubleBracket]", "MagicMap`Private`order", 
                    "\[RightDoubleBracket]"}], "&"}], ")"}], "/@", 
                    RowBox[{"{", 
                    RowBox[{
                    "MagicMap`Private`mapy", ",", "MagicMap`Private`index"}], 
                    "}"}]}]}], ";", 
                    RowBox[{"MagicMap`Private`temp", "=", 
                    RowBox[{"If", "[", 
                    RowBox[{"MagicMap`Private`isexistungroup", ",", 
                    RowBox[{"Most", "[", "MagicMap`Private`index", "]"}], ",",
                     "MagicMap`Private`index"}], "]"}]}], ";", 
                    RowBox[{"MagicMap`Private`pos", "=", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{"Position", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"KendallTau", "[", 
                    RowBox[{"#1", ",", 
                    RowBox[{"N", "[", 
                    RowBox[{"Range", "[", 
                    RowBox[{"Length", "[", "#1", "]"}], "]"}], "]"}]}], "]"}],
                     "&"}], ")"}], "/@", "MagicMap`Private`temp"}], ",", 
                    RowBox[{"_", "?", "Negative"}]}], "]"}], "]"}]}], ";", 
                    RowBox[{
                    RowBox[{
                    "MagicMap`Private`index", "\[LeftDoubleBracket]", 
                    "MagicMap`Private`pos", "\[RightDoubleBracket]"}], "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Reverse", "[", "#1", "]"}], "&"}], ")"}], "/@", 
                    RowBox[{
                    "MagicMap`Private`index", "\[LeftDoubleBracket]", 
                    "MagicMap`Private`pos", "\[RightDoubleBracket]"}]}]}], 
                    ";", 
                    RowBox[{
                    RowBox[{
                    "MagicMap`Private`mapy", "\[LeftDoubleBracket]", 
                    "MagicMap`Private`pos", "\[RightDoubleBracket]"}], "=", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"MagicMap`Private`temp", "=", 
                    RowBox[{"Reverse", "[", 
                    RowBox[{"MagicMap`Private`mapy", "\[LeftDoubleBracket]", 
                    RowBox[{
                    "MagicMap`Private`pos", "\[LeftDoubleBracket]", 
                    "MagicMap`Private`i", "\[RightDoubleBracket]"}], 
                    "\[RightDoubleBracket]"}], "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", "MagicMap`Private`isordering"}], ",", 
                    RowBox[{
                    RowBox[{"MagicMap`Private`temp", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "3"}], "\[RightDoubleBracket]"}], "=", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"{", "0", "}"}], ",", 
                    RowBox[{"Accumulate", "[", 
                    RowBox[{"Reverse", "[", 
                    RowBox[{"Differences", "[", 
                    RowBox[{"MagicMap`Private`mapy", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{
                    "MagicMap`Private`pos", "\[LeftDoubleBracket]", 
                    "MagicMap`Private`i", "\[RightDoubleBracket]"}], ",", 
                    "All", ",", "3"}], "\[RightDoubleBracket]"}], "]"}], 
                    "]"}], "]"}]}], "]"}]}]}], "]"}], ";", 
                    "MagicMap`Private`temp"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"MagicMap`Private`i", ",", 
                    RowBox[{"Length", "[", "MagicMap`Private`pos", "]"}]}], 
                    "}"}]}], "]"}]}], ";", 
                    RowBox[{"MagicMap`Private`temp", "=", 
                    RowBox[{"If", "[", 
                    RowBox[{"MagicMap`Private`isexistungroup", ",", 
                    RowBox[{"Most", "[", "MagicMap`Private`mapy", "]"}], ",", 
                    "MagicMap`Private`mapy"}], "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", "MagicMap`Private`isordering"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"MagicMap`Private`temp", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "All", ",", "3"}], 
                    "\[RightDoubleBracket]"}], "+=", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"{", "0", "}"}], ",", 
                    RowBox[{"Most", "[", 
                    RowBox[{"Accumulate", "[", 
                    RowBox[{"MagicMap`Private`temp", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", 
                    RowBox[{"-", "1"}], ",", "3"}], "\[RightDoubleBracket]"}],
                     "]"}], "]"}]}], "]"}]}], ";", 
                    RowBox[{"MagicMap`Private`g2yy", "=", 
                    RowBox[{"MagicMap`Private`temp", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", 
                    RowBox[{"-", "1"}], ",", "3"}], 
                    "\[RightDoubleBracket]"}]}], ";"}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{"MagicMap`Private`isexistungroup", ",", 
                    RowBox[{
                    RowBox[{"MagicMap`Private`mapy", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ";;", 
                    RowBox[{"-", "2"}]}], "\[RightDoubleBracket]"}], "=", 
                    "MagicMap`Private`temp"}], ",", 
                    RowBox[{
                    RowBox[{
                    "MagicMap`Private`mapy", "=", "MagicMap`Private`temp"}], 
                    ";"}]}], "]"}], ";", 
                    RowBox[{"MagicMap`Private`mapy", "=", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{
                    RowBox[{"MapThread", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"{", 
                    RowBox[{"#1", ",", 
                    RowBox[{"Range", "[", 
                    RowBox[{"Length", "[", "#1", "]"}], "]"}]}], "}"}], "]"}],
                     ",", "#2", ",", "2"}], "]"}], "&"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "MagicMap`Private`index", ",", "MagicMap`Private`mapy"}], 
                    "}"}]}], "]"}], ",", "1"}], "]"}]}], ";", 
                    RowBox[{
                    RowBox[{"MagicMap`Private`mapy", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], "=", 
                    RowBox[{"Range", "[", 
                    RowBox[{"Length", "[", "MagicMap`Private`mapy", "]"}], 
                    "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{"MagicMap`Private`isexistungroup", ",", 
                    RowBox[{"If", "[", 
                    RowBox[{"MagicMap`Private`isordering", ",", 
                    RowBox[{
                    RowBox[{"MagicMap`Private`mapy", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "MagicMap`Private`nungroup"}], ";;", "All"}],
                     ",", "2"}], "\[RightDoubleBracket]"}], "=", 
                    RowBox[{"MagicMap`Private`y00", "=", 
                    RowBox[{"-", 
                    RowBox[{"Ceiling", "[", 
                    RowBox[{
                    FractionBox["1", "25"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Length", "[", "MagicMap`Private`mapy", "]"}], 
                    "-", "MagicMap`Private`nungroup"}], ")"}]}], "]"}]}]}]}], 
                    ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"MagicMap`Private`mapy", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "MagicMap`Private`nungroup"}], ";;", "All"}],
                     ",", "5"}], "\[RightDoubleBracket]"}], "=", 
                    RowBox[{"MagicMap`Private`y00", "=", 
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{"Max", "[", "MagicMap`Private`g2yy", "]"}], 
                    "25"]}]}]}], ";"}]}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"MagicMap`Private`mapy", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "MagicMap`Private`nungroup"}], ";;", "All"}],
                     ",", "2"}], "\[RightDoubleBracket]"}], "=", 
                    RowBox[{
                    RowBox[{"MagicMap`Private`mapy", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "MagicMap`Private`nungroup"}], ";;", "All"}],
                     ",", "5"}], "\[RightDoubleBracket]"}], "=", 
                    RowBox[{"MagicMap`Private`y00", "=", "0"}]}]}]}], "]"}], 
                    ";", 
                    RowBox[{"MagicMap`Private`mapy", "=", 
                    RowBox[{"SortBy", "[", 
                    RowBox[{"MagicMap`Private`mapy", ",", "First"}], "]"}]}], 
                    ";", 
                    RowBox[{"MagicMap`Private`res", "=", 
                    RowBox[{"ConstantArray", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Length", "[", "MagicMap`Private`mapx", "]"}], 
                    ",", "9"}], "}"}]}], "]"}]}], ";", 
                    RowBox[{
                    RowBox[{"MagicMap`Private`res", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], "=", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"{", "\<\"No\"\>", "}"}], ",", 
                    RowBox[{"Range", "[", 
                    RowBox[{
                    RowBox[{"Length", "[", "MagicMap`Private`mapx", "]"}], 
                    "-", "1"}], "]"}]}], "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{"MagicMap`Private`isordering", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"MagicMap`Private`res", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", 
                    RowBox[{"5", ";;", "8"}]}], "\[RightDoubleBracket]"}], 
                    "=", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"No\"\>", ",", "\<\"estorder\"\>", 
                    ",", "\<\"SNP\"\>", ",", "\<\"LinkageGroup\"\>"}], "}"}], 
                    "}"}], ",", "MagicMap`Private`mapy"}], "]"}]}], ";", 
                    RowBox[{
                    RowBox[{"MagicMap`Private`res", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", 
                    RowBox[{"2", ";;", "3"}]}], "\[RightDoubleBracket]"}], 
                    "=", "MagicMap`Private`mapx"}]}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"MagicMap`Private`res", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", 
                    RowBox[{"5", ";;", "9"}]}], "\[RightDoubleBracket]"}], 
                    "=", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"No\"\>", ",", "\<\"estorder\"\>", 
                    ",", "\<\"SNP\"\>", ",", "\<\"LinkageGroup\"\>", 
                    ",", "\<\"Position(cM)\"\>"}], "}"}], "}"}], ",", 
                    "MagicMap`Private`mapy"}], "]"}]}], ";", 
                    RowBox[{
                    RowBox[{"MagicMap`Private`res", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", 
                    RowBox[{"2", ";;", "4"}]}], "\[RightDoubleBracket]"}], 
                    "=", "MagicMap`Private`mapx"}], ";"}]}], "]"}], ";", 
                    RowBox[{
                    RowBox[{"MagicMap`Private`res", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{"2", ";;", "All"}], ",", "9"}], 
                    "\[RightDoubleBracket]"}], "=", 
                    RowBox[{
                    RowBox[{"MagicMap`Private`res", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{"2", ";;", "All"}], ",", "9"}], 
                    "\[RightDoubleBracket]"}], "/.", "\[VeryThinSpace]", 
                    RowBox[{"{", 
                    RowBox[{"\<\"NA\"\>", "\[Rule]", 
                    RowBox[{"Missing", "[", "]"}]}], "}"}]}]}], ";", 
                    RowBox[{"MagicMap`Private`res", "=", 
                    RowBox[{"SplitBy", "[", 
                    RowBox[{
                    RowBox[{"MagicMap`Private`res", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ";;", "All"}], "\[RightDoubleBracket]"}], 
                    ",", 
                    RowBox[{
                    RowBox[{
                    "#1", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}], "&"}]}], "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{"MagicMap`Private`isordering", ",", 
                    RowBox[{
                    RowBox[{"MagicMap`Private`data", "=", 
                    RowBox[{"MagicMap`Private`res", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "All", ",", 
                    RowBox[{"{", 
                    RowBox[{"5", ",", "6"}], "}"}]}], 
                    "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "MagicMap`Private`xmin", ",", "MagicMap`Private`xmax"}], 
                    "}"}], "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"#1", "@@", 
                    RowBox[{"MagicMap`Private`data", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "All", ",", "1"}], 
                    "\[RightDoubleBracket]"}]}], "&"}], ")"}], "/@", 
                    RowBox[{"{", 
                    RowBox[{"Min", ",", "Max"}], "}"}]}]}], ";", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "MagicMap`Private`ymin", ",", "MagicMap`Private`ymax"}], 
                    "}"}], "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"#1", "@@", 
                    RowBox[{"MagicMap`Private`data", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "All", ",", "2"}], 
                    "\[RightDoubleBracket]"}]}], "&"}], ")"}], "/@", 
                    RowBox[{"{", 
                    RowBox[{"Min", ",", "Max"}], "}"}]}]}], ";", 
                    RowBox[{"MagicMap`Private`temp", "=", 
                    RowBox[{
                    RowBox[{"Accumulate", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Length", "[", "#1", "]"}], "&"}], ")"}], "/@", 
                    "MagicMap`Private`index"}], "]"}], "+", "0.5`"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{"MagicMap`Private`isexistungroup", ",", 
                    RowBox[{"MagicMap`Private`temp", "=", 
                    RowBox[{"Most", "[", "MagicMap`Private`temp", "]"}]}]}], 
                    "]"}], ";", 
                    RowBox[{"MagicMap`Private`g1", "=", 
                    RowBox[{"ListPlot", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Thread", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "MagicMap`Private`xmin", ",", "MagicMap`Private`xmax"}], 
                    "}"}], ",", "#1"}], "}"}], "]"}], "&"}], ")"}], "/@", 
                    RowBox[{"Prepend", "[", 
                    RowBox[{"MagicMap`Private`temp", ",", "0"}], "]"}]}], ",", 
                    RowBox[{"Joined", "\[Rule]", "True"}], ",", 
                    RowBox[{
                    "PlotStyle", "\[Rule]", "MagicMap`Private`linestyle"}]}], 
                    "]"}]}], ";", 
                    RowBox[{"MagicMap`Private`temp", "=", 
                    RowBox[{
                    RowBox[{"Accumulate", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Length", "[", "#1", "]"}], "&"}], ")"}], "/@", 
                    "MagicMap`Private`res"}], "]"}], "+", "0.5`"}]}], ";", 
                    RowBox[{"MagicMap`Private`g2", "=", 
                    RowBox[{"ListPlot", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Thread", "[", 
                    RowBox[{"{", 
                    RowBox[{"#1", ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "MagicMap`Private`ymax"}], "}"}]}], 
                    "}"}], "]"}], "&"}], ")"}], "/@", 
                    RowBox[{"Prepend", "[", 
                    RowBox[{"MagicMap`Private`temp", ",", "0"}], "]"}]}], ",", 
                    RowBox[{"Joined", "\[Rule]", "True"}], ",", 
                    RowBox[{
                    "PlotStyle", "\[Rule]", "MagicMap`Private`linestyle"}]}], 
                    "]"}]}], ";", 
                    RowBox[{"MagicMap`Private`gg", "=", 
                    RowBox[{"Show", "[", 
                    RowBox[{
                    RowBox[{"ListPlot", "[", 
                    RowBox[{
                    "MagicMap`Private`data", ",", "MagicMap`Private`opts", 
                    ",", 
                    RowBox[{"Frame", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"True", ",", "False"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"AxesOrigin", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"0.9`", " ", "MagicMap`Private`y00"}]}], "}"}]}], 
                    ",", 
                    RowBox[{"Axes", "\[Rule]", "None"}]}], "]"}], ",", 
                    "MagicMap`Private`g1", ",", "MagicMap`Private`g2"}], 
                    "]"}]}]}], ",", 
                    RowBox[{
                    RowBox[{"MagicMap`Private`data", "=", 
                    RowBox[{
                    RowBox[{"MagicMap`Private`res", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "All", ",", 
                    RowBox[{"{", 
                    RowBox[{"4", ",", "9"}], "}"}]}], 
                    "\[RightDoubleBracket]"}], "/.", "\[VeryThinSpace]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Missing", "[", "]"}], "\[Rule]", "0"}], 
                    "}"}]}]}], ";", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "MagicMap`Private`xmin", ",", "MagicMap`Private`xmax"}], 
                    "}"}], "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"#1", "@@", 
                    RowBox[{"MagicMap`Private`data", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "All", ",", "1"}], 
                    "\[RightDoubleBracket]"}]}], "&"}], ")"}], "/@", 
                    RowBox[{"{", 
                    RowBox[{"Min", ",", "Max"}], "}"}]}]}], ";", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "MagicMap`Private`ymin", ",", "MagicMap`Private`ymax"}], 
                    "}"}], "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"#1", "@@", 
                    RowBox[{"MagicMap`Private`data", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "All", ",", "2"}], 
                    "\[RightDoubleBracket]"}]}], "&"}], ")"}], "/@", 
                    RowBox[{"{", 
                    RowBox[{"Min", ",", "Max"}], "}"}]}]}], ";", 
                    RowBox[{"MagicMap`Private`g1", "=", 
                    RowBox[{"ListPlot", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Thread", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "MagicMap`Private`xmin", ",", "MagicMap`Private`xmax"}], 
                    "}"}], ",", "#1"}], "}"}], "]"}], "&"}], ")"}], "/@", 
                    RowBox[{"Prepend", "[", 
                    RowBox[{"MagicMap`Private`g2yy", ",", "0"}], "]"}]}], ",", 
                    RowBox[{"Joined", "\[Rule]", "True"}], ",", 
                    RowBox[{
                    "PlotStyle", "\[Rule]", "MagicMap`Private`linestyle"}]}], 
                    "]"}]}], ";", 
                    RowBox[{"MagicMap`Private`temp", "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Max", "[", "#1", "]"}], "&"}], ")"}], "/@", 
                    RowBox[{"MagicMap`Private`data", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "All", ",", "1"}], 
                    "\[RightDoubleBracket]"}]}]}], ";", 
                    RowBox[{"MagicMap`Private`g2", "=", 
                    RowBox[{"ListPlot", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Thread", "[", 
                    RowBox[{"{", 
                    RowBox[{"#1", ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "MagicMap`Private`ymax"}], "}"}]}], 
                    "}"}], "]"}], "&"}], ")"}], "/@", 
                    RowBox[{"Prepend", "[", 
                    RowBox[{
                    "MagicMap`Private`temp", ",", "MagicMap`Private`xmin"}], 
                    "]"}]}], ",", 
                    RowBox[{"Joined", "\[Rule]", "True"}], ",", 
                    RowBox[{
                    "PlotStyle", "\[Rule]", "MagicMap`Private`linestyle"}]}], 
                    "]"}]}], ";", 
                    RowBox[{"MagicMap`Private`gg", "=", 
                    RowBox[{"Show", "[", 
                    RowBox[{
                    RowBox[{"ListPlot", "[", 
                    RowBox[{
                    "MagicMap`Private`data", ",", "MagicMap`Private`opts", 
                    ",", 
                    RowBox[{"Frame", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"True", ",", "False"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"AxesOrigin", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"0.9`", " ", "MagicMap`Private`y00"}]}], "}"}]}], 
                    ",", 
                    RowBox[{"Axes", "\[Rule]", "None"}]}], "]"}], ",", 
                    "MagicMap`Private`g1", ",", "MagicMap`Private`g2"}], 
                    "]"}]}]}]}], "]"}], ";", "MagicMap`Private`gg"}]}], 
                    "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"MagicMap`plotMapComparison\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"plotMapComparison[estmap, refmap, \
isordering,linestyle] plot estimated map estmap vs reference map refmap. \
Comparsons are in terms of marker ordering (isordering = True) or marker \
position (isordering = False). The style of chromosome boundary lines is \
specified by linestyle. \"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "plotMapComparison[estmap, refmap, isordering,linestyle] plot estimated \
map estmap vs reference map refmap. Comparsons are in terms of marker \
ordering (isordering = True) or marker position (isordering = False). The \
style of chromosome boundary lines is specified by linestyle. ", 
    "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
    "DownValues" -> 
    Information`InformationValueForm[
     DownValues, MagicMap`plotMapComparison, {MagicMap`plotMapComparison[
         Pattern[MagicMap`Private`inputmapx, 
          Blank[]], 
         Pattern[MagicMap`Private`inputmapy, 
          Blank[]], 
         Pattern[MagicMap`Private`isordering, 
          Blank[]], 
         Pattern[MagicMap`Private`linestyle, 
          Blank[]], 
         Pattern[MagicMap`Private`opts, 
          OptionsPattern[]]] :> 
       Module[{MagicMap`Private`mapx = MagicMap`Private`inputmapx, 
          MagicMap`Private`mapy = MagicMap`Private`inputmapy, 
          MagicMap`Private`temp, MagicMap`Private`refrule, 
          MagicMap`Private`isexistungroup, MagicMap`Private`nungroup, 
          MagicMap`Private`index, MagicMap`Private`order, 
          MagicMap`Private`pos, MagicMap`Private`res, MagicMap`Private`data, 
          MagicMap`Private`y00, MagicMap`Private`xmin, MagicMap`Private`xmax, 
          MagicMap`Private`ymin, MagicMap`Private`ymax, MagicMap`Private`g1, 
          MagicMap`Private`g2, MagicMap`Private`gg, MagicMap`Private`g2yy, 
          MagicMap`Private`i}, If[
           StringQ[MagicMap`Private`mapx], If[
             Not[
              FileExistsQ[MagicMap`Private`mapx]], 
             Print["File ", MagicMap`Private`mapx, " does not exist!"]; 
             Return[$Failed]]; 
           MagicMap`Private`mapx = Import[MagicMap`Private`mapx, "CSV"]; 
           Null]; If[
           StringQ[MagicMap`Private`mapy], If[
             Not[
              FileExistsQ[MagicMap`Private`mapy]], 
             Print["File ", MagicMap`Private`mapy, " does not exist!"]; 
             Return[$Failed]]; 
           MagicMap`Private`mapy = Import[MagicMap`Private`mapy, "CSV"]; 
           Null]; If[
           Not[
            DuplicateFreeQ[
             Part[MagicMap`Private`mapx, 
              Span[2, All], 1]]], Print["MarkerIDs are not unique in mapx!"]; 
           Abort[]]; If[
           Not[
            DuplicateFreeQ[
             Part[MagicMap`Private`mapy, 
              Span[2, All], 1]]], Print["MarkerIDs are not unique in mapy!"]; 
           Abort[]]; MagicMap`Private`temp = Intersection[
            Part[MagicMap`Private`mapx, 
             Span[2, All], 1], 
            Part[MagicMap`Private`mapy, 
             Span[2, All], 1]]; 
         MagicMap`Private`temp = ReplaceAll[MagicMap`Private`temp, 
            Dispatch[
             Thread[Part[MagicMap`Private`mapx, 
                Span[2, All], 1] -> Range[2, 
                Length[MagicMap`Private`mapx]]]]]; 
         MagicMap`Private`mapx = Part[MagicMap`Private`mapx, 
            Join[{1}, 
             Sort[MagicMap`Private`temp]]]; 
         If[MagicMap`Private`isordering, 
           MagicMap`Private`mapx = Part[MagicMap`Private`mapx, All, 
              Span[1, 2]]; 
           MagicMap`Private`mapy = Part[MagicMap`Private`mapy, All, 
              Span[1, 2]], 
           MagicMap`Private`mapx = Part[MagicMap`Private`mapx, All, 
              Span[1, 3]]; 
           MagicMap`Private`mapy = Part[MagicMap`Private`mapy, All, 
              Span[1, 3]]; Null]; MagicMap`Private`temp = SplitBy[
            Part[MagicMap`Private`mapx, 
             Span[2, All]], Part[#, 2]& ]; If[
           Not[MagicMap`Private`isordering], MagicMap`Private`pos = Flatten[
              Position[
               Part[MagicMap`Private`temp, All, 1, 2], "ungrouped"]]; 
           Part[MagicMap`Private`temp, MagicMap`Private`pos, All, 3] = 0.; 
           BlockRandom[SeedRandom[1234]; MagicMap`Private`i = Mean[
                
                Map[(Part[#, -1, 3] - Part[#, 1, 3]) Length[#]^(-1)/2& , 
                 MagicMap`Private`temp]]; 
             Part[MagicMap`Private`temp, MagicMap`Private`pos, All, 3] = 
              Map[RandomReal[{0, MagicMap`Private`i Length[#]}, 
                 Length[#]]& , 
                Part[MagicMap`Private`temp, MagicMap`Private`pos, All, 3]]; 
             Part[MagicMap`Private`temp, MagicMap`Private`pos, -1, 3] = 
              Map[Max[#]& , 
                Part[MagicMap`Private`temp, MagicMap`Private`pos, All, 3]]]; 
           Null]; If[
           Not[MagicMap`Private`isordering], 
           AddTo[
            Part[MagicMap`Private`temp, All, All, 3], 
            Join[{0}, 
             Most[
              Accumulate[
               Part[MagicMap`Private`temp, All, -1, 3]]]]]]; 
         Part[MagicMap`Private`mapx, 
            Span[2, All]] = Flatten[MagicMap`Private`temp, 1]; 
         MagicMap`Private`refrule = SplitBy[
            Join[
             Part[MagicMap`Private`mapx, 
              Span[2, All], 
              Span[1, 2]], 
             Map[List, 
              Range[Length[MagicMap`Private`mapx] - 1]], 2], Part[#, 2]& ]; 
         MagicMap`Private`refrule = Map[Apply[Rule, #]& , 
            Part[MagicMap`Private`refrule, All, All, {1, 3}], {2}]; 
         MagicMap`Private`mapy = SplitBy[
            Part[MagicMap`Private`mapy, 
             Span[2, All]], Part[#, 2]& ]; 
         MagicMap`Private`isexistungroup = MatchQ[
            Part[MagicMap`Private`mapy, -1, 1, 2], "ungrouped"]; 
         MagicMap`Private`nungroup = If[MagicMap`Private`isexistungroup, 
            Length[
             Part[MagicMap`Private`mapy, -1]], 0]; 
         MagicMap`Private`index = ReplaceAll[
            Part[MagicMap`Private`mapy, All, All, 1], 
            Dispatch[
             Flatten[MagicMap`Private`refrule]]]; 
         If[MagicMap`Private`isexistungroup, MagicMap`Private`order = Append[
             Ordering[
              Map[Median[
                Select[#, NumberQ]]& , 
               Most[MagicMap`Private`index]]], 
             Length[MagicMap`Private`index]], MagicMap`Private`order = 
           Ordering[
             Map[Median[
               Select[#, NumberQ]]& , MagicMap`Private`index]]]; {
           MagicMap`Private`mapy, MagicMap`Private`index} = 
          Map[Part[#, MagicMap`Private`order]& , {
            MagicMap`Private`mapy, MagicMap`Private`index}]; 
         MagicMap`Private`temp = If[MagicMap`Private`isexistungroup, 
            Most[MagicMap`Private`index], MagicMap`Private`index]; 
         MagicMap`Private`pos = Flatten[
            Position[
             Map[KendallTau[#, 
               N[
                Range[
                 Length[#]]]]& , MagicMap`Private`temp], 
             PatternTest[
              Blank[], Negative]]]; 
         Part[MagicMap`Private`index, MagicMap`Private`pos] = 
          Map[Reverse[#]& , 
            Part[MagicMap`Private`index, MagicMap`Private`pos]]; 
         Part[MagicMap`Private`mapy, MagicMap`Private`pos] = 
          Table[MagicMap`Private`temp = Reverse[
               Part[MagicMap`Private`mapy, 
                Part[MagicMap`Private`pos, MagicMap`Private`i]]]; If[
              Not[MagicMap`Private`isordering], 
              Part[MagicMap`Private`temp, All, 3] = Join[{0}, 
                Accumulate[
                 Reverse[
                  Differences[
                   Part[MagicMap`Private`mapy, 
                    Part[MagicMap`Private`pos, MagicMap`Private`i], All, 
                    3]]]]]]; MagicMap`Private`temp, {MagicMap`Private`i, 
             Length[MagicMap`Private`pos]}]; 
         MagicMap`Private`temp = If[MagicMap`Private`isexistungroup, 
            Most[MagicMap`Private`mapy], MagicMap`Private`mapy]; If[
           Not[MagicMap`Private`isordering], AddTo[
             Part[MagicMap`Private`temp, All, All, 3], 
             Join[{0}, 
              Most[
               Accumulate[
                Part[MagicMap`Private`temp, All, -1, 3]]]]]; 
           MagicMap`Private`g2yy = Part[MagicMap`Private`temp, All, -1, 3]; 
           Null]; If[
          MagicMap`Private`isexistungroup, Part[MagicMap`Private`mapy, 
             Span[1, -2]] = MagicMap`Private`temp, 
           MagicMap`Private`mapy = MagicMap`Private`temp; Null]; 
         MagicMap`Private`mapy = Flatten[
            MapThread[Join[
              Transpose[{#, 
                Range[
                 Length[#]]}], #2, 2]& , {
             MagicMap`Private`index, MagicMap`Private`mapy}], 1]; 
         Part[MagicMap`Private`mapy, All, 2] = Range[
            Length[MagicMap`Private`mapy]]; 
         If[MagicMap`Private`isexistungroup, 
           If[MagicMap`Private`isordering, Part[MagicMap`Private`mapy, 
              Span[-MagicMap`Private`nungroup, All], 2] = (
             MagicMap`Private`y00 = -
              Ceiling[(Length[MagicMap`Private`mapy] - 
                 MagicMap`Private`nungroup)/25]), Part[MagicMap`Private`mapy, 
               Span[-MagicMap`Private`nungroup, All], 5] = (
              MagicMap`Private`y00 = -Max[MagicMap`Private`g2yy]/25); Null], 
           Part[MagicMap`Private`mapy, 
             Span[-MagicMap`Private`nungroup, All], 2] = (
            Part[MagicMap`Private`mapy, 
              Span[-MagicMap`Private`nungroup, All], 5] = (
             MagicMap`Private`y00 = 0))]; 
         MagicMap`Private`mapy = SortBy[MagicMap`Private`mapy, First]; 
         MagicMap`Private`res = ConstantArray[0, {
             Length[MagicMap`Private`mapx], 9}]; 
         Part[MagicMap`Private`res, All, 1] = Join[{"No"}, 
            Range[Length[MagicMap`Private`mapx] - 1]]; 
         If[MagicMap`Private`isordering, Part[MagicMap`Private`res, All, 
              Span[5, 8]] = 
            Join[{{"No", "estorder", "SNP", "LinkageGroup"}}, 
              MagicMap`Private`mapy]; Part[MagicMap`Private`res, All, 
              Span[2, 3]] = MagicMap`Private`mapx, 
           Part[MagicMap`Private`res, All, 
              Span[5, 9]] = 
            Join[{{"No", "estorder", "SNP", "LinkageGroup", "Position(cM)"}}, 
              MagicMap`Private`mapy]; Part[MagicMap`Private`res, All, 
              Span[2, 4]] = MagicMap`Private`mapx; Null]; 
         Part[MagicMap`Private`res, 
            Span[2, All], 9] = ReplaceAll[
            Part[MagicMap`Private`res, 
             Span[2, All], 9], {"NA" -> Missing[]}]; 
         MagicMap`Private`res = SplitBy[
            Part[MagicMap`Private`res, 
             Span[2, All]], Part[#, 3]& ]; 
         If[MagicMap`Private`isordering, 
           MagicMap`Private`data = 
            Part[MagicMap`Private`res, All, All, {5, 6}]; {
             MagicMap`Private`xmin, MagicMap`Private`xmax} = Map[Apply[#, 
               Part[MagicMap`Private`data, All, All, 1]]& , {Min, Max}]; {
             MagicMap`Private`ymin, MagicMap`Private`ymax} = Map[Apply[#, 
               Part[MagicMap`Private`data, All, All, 2]]& , {Min, Max}]; 
           MagicMap`Private`temp = Accumulate[
               Map[Length[#]& , MagicMap`Private`index]] + 0.5; 
           If[MagicMap`Private`isexistungroup, MagicMap`Private`temp = 
             Most[MagicMap`Private`temp]]; MagicMap`Private`g1 = ListPlot[
              Map[
              Thread[{{MagicMap`Private`xmin, MagicMap`Private`xmax}, #}]& , 
               Prepend[MagicMap`Private`temp, 0]], Joined -> True, PlotStyle -> 
              MagicMap`Private`linestyle]; MagicMap`Private`temp = Accumulate[
               Map[Length[#]& , MagicMap`Private`res]] + 0.5; 
           MagicMap`Private`g2 = ListPlot[
              Map[Thread[{#, {0, MagicMap`Private`ymax}}]& , 
               Prepend[MagicMap`Private`temp, 0]], Joined -> True, PlotStyle -> 
              MagicMap`Private`linestyle]; MagicMap`Private`gg = Show[
              ListPlot[
              MagicMap`Private`data, MagicMap`Private`opts, 
               Frame -> {{True, False}, {True, False}}, 
               AxesOrigin -> {0, 0.9 MagicMap`Private`y00}, Axes -> None], 
              MagicMap`Private`g1, MagicMap`Private`g2], 
           MagicMap`Private`data = ReplaceAll[
              Part[MagicMap`Private`res, All, All, {4, 9}], {
              Missing[] -> 0}]; {
             MagicMap`Private`xmin, MagicMap`Private`xmax} = Map[Apply[#, 
               Part[MagicMap`Private`data, All, All, 1]]& , {Min, Max}]; {
             MagicMap`Private`ymin, MagicMap`Private`ymax} = Map[Apply[#, 
               Part[MagicMap`Private`data, All, All, 2]]& , {Min, Max}]; 
           MagicMap`Private`g1 = ListPlot[
              Map[
              Thread[{{MagicMap`Private`xmin, MagicMap`Private`xmax}, #}]& , 
               Prepend[MagicMap`Private`g2yy, 0]], Joined -> True, PlotStyle -> 
              MagicMap`Private`linestyle]; 
           MagicMap`Private`temp = Map[Max[#]& , 
              Part[MagicMap`Private`data, All, All, 1]]; 
           MagicMap`Private`g2 = ListPlot[
              Map[Thread[{#, {0, MagicMap`Private`ymax}}]& , 
               Prepend[MagicMap`Private`temp, MagicMap`Private`xmin]], Joined -> 
              True, PlotStyle -> MagicMap`Private`linestyle]; 
           MagicMap`Private`gg = Show[
              ListPlot[
              MagicMap`Private`data, MagicMap`Private`opts, 
               Frame -> {{True, False}, {True, False}}, 
               AxesOrigin -> {0, 0.9 MagicMap`Private`y00}, Axes -> None], 
              MagicMap`Private`g1, MagicMap`Private`g2]]; 
         MagicMap`Private`gg]}], "SubValues" -> None, "DefaultValues" -> None,
     "NValues" -> None, "FormatValues" -> None, "Options" -> None, 
    "Attributes" -> {}, "FullName" -> "MagicMap`plotMapComparison"], 
   False]]], "Output",
 CellChangeTimes->{3.7685654879175944`*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"de4aaf1b-e74d-425f-a98e-698fc4344af4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plotMapComparison", "[", 
  RowBox[{
  "\"\<Example_refmap.csv\>\"", ",", 
   "\"\<Example_magicMapOutput_finalmap.csv\>\"", ",", "True", ",", 
   RowBox[{"Directive", "[", 
    RowBox[{
     RowBox[{"GrayLevel", "[", "0.75", "]"}], ",", "Thin"}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7651671729273953`*^9, 3.7651672726573954`*^9}, {
  3.7651673127753954`*^9, 3.7651673193185954`*^9}, {3.7651673674671955`*^9, 
  3.7651673810979953`*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"8d732ec6-b328-45a0-b615-45d247837925"],

Cell[BoxData[
 GraphicsBox[{{{}, {{
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.007333333333333334], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJx1zrtKA1EUheGNlaWFhYWFioiIiMb7NcdLbiajMVHsBWtfYT/aeSQfwYSs
VawFDgwf+599Zmbz62fyvRQRn7N77uL6bS9cLwhwDS7DVbhism/8c87fy70t
k/+xjXnHZN+Feyb7vnkAj+Chyd4yj80T89Tkd87Mc/PCvIRXJvu1eWPewjuT
vW0WNc24V5Pzg5ou9x4xm+zxpKYZHTU5d1X27KrRU9OMvpqcByp7DtR4VtOM
IeYGDrXHSM2R7TXWG+3xoibnV5U92ccqexmrCavJHm9qMRNWkz0m2DfZ06x8
PlXZy1RNs5rxrhaY7gfOYa6Yw3qxznPFzs32/gDN3nzb
        "]]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
       0.007333333333333334], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxljcltw1AMRIlUInfgEnhxAz44juTlS0LOaYGlqBSWolLihWNjxgKEBz7O
8G+mv/3vl5ntbv+dz+/gD2TRi/Ah/Mh9M10YwiyurXrH2v9Ur2arOY7cS+R7
zqHnmHu+i3dS7lrPRO+Vg685sUd/YPrAuVA/sLcTe685hPAptDPThYE9euov
TL9IDv5aXnKm/so+QNwVb41919g75m0+deNcSG4pIpeSWyVnI7MTurAJY+R3
FvUj+1VoE7ObuOc1NyFyUVyE6KVwFdrMd7qZvc/smzDeuX+uu4wW
        "]]}, 
      {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
       0.007333333333333334], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxdztupAzEMRVGRSpxO9JUCbgUisSfzgrSgUlSKSnEpeWBfOGdg2MxCUnK9
v/7aRURun/fb3xMPheaoj/ZRqdjppeKeVnSjesW5IM/53cbvVKw03CsN97Rh
jTrvzr1oeDfJO7ks2LLgnJLbgu7kQZ7knVye4z51ulKN6tSgJrVTZcX/VVZ0
XdGN3MljNKlzrtOcbNhC1Q33jNw39CBP8k4uO3oZ3z6qO84ZuZPHjndy3qfO
OTlwrhzoeqAb1WkuqEnttCcnejnR9fz3N9VEmwU=
        "]]}, 
      {RGBColor[0.922526, 0.385626, 0.209179], PointSize[
       0.007333333333333334], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJx1zNFphEAUheHLVmAJsx1YwjzmUVLBEMhb1NEKpgRLmBK2hClhS5gSLCHJ
ciWcHyLIjx/nev9Y3z9vZvb28/729aSvKC3e5q3/ePR27GxWD7N6nNUTWrCr
8AbvcFvUw6IeF/UEL/AKb/AOt1U9rOpxVU9owa7C2/V/1LL2uhv8O6CXj1n/
G+GTN6GX56x3BX7AK/rArsGf3tPbsTuxs013w6YeNvURjdhN8ATPaMHuQCt2
D3iDP+EdfsJtVx929bCrj/AIn+DJe3gzWnB34K7+7b4B8amkdA==
        "]]}, 
      {RGBColor[0.528488, 0.470624, 0.701351], PointSize[
       0.007333333333333334], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxdkMttwzAQBYlUoBKYDlSCSiByzUUIkHOE6OMcWYJKYAkqQSWwBJagEuLY
bxHsGDAGb/zI5fr14+vt8yWE8H7//vHxOb6HB/P85Km8K1flUbkpT8qXclIO
4iB2lpcnI+b0mDNgDu8dca+9w+7JeJftYXsW5aJ8zHjX7H2d/bmG3oVeWHyv
W3wvLr7XL97b/2TnEnqjmMUJzOjtYgEP0HonWPGOBn/Bh9X7bvU+rt738AN8
gh/BCb0M7ugV8EDvhK9iA613oRc277vN+7h538MP8Akc0ZvgM/wOX+AP+BO+
wjfwQi/cvO9u3kewv/neAJ8s/2hPO6882TnlbPPF3ebr96LcxEOs4ol3VNxj
5wrmnJhj93Z4V8QetlfCHnYu/e/5C6T32Ac=
        "]]}}, {
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.007333333333333334], AbsoluteThickness[1.6]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
       0.007333333333333334], AbsoluteThickness[1.6]}, 
      {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
       0.007333333333333334], AbsoluteThickness[1.6]}, 
      {RGBColor[0.922526, 0.385626, 0.209179], PointSize[
       0.007333333333333334], AbsoluteThickness[1.6]}, 
      {RGBColor[0.528488, 0.470624, 0.701351], PointSize[
       0.007333333333333334], AbsoluteThickness[
       1.6]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}}, {
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.007333333333333334], AbsoluteThickness[1.6]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
       0.007333333333333334], AbsoluteThickness[1.6]}, 
      {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
       0.007333333333333334], AbsoluteThickness[1.6]}, 
      {RGBColor[0.922526, 0.385626, 0.209179], PointSize[
       0.007333333333333334], AbsoluteThickness[1.6]}, 
      {RGBColor[0.528488, 0.470624, 0.701351], PointSize[
       0.007333333333333334], AbsoluteThickness[
       1.6]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}}}, {{}, {}}}, {{}, {{{}, {}, 
      {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[Tiny], 
       LineBox[{{1., 0.}, {389., 0.}}]}, 
      {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[Tiny], 
       LineBox[{{1., 87.5}, {389., 87.5}}]}, 
      {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[Tiny], 
       LineBox[{{1., 155.5}, {389., 155.5}}]}, 
      {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[Tiny], 
       LineBox[{{1., 225.5}, {389., 225.5}}]}, 
      {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[Tiny], 
       LineBox[{{1., 297.5}, {389., 297.5}}]}, 
      {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[Tiny], 
       LineBox[{{1., 388.5}, {389., 388.5}}]}}, {
      {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[Tiny]}, 
      {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[Tiny]}, 
      {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[Tiny]}, 
      {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[Tiny]}, 
      {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[Tiny]}, 
      {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[Tiny]}}, {
      {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[Tiny]}, 
      {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[Tiny]}, 
      {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[Tiny]}, 
      {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[Tiny]}, 
      {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[Tiny]}, 
      {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
       Tiny]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {
      {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[Tiny]}, 
      {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[Tiny]}, 
      {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[Tiny]}, 
      {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[Tiny]}, 
      {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[Tiny]}, 
      {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
       Tiny]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, {{}, {}}}, \
{{}, {{{}, {}, 
      {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[Tiny], 
       LineBox[{{0., 0.}, {0., 388.}}]}, 
      {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[Tiny], 
       LineBox[{{87.5, 0.}, {87.5, 388.}}]}, 
      {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[Tiny], 
       LineBox[{{156.5, 0.}, {156.5, 388.}}]}, 
      {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[Tiny], 
       LineBox[{{226.5, 0.}, {226.5, 388.}}]}, 
      {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[Tiny], 
       LineBox[{{298.5, 0.}, {298.5, 388.}}]}, 
      {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[Tiny], 
       LineBox[{{389.5, 0.}, {389.5, 388.}}]}}, {
      {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[Tiny]}, 
      {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[Tiny]}, 
      {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[Tiny]}, 
      {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[Tiny]}, 
      {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[Tiny]}, 
      {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[Tiny]}}, {
      {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[Tiny]}, 
      {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[Tiny]}, 
      {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[Tiny]}, 
      {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[Tiny]}, 
      {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[Tiny]}, 
      {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
       Tiny]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {
      {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[Tiny]}, 
      {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[Tiny]}, 
      {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[Tiny]}, 
      {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[Tiny]}, 
      {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[Tiny]}, 
      {GrayLevel[0.75], PointSize[0.012833333333333334`], Thickness[
       Tiny]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0., -14.4},
  DisplayFunction->Identity,
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{519.9999999999993, Automatic},
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 389.}, {-16., 388.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.765167232434595*^9, 3.765167273133395*^9}, {
   3.765167313522395*^9, 3.7651673198815956`*^9}, {3.7651673683751955`*^9, 
   3.765167381784995*^9}, 3.7685654880894747`*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"a18700fc-9f38-487f-ae9a-9e4c2f2c9434"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.765167166963395*^9, 3.7651671685593953`*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"0ecf6fa7-d71d-4ab5-bed6-5251d4dea6d9"]
},
WindowSize->{1536, 781},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
ShowSelection->True,
FrontEndVersion->"12.0 for Microsoft Windows (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 2416, 41, 86, "Input",ExpressionUUID->"e2db6874-9820-4455-8f2a-d02dbbb5962c"],
Cell[2998, 65, 294, 4, 32, "Output",ExpressionUUID->"14d09c12-30e6-4d08-86a2-89cddb3b39c0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3329, 74, 243, 4, 28, "Input",ExpressionUUID->"7098a0dc-0fea-49e3-bd39-bb26c26eeb05"],
Cell[3575, 80, 44031, 912, 141, "Output",ExpressionUUID->"a90b68f9-f020-4623-9e13-0d1ef63be24f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[47643, 997, 261, 4, 28, "Input",ExpressionUUID->"63e1d1b7-9b3d-4ad9-85f2-582e76801f04"],
Cell[47907, 1003, 2619, 48, 122, "Output",ExpressionUUID->"4cb732be-1bc8-419f-9747-fb36b961a7b5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[50563, 1056, 1178, 20, 105, "Input",ExpressionUUID->"05387cc4-fbfc-4b70-b243-5f629c17f25f"],
Cell[51744, 1078, 186, 2, 32, "Output",ExpressionUUID->"096b6f43-d02f-4331-bdb9-b26a7e8649f7"],
Cell[51933, 1082, 207, 2, 32, "Output",ExpressionUUID->"a8d646bc-4bb1-4350-ba5c-709dfe80a9ca"],
Cell[52143, 1086, 205, 2, 32, "Output",ExpressionUUID->"d9b12db9-443b-419d-aee5-a86b0d20cd61"],
Cell[52351, 1090, 173, 2, 32, "Output",ExpressionUUID->"b8729b02-9761-4afc-ad56-2a70553e9386"]
}, Open  ]],
Cell[52539, 1095, 479, 11, 48, "Input",ExpressionUUID->"bf53121e-49b8-4c5b-b9aa-99cc175d12d5"],
Cell[CellGroupData[{
Cell[53043, 1110, 1832, 46, 124, "Input",ExpressionUUID->"ca5facc7-63f5-4d82-94f3-b7fe8b34631a"],
Cell[54878, 1158, 200, 2, 32, "Output",ExpressionUUID->"4957f420-e1e2-44d8-b6ff-7c3a9a3cc113"],
Cell[55081, 1162, 1672, 34, 181, "Output",ExpressionUUID->"b3d3c932-c4c4-4df6-a7ca-72384db189d6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[56790, 1201, 210, 3, 28, "Input",ExpressionUUID->"25d9e3af-4351-4e66-86e0-0dda30acf2b1"],
Cell[57003, 1206, 2548, 47, 122, "Output",ExpressionUUID->"079547f1-3c87-4ce2-a0c8-820296e033f1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[59588, 1258, 7113, 105, 67, "Input",ExpressionUUID->"e952bd3e-7cab-4dff-9caf-571a8c265635"],
Cell[CellGroupData[{
Cell[66726, 1367, 343, 6, 22, "Print",ExpressionUUID->"d24cd7b6-3940-4b20-a858-e606584b90a4"],
Cell[67072, 1375, 928, 20, 41, "Print",ExpressionUUID->"9ae1bd3f-4a7c-4e90-b625-23f1c719c7bb"],
Cell[68003, 1397, 421, 9, 22, "Print",ExpressionUUID->"1ce7b23c-1774-4c0e-9689-0dbc1a6463ec"],
Cell[68427, 1408, 622, 13, 22, "Print",ExpressionUUID->"5ab649cb-a3af-498f-840e-e80ee53e3854"],
Cell[69052, 1423, 343, 6, 22, "Print",ExpressionUUID->"14f42058-65e6-429e-affd-c9ad1d5c5894"],
Cell[69398, 1431, 656, 14, 22, "Print",ExpressionUUID->"e8e4b262-0564-4bfc-8e81-18805545b92d"],
Cell[70057, 1447, 444, 10, 22, "Print",ExpressionUUID->"2a34173f-dffe-4b9c-aba4-fa9c5a5f4a04"],
Cell[70504, 1459, 582, 13, 22, "Print",ExpressionUUID->"455ec883-3372-4748-ad22-17fbebaa0451"],
Cell[71089, 1474, 645, 14, 22, "Print",ExpressionUUID->"88da25e2-7456-4a14-aa7a-fd280b000fcc"],
Cell[71737, 1490, 345, 7, 22, "Print",ExpressionUUID->"0765fa24-04c3-427d-8f51-b37cd2692a7e"],
Cell[72085, 1499, 652, 14, 22, "Print",ExpressionUUID->"0b0cd575-6014-472f-bc6c-b96f932af9ff"],
Cell[72740, 1515, 619, 14, 22, "Print",ExpressionUUID->"677a13cc-b460-4720-92b0-2453343dd7fd"],
Cell[73362, 1531, 443, 11, 22, "Print",ExpressionUUID->"02b64273-ec64-4f4d-9164-40d9f7c94402"],
Cell[73808, 1544, 842, 17, 22, "Print",ExpressionUUID->"e4a7707b-e9b4-4b38-b0d0-20a74558623c"],
Cell[74653, 1563, 471, 12, 22, "Print",ExpressionUUID->"0f44becc-1052-4791-8230-6c92a2f5841b"],
Cell[75127, 1577, 446, 10, 22, "Print",ExpressionUUID->"1fbe4d2f-fb33-4d68-9f3f-2e62695af8a7"],
Cell[75576, 1589, 38209, 699, 369, 17793, 363, "CachedBoxData", "BoxData", "Print",ExpressionUUID->"265fb88d-5567-4ac0-8108-5e65b5431e31"],
Cell[113788, 2290, 627, 13, 22, "Print",ExpressionUUID->"31170729-f1e0-4b11-9090-fb28eba9457f"],
Cell[114418, 2305, 342, 6, 22, "Print",ExpressionUUID->"361ff002-2c9a-4a37-87e4-a42156b32265"],
Cell[114763, 2313, 789, 17, 22, "Print",ExpressionUUID->"db427b64-6919-4d6b-a1a9-24c000be30ee"],
Cell[115555, 2332, 415, 9, 22, "Print",ExpressionUUID->"d8f0b36f-f1fa-40aa-b61e-4e289740b648"],
Cell[115973, 2343, 552, 13, 22, "Print",ExpressionUUID->"eee1157e-4769-4cfc-9071-27225367629e"],
Cell[116528, 2358, 598, 15, 22, "Print",ExpressionUUID->"93d20184-2c41-47a2-bddf-3ce448378e7c"],
Cell[117129, 2375, 597, 15, 22, "Print",ExpressionUUID->"3273e912-471b-4d3e-92a7-f7c7ca15d240"],
Cell[117729, 2392, 600, 15, 22, "Print",ExpressionUUID->"011b6353-baf5-47d9-8518-c7828d13ca37"],
Cell[118332, 2409, 605, 15, 22, "Print",ExpressionUUID->"1aceda87-43fb-414b-83d0-705e4439b05c"],
Cell[118940, 2426, 67249, 1189, 345, "Print",ExpressionUUID->"e2654f26-5a4e-41d8-845e-6dc290726e75"],
Cell[186192, 3617, 630, 15, 22, "Print",ExpressionUUID->"05623e5f-96da-4d93-8676-734f1fc6430a"],
Cell[186825, 3634, 657, 14, 22, "Print",ExpressionUUID->"b06845a5-2204-46e3-ac56-14845d964725"],
Cell[187485, 3650, 344, 6, 22, "Print",ExpressionUUID->"40751a23-a459-43ce-ac82-112e8756ec0b"],
Cell[187832, 3658, 34066, 660, 336, "Print",ExpressionUUID->"926cfaba-91af-4ce0-8e54-448be791355a"],
Cell[221901, 4320, 647, 14, 22, "Print",ExpressionUUID->"6ad6cad8-e439-4a68-849d-8de727bd9653"],
Cell[222551, 4336, 343, 6, 22, "Print",ExpressionUUID->"53bf0111-959d-4be7-bbc2-faf356d4c782"]
}, Open  ]],
Cell[222909, 4345, 234, 4, 32, "Output",ExpressionUUID->"9fbe5074-430f-46a6-bd89-13a0d1ab5553"],
Cell[223146, 4351, 816, 15, 52, "Output",ExpressionUUID->"5817211e-6843-4deb-a63a-9d1a6f8d6a5a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[223999, 4371, 456, 8, 28, "Input",ExpressionUUID->"15ff962c-23c9-450d-8e4f-24c7541adee7"],
Cell[224458, 4381, 6088, 123, 985, "Output",ExpressionUUID->"c2d3197f-989a-466d-845f-b4b202bbef2b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[230583, 4509, 209, 3, 28, "Input",ExpressionUUID->"15795b38-66ec-4fdc-a98f-9dca7615d941"],
Cell[230795, 4514, 64949, 1340, 117, "Output",ExpressionUUID->"de4aaf1b-e74d-425f-a98e-698fc4344af4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[295781, 5859, 555, 12, 28, "Input",ExpressionUUID->"8d732ec6-b328-45a0-b615-45d247837925"],
Cell[296339, 5873, 9905, 172, 342, "Output",ExpressionUUID->"a18700fc-9f38-487f-ae9a-9e4c2f2c9434"]
}, Open  ]],
Cell[306259, 6048, 173, 2, 28, "Input",ExpressionUUID->"0ecf6fa7-d71d-4ab5-bed6-5251d4dea6d9"]
}
]
*)

